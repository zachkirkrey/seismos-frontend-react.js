{"ast":null,"code":"import _toConsumableArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button}from'antd';import TableHeadersUtil from\"util/TableHeaderUtil\";import Grid from\"components/Grid/Grid\";import _ from\"lodash\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function ClientInfo(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),clientInfoGrid=_useState2[0],setClientInfoGrid=_useState2[1];var getClientInfoGridRow=function getClientInfoGridRow(t){return t.rows.map(function(label){var columns=[];TableHeadersUtil.clientInfoFormTableData.columns.map(function(column){columns.push({value:\"\",field:column.field,required:column.required});return column;});return columns;});};var populateClientInfoGrid=function populateClientInfoGrid(){setClientInfoGrid(TableHeadersUtil.clientInfoFormTableData.grid.reduce(function(rows,t,rowIdx){return rows.concat(getClientInfoGridRow(t));},[]));};var addNewClient=function addNewClient(e){e.preventDefault();var columns=[];TableHeadersUtil.clientInfoFormTableData.columns.map(function(column){columns.push({value:\"\",field:column.field,required:column.required});return column;});var newClientInfoGrid=[].concat(_toConsumableArray(clientInfoGrid),[columns]);setClientInfoGrid(newClientInfoGrid);};var handleClientInfoGridChanged=function handleClientInfoGridChanged(updatedGridData){props.setFormValue(updatedGridData);setClientInfoGrid(updatedGridData);};var gotoNextStep=function gotoNextStep(){var isClientInfoValid=true;var validatedClientGrid=_.cloneDeep(clientInfoGrid);validatedClientGrid.map(function(row){row.map(function(cell){if(cell.required&&cell.value===\"\"){isClientInfoValid=false;cell.className='cell-error';}return cell;});return row;});if(!isClientInfoValid){handleClientInfoGridChanged(validatedClientGrid);}else{props.next();}};useState(function(){if(props.formValues!=null){props.formValues&&setClientInfoGrid(props.formValues);}else{populateClientInfoGrid();}},props);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",style:{width:'60%',marginLeft:'auto',marginRight:'auto'},children:[/*#__PURE__*/_jsx(Grid,{columns:TableHeadersUtil.clientInfoFormTableData.columns,grid:clientInfoGrid,gridValueChanged:handleClientInfoGridChanged}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lightBlue-600 mt-2 cursor-pointer inline-block\",onClick:function onClick(e){return addNewClient(e);},children:\"+ Add a new client\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:function onClick(e){gotoNextStep();},children:\"Next\"})})]});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/ClientInfo.js"],"names":["React","useState","Button","TableHeadersUtil","Grid","_","ClientInfo","props","clientInfoGrid","setClientInfoGrid","getClientInfoGridRow","t","rows","map","label","columns","clientInfoFormTableData","column","push","value","field","required","populateClientInfoGrid","grid","reduce","rowIdx","concat","addNewClient","e","preventDefault","newClientInfoGrid","handleClientInfoGridChanged","updatedGridData","setFormValue","gotoNextStep","isClientInfoValid","validatedClientGrid","cloneDeep","row","cell","className","next","formValues","width","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport _ from \"lodash\";\n\nexport default function ClientInfo(props) {\n    \n    const [clientInfoGrid, setClientInfoGrid] = useState([]);\n\n    const getClientInfoGridRow = (t) => {\n        return t.rows.map(label => {\n            const columns = [];\n            TableHeadersUtil.clientInfoFormTableData.columns.map(column => {\n                columns.push({ value: \"\", field: column.field, required: column.required });\n                return column;\n            })\n            return columns;\n        })\n    }\n\n    const populateClientInfoGrid = () => {\n        setClientInfoGrid(TableHeadersUtil.clientInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            return rows.concat(getClientInfoGridRow(t));\n        }, []));\n    }\n\n    const addNewClient = (e) => {\n        e.preventDefault();\n        const columns = [];\n        TableHeadersUtil.clientInfoFormTableData.columns.map(column => {\n            columns.push({ value: \"\", field: column.field, required: column.required });\n            return column;\n        })\n        const newClientInfoGrid = [\n            ...clientInfoGrid,\n            columns\n        ];\n        setClientInfoGrid(newClientInfoGrid);\n    }\n\n    const handleClientInfoGridChanged = (updatedGridData) => {\n        props.setFormValue(updatedGridData);\n        setClientInfoGrid(updatedGridData);\n    }\n\n    const gotoNextStep = () => {\n        let isClientInfoValid = true;\n        const validatedClientGrid = _.cloneDeep(clientInfoGrid);\n        validatedClientGrid.map(row => {\n            row.map(cell => {\n                if(cell.required && cell.value === \"\") {\n                    isClientInfoValid = false;\n                    cell.className = 'cell-error';\n                }\n                return cell;\n            })\n            return row;\n        });\n\n        if(!isClientInfoValid) {\n            handleClientInfoGridChanged(validatedClientGrid);\n        } else {\n            props.next();\n        }\n    }\n\n    useState(() => {\n        if(props.formValues != null) {\n            props.formValues && setClientInfoGrid(props.formValues);\n        } else {\n            populateClientInfoGrid();\n        }\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\" style={{width: '60%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Grid \n                    columns={TableHeadersUtil.clientInfoFormTableData.columns}\n                    grid={clientInfoGrid}\n                    gridValueChanged={handleClientInfoGridChanged}\n                ></Grid>\n                <div className=\"text-lightBlue-600 mt-2 cursor-pointer inline-block\" onClick={(e) => addNewClient(e)}>+ Add a new client</div>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {gotoNextStep()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}