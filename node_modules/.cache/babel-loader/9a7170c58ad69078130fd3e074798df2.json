{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/NewProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, PageHeader, Button, Steps, Form, Input, Checkbox } from 'antd';\nimport { useHistory } from \"react-router\";\nimport JobInfo from \"components/Forms/JobInfo\"; // components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Step\n} = Steps;\nconst steps = [{\n  title: 'Job Info',\n  content: /*#__PURE__*/_jsxDEV(JobInfo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 18\n  }, this)\n}, {\n  title: 'Well Info',\n  content: 'Well Info'\n}, {\n  title: 'Well Volume',\n  content: 'Well Volume'\n}, {\n  title: 'Client Info',\n  content: 'Client Info'\n}, {\n  title: 'Crew Info',\n  content: 'Crew Info'\n}, {\n  title: 'Equipment',\n  content: 'Equipment'\n}];\nexport default function NewProject() {\n  _s();\n\n  const history = useHistory();\n  const [current, setCurrent] = useState(0);\n\n  const next = () => {\n    setCurrent(current + 1);\n  };\n\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"80vh\"\n      },\n      className: \"flex justify-center items-center bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"900px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          ghost: false,\n          onBack: () => window.history.back(),\n          title: \"Fill in the information below to create a new project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Steps, {\n            progressDot: true,\n            current: current,\n            children: steps.map(item => /*#__PURE__*/_jsxDEV(Step, {\n              title: item.title,\n              className: \"mb-6\"\n            }, item.title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"steps-content mb-6\",\n            children: steps[current].content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"steps-action flex justify-between\",\n            children: [current > 0 && /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: '0 8px'\n              },\n              onClick: () => prev(),\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), current < steps.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: () => next(),\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), current === steps.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: e => console.log(e),\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(NewProject, \"VnZSY0Qha8X0/ZdNVEwdObSyR8c=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/NewProject.js"],"names":["React","useState","Card","PageHeader","Button","Steps","Form","Input","Checkbox","useHistory","JobInfo","Step","steps","title","content","NewProject","history","current","setCurrent","next","prev","minHeight","width","window","back","map","item","margin","length","e","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, PageHeader, Button, Steps, Form, Input, Checkbox } from 'antd';\nimport { useHistory } from \"react-router\";\nimport JobInfo from \"components/Forms/JobInfo\";\n\n// components\n\nconst { Step } = Steps;\n\nconst steps = [\n    {\n        title: 'Job Info',\n        content: <JobInfo></JobInfo>\n    },\n    {\n        title: 'Well Info',\n        content: 'Well Info'\n    },\n    {\n        title: 'Well Volume',\n        content: 'Well Volume'\n    },\n    {\n        title: 'Client Info',\n        content: 'Client Info'\n    },\n    {\n        title: 'Crew Info',\n        content: 'Crew Info'\n    },\n    {\n        title: 'Equipment',\n        content: 'Equipment'\n    }\n  ];\n\nexport default function NewProject() {\n    const history = useHistory();\n\n    const [current, setCurrent] = useState(0);\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div style={{width: \"900px\"}}>\n                    <PageHeader\n                        ghost={false}\n                        onBack={() => window.history.back()}\n                        title=\"Fill in the information below to create a new project\"\n                    >\n                    </PageHeader>\n                        <Card>\n                            <Steps progressDot current={current}>\n                                {\n                                    steps.map(item => (\n                                        <Step key={item.title} title={item.title} className=\"mb-6\"/>\n                                    ))\n                                }\n                            </Steps>\n                            <div className=\"steps-content mb-6\">\n                                {steps[current].content}\n                            </div>\n                            <div className=\"steps-action flex justify-between\">\n                                {current > 0 && (\n                                <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n                                    Previous\n                                </Button>\n                                )}\n                                {current < steps.length - 1 && (\n                                <Button type=\"primary\" onClick={() => next()}>\n                                    Next\n                                </Button>\n                                )}\n                                {current === steps.length - 1 && (\n                                <Button type=\"primary\" onClick={(e) => console.log(e)}>\n                                    Done\n                                </Button>\n                                )}\n                            </div>\n                                {/* <Steps progressDot current={stepIndex} onChange={(e) => stepChange(e)}>\n                                    <Step title=\"\" />\n                                    <Step title=\"\" />\n                                    <Step title=\"\" />\n                                    <Step title=\"\" />\n                                    <Step title=\"\" />\n                                    <Step title=\"\" />\n                                </Steps>\n                                <div className=\"pt-8\">\n                                    <Form\n                                        name=\"basic\"\n                                        labelCol={{\n                                            span: 8,\n                                        }}\n                                        wrapperCol={{\n                                            span: 16,\n                                        }}\n                                        initialValues={{\n                                            remember: true,\n                                        }}\n                                        onFinish={onFinish}\n                                        onFinishFailed={onFinishFailed}\n                                    >\n                                        <Form.Item\n                                            label=\"Username\"\n                                            name=\"username\"\n                                            rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please input your username!',\n                                            },\n                                            ]}\n                                        >\n                                            <Input />\n                                        </Form.Item>\n\n                                        <Form.Item\n                                            label=\"Password\"\n                                            name=\"password\"\n                                            rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please input your password!',\n                                            },\n                                            ]}\n                                        >\n                                            <Input.Password />\n                                        </Form.Item>\n\n                                        <Form.Item\n                                            wrapperCol={{\n                                            offset: 8,\n                                            span: 16,\n                                            }}\n                                        >\n                                            <Button type=\"primary\" htmlType=\"submit\">\n                                            Submit\n                                            </Button>\n                                        </Form.Item>\n                                        </Form>\n                                </div>\n                                <div className=\"flex justify-between\">\n                                    <Button type=\"secondary\" onClick={e => previousStep(e)} disabled={stepIndex == 0}>Back</Button>\n                                    <Button type=\"primary\" onClick={e => nextStep(e)}>{stepIndex == 5 ? 'Create Project' : 'Next'}</Button>\n                                </div> */}\n                        </Card>\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}