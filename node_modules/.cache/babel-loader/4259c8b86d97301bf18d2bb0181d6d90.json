{"ast":null,"code":"import _objectWithoutProperties from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _objectSpread from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _excluded=[\"key\",\"name\",\"fieldKey\"];import React,{useEffect,useState}from\"react\";import config from\"config\";import axios from\"axiosConfig\";import{Form,Button,Row,Col,Card,Input,DatePicker,TimePicker,Table}from'antd';import{MinusCircleOutlined,PlusOutlined}from'@ant-design/icons';import\"./DailyLog.css\";import{useToasts}from\"react-toast-notifications\";import ENUMS from\"constants/appEnums\";import HttpUtil from\"util/HttpUtil\";import{useHistory,useLocation}from\"react-router\";import moment from\"moment\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function DailyLog(){var location=useLocation();var _useToasts=useToasts(),addToast=_useToasts.addToast;var history=useHistory();var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];var initialFormValues={dailyLogData:[{date:null,time:null,description:null}]};var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyLogs=_useState2[0],setDailyLogs=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),projectId=_useState4[0],setProjectId=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),wellId=_useState6[0],setWellId=_useState6[1];var onChange=function onChange(date,dateString){// console.log(date, dateString);\n};var columns=[{title:'Date',dataIndex:'date',key:'date'},{title:'Time',dataIndex:'time',key:'time'},{title:'Description',dataIndex:'description',key:'description'}];var resetForm=function resetForm(){form.resetFields();};var onFinish=function onFinish(values){if(values.dailyLogData.length<1)return;var val=values.dailyLogData.map(function(log){return{description:log.description,date:Number(moment(log.date).set(\"hour\",moment(log.time).hours()).set(\"minute\",moment(log.time).minutes()).set(\"seconds\",moment(log.time).seconds()).format('x'))};});axios.post(config.API_URL+ENUMS.API_ROUTES.DAILY_LOG,{project_id:Number(projectId),well_id:Number(wellId),logs:val},_objectSpread({},HttpUtil.adminHttpHeaders())).then(function(res){if(res.status===201){fetchDailyLog(Number(wellId));addToast(\"Daily logs added successfully.\",{appearance:'success',autoDismiss:true});resetForm(values);}}).catch(function(e){console.log(e);});};var fetchDailyLog=function fetchDailyLog(well_id){axios.get(config.API_URL+ENUMS.API_ROUTES.DAILY_LOG+'/'+well_id,_objectSpread({},HttpUtil.adminHttpHeaders())).then(function(res){if(res.status===200&&res.data){var logs=[];if(res.data.logs){logs=res.data.logs.map(function(log,index){return{key:index,date:moment(log.date).format(\"YYYY-MM-DD\"),time:moment(log.date).format(\"HH : mm\"),description:log.description};});}setDailyLogs(logs);}}).catch(function(e){console.log(e);});};var setParams=function setParams(locationData){if(locationData.state&&locationData.state.projectId){setProjectId(locationData.state.projectId);setWellId(locationData.state.wellId);fetchDailyLog(locationData.state.wellId);resetForm();}else if(locationData.search){var params=new URLSearchParams(locationData.search);var projectIdSearch=params.get('projectId');var wellIdSearch=params.get('wellId');setProjectId(projectIdSearch);setWellId(wellIdSearch);fetchDailyLog(wellIdSearch);resetForm();}};useEffect(function(){setParams(location);},[]);useEffect(function(){return history.listen(function(locationData){if(location.pathname===ENUMS.ROUTES.ADMIN+ENUMS.ROUTES.DAILY_LOG){setParams(locationData);}});},[history]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Card,{bordered:false,style:{width:'100%',marginBottom:'5px'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-580-px mx-auto\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note: \"}),\"All times entered In tracking sheet are to be in 24 hour time format. The site layout and frac equipment info needs to be notated in the Daily log, with objectives including:\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"ul\",{style:{listStyle:\"disc\"},children:[/*#__PURE__*/_jsx(\"li\",{children:\"The distance from the last pump to the well (estimate) pip length \"}),/*#__PURE__*/_jsx(\"li\",{children:\"Size of iron from pumps \"}),/*#__PURE__*/_jsx(\"li\",{children:\"Pump types (triplex, quadplex, quinplex) \"}),/*#__PURE__*/_jsx(\"li\",{children:\"Number of pumps \"}),/*#__PURE__*/_jsx(\"li\",{children:\"Surface line volume \"}),/*#__PURE__*/_jsx(\"li\",{children:\"Photographs to be collected of the equipment layout if allowed by client \"})]})]})}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"md:ml-64\",style:{width:'650px'},children:[/*#__PURE__*/_jsxs(Row,{gutter:24,className:\"mb-2\",children:[/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(\"strong\",{children:\"Date\"})}),/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(\"strong\",{children:\"Time\"})}),/*#__PURE__*/_jsx(Col,{span:10,children:/*#__PURE__*/_jsx(\"strong\",{children:\"Description\"})})]}),/*#__PURE__*/_jsxs(Form,{form:form,name:\"dynamic_form_nest_item\",onFinish:onFinish,autoComplete:\"off\",initialValues:initialFormValues,children:[/*#__PURE__*/_jsx(Form.List,{name:\"dailyLogData\",children:function children(fields,_ref){var add=_ref.add,remove=_ref.remove;return/*#__PURE__*/_jsxs(_Fragment,{children:[fields.map(function(_ref2){var key=_ref2.key,name=_ref2.name,fieldKey=_ref2.fieldKey,restField=_objectWithoutProperties(_ref2,_excluded);return/*#__PURE__*/_jsxs(Row,{gutter:24,children:[/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({},restField),{},{name:[name,'date'],fieldKey:[fieldKey,'date'],rules:[{required:true,message:'Missing date'}],children:/*#__PURE__*/_jsx(DatePicker,{onChange:onChange,className:\"w-full\"})}))}),/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({},restField),{},{name:[name,'time'],fieldKey:[fieldKey,'time'],rules:[{required:true,message:'Missing time'}],children:/*#__PURE__*/_jsx(TimePicker,{onChange:onChange,className:\"w-full\"})}))}),/*#__PURE__*/_jsx(Col,{span:10,children:/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({},restField),{},{name:[name,'description'],fieldKey:[fieldKey,'description'],rules:[{required:true,message:'Missing description'}],className:\"w-full\",children:/*#__PURE__*/_jsx(Input,{placeholder:\"Description\",className:\"w-full\"})}))}),/*#__PURE__*/_jsx(Col,{span:2,children:/*#__PURE__*/_jsx(MinusCircleOutlined,{onClick:function onClick(){return remove(name);}})})]},key);}),/*#__PURE__*/_jsx(Row,{gutter:24,children:/*#__PURE__*/_jsx(Col,{span:8,children:/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"dashed\",onClick:function onClick(){return add();},block:true,icon:/*#__PURE__*/_jsx(PlusOutlined,{}),children:\"Add line\"})})})})]});}}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Submit log\"})})]})]})}),dailyLogs&&/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-580-px mx-auto\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{className:\"module-title\",children:\"All Logs\"})}),/*#__PURE__*/_jsx(Table,{dataSource:dailyLogs,columns:columns,pagination:false})]})})]});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/DailyLog.js"],"names":["React","useEffect","useState","config","axios","Form","Button","Row","Col","Card","Input","DatePicker","TimePicker","Table","MinusCircleOutlined","PlusOutlined","useToasts","ENUMS","HttpUtil","useHistory","useLocation","moment","DailyLog","location","addToast","history","useForm","form","initialFormValues","dailyLogData","date","time","description","dailyLogs","setDailyLogs","projectId","setProjectId","wellId","setWellId","onChange","dateString","columns","title","dataIndex","key","resetForm","resetFields","onFinish","values","length","val","map","log","Number","set","hours","minutes","seconds","format","post","API_URL","API_ROUTES","DAILY_LOG","project_id","well_id","logs","adminHttpHeaders","then","res","status","fetchDailyLog","appearance","autoDismiss","catch","e","console","get","data","index","setParams","locationData","state","search","params","URLSearchParams","projectIdSearch","wellIdSearch","listen","pathname","ROUTES","ADMIN","width","marginBottom","listStyle","fields","add","remove","name","fieldKey","restField","required","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport { Form, Button, Row, Col, Card, Input, DatePicker, TimePicker, Table } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport \"./DailyLog.css\";\nimport { useToasts } from \"react-toast-notifications\";\nimport ENUMS from \"constants/appEnums\";\nimport HttpUtil from \"util/HttpUtil\";\nimport { useHistory, useLocation } from \"react-router\";\nimport moment from \"moment\";\n\nexport default function DailyLog() {\n    let location = useLocation();\n    const { addToast } = useToasts();\n    const history = useHistory();\n    const [form] = Form.useForm();\n\n    const initialFormValues = { dailyLogData: [{ date: null, time: null, description: null }] }\n\n    const [dailyLogs, setDailyLogs] = useState([]);\n    const [projectId, setProjectId] = useState();\n    const [wellId, setWellId] = useState();\n    \n    const onChange = (date, dateString)  => {\n        // console.log(date, dateString);\n    }\n\n    const columns = [\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n        },\n        {\n            title: 'Time',\n            dataIndex: 'time',\n            key: 'time',\n        },\n        {\n            title: 'Description',\n            dataIndex: 'description',\n            key: 'description',\n        },\n    ];\n    \n    const resetForm = () => {\n        form.resetFields();\n    }\n\n    const onFinish = values => {\n        if (values.dailyLogData.length < 1)\n            return;\n        const val = values.dailyLogData.map(log => {\n            return {\n                description: log.description,\n                date: Number(moment(log.date).set(\"hour\", moment(log.time).hours()).set(\"minute\", moment(log.time).minutes()).set(\"seconds\", moment(log.time).seconds()).format('x'))\n            }\n        });\n        \n        axios.post(config.API_URL + ENUMS.API_ROUTES.DAILY_LOG,\n            {\n                project_id: Number(projectId),\n                well_id: Number(wellId),\n                logs: val\n            }, {...HttpUtil.adminHttpHeaders()})\n            .then(res => {\n                if (res.status === 201) {\n                    fetchDailyLog(Number(wellId))\n                    addToast(\"Daily logs added successfully.\", { \n                        appearance: 'success',\n                        autoDismiss: true\n                    });\n                    resetForm(values);\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            });\n    };\n\n    const fetchDailyLog = (well_id) => {\n        axios.get(config.API_URL + ENUMS.API_ROUTES.DAILY_LOG + '/' + well_id,\n            {\n                ...HttpUtil.adminHttpHeaders(),\n            })\n            .then(res => {\n                if (res.status === 200 && res.data) {\n                    let logs = [];\n                    if (res.data.logs) {\n                        logs = res.data.logs.map((log, index) => {\n                            return {\n                                key: index,\n                                date: moment(log.date).format(\"YYYY-MM-DD\"),\n                                time: moment(log.date).format(\"HH : mm\"),\n                                description: log.description,\n                            }\n                        })\n                    }\n                    setDailyLogs(logs);\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            })\n    }\n\n    const setParams = (locationData) => {\n        if (locationData.state && locationData.state.projectId) {\n            setProjectId(locationData.state.projectId);\n            setWellId(locationData.state.wellId);\n            fetchDailyLog(locationData.state.wellId);\n            resetForm();\n        }\n        else if (locationData.search) {\n            const params = new URLSearchParams(locationData.search);\n            const projectIdSearch = params.get('projectId');\n            const wellIdSearch = params.get('wellId');\n            setProjectId(projectIdSearch);\n            setWellId(wellIdSearch);\n            fetchDailyLog(wellIdSearch);\n            resetForm();\n        }\n    }\n\n    useEffect(() => {\n        setParams(location);\n    }, [])\n\n    useEffect(() => {\n        return history.listen((locationData) => { \n            if(location.pathname === (ENUMS.ROUTES.ADMIN + ENUMS.ROUTES.DAILY_LOG)) {\n                setParams(locationData);\n            }\n        }) \n    }, [history])\n\n      \n    return (\n        <>\n            <Card bordered={false} style={{ width: '100%', marginBottom: '5px' }}>\n                <div className=\"max-w-580-px mx-auto\">\n                        <strong>Note: </strong>\n                         All times entered In tracking sheet are to be in 24 hour time format. The site layout and frac equipment info needs to be notated in the Daily log, with objectives including: \n                        <br></br>\n                        <br></br>\n                        <ul style={{listStyle: \"disc\"}}>\n                            <li>The distance from the last pump to the well (estimate) pip length </li>\n                            <li>Size of iron from pumps </li>\n                            <li>Pump types (triplex, quadplex, quinplex) </li>\n                            <li>Number of pumps </li>\n                            <li>Surface line volume </li>\n                            <li>Photographs to be collected of the equipment layout if allowed by client </li>\n                        </ul>\n                </div>\n            </Card>\n            <Card>\n                {/* <div className=\"text-right\">\n                    <Button type=\"primary\" >Submit log</Button>\n                </div> */}\n                <div className=\"md:ml-64\" style={{width: '650px'}}>\n                    <Row gutter={24} className=\"mb-2\">\n                        <Col span={6}><strong>Date</strong></Col>\n                        <Col span={6}><strong>Time</strong></Col>\n                        <Col span={10}><strong>Description</strong></Col>\n                    </Row>\n                    <Form\n                        form={form}\n                        name=\"dynamic_form_nest_item\"\n                        onFinish={onFinish}\n                        autoComplete=\"off\"\n                        initialValues={initialFormValues}\n                    >\n                        <Form.List name=\"dailyLogData\">\n                            {(fields, { add, remove }) => (\n                                <>\n                                    {fields.map(({ key, name, fieldKey, ...restField }) => (\n                                        <Row gutter={24} key={key}>\n                                            <Col span={6}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'date']}\n                                                    fieldKey={[fieldKey, 'date']}\n                                                    rules={[{ required: true, message: 'Missing date' }]}\n                                                >\n                                                    <DatePicker onChange={onChange} className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={6}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'time']}\n                                                    fieldKey={[fieldKey, 'time']}\n                                                    rules={[{ required: true, message: 'Missing time' }]}\n                                                >\n                                                    <TimePicker onChange={onChange} className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'description']}\n                                                    fieldKey={[fieldKey, 'description']}\n                                                    rules={[{ required: true, message: 'Missing description' }]}\n                                                    className=\"w-full\"\n                                                >\n                                                    <Input placeholder=\"Description\" className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={2}>\n                                                <MinusCircleOutlined onClick={() => remove(name)} />\n                                            </Col>\n                                        </Row>\n                                    ))}\n                                    <Row gutter={24}>\n                                        <Col span={8}>\n                                            <Form.Item>\n                                                <Button\n                                                    type=\"dashed\"\n                                                    onClick={() => add()}\n                                                    block\n                                                    icon={<PlusOutlined />}\n                                                >\n                                                    Add line\n                                                </Button>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                    \n                                </>\n                            )}\n                        </Form.List>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit log\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </Card>\n            {\n                dailyLogs && \n                <Card>\n                    <div className=\"max-w-580-px mx-auto\">\n                        <div><h2 className=\"module-title\">All Logs</h2></div>\n                        <Table dataSource={dailyLogs} columns={columns} pagination={false} />\n                        {/* <Row gutter={24} className=\"mb-2\">\n                                    <Col span={5}><strong>Date</strong></Col>\n                                    <Col span={5}><strong>Time</strong></Col>\n                                    <Col span={14}><strong>Description</strong></Col>\n                                </Row>\n                        {dailyLogs.map(log => {\n                            return <>\n                                \n                                <Row gutter={24} className=\"mb-2\">\n                                    <Col span={5}>{moment(log.date).format(\"YYYY-MM-DD\")}</Col>\n                                    <Col span={5}>{moment(log.date).format(\"hh : mm\")}</Col>\n                                    <Col span={14}>{log.description}</Col>\n                                </Row>\n                            </>\n                        })} */}\n                    </div>\n                </Card>\n            }\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}