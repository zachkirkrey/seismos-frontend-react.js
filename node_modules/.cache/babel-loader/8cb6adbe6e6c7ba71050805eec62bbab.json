{"ast":null,"code":"import config from \"config\";\nimport axios from \"axiosConfig\";\nimport Auth from \"layouts/Auth.js\";\nimport Admin from \"layouts/Admin.js\";\nimport ENUMS from \"constants/appEnums\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index';\nimport { AppContext } from \"util/ContextUtil\";\nimport React, { useState, useEffect } from \"react\";\nimport NotFound from \"components/NotFound/NotFound\";\nimport { useToasts } from 'react-toast-notifications';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Application() {\n  // const dispatch = useDispatch();\n  // const { addToast } = useToasts();\n  // const [isAuthenticated, userHasAuthenticated] = useState(false);\n  // const [isAuthenticating, setIsAuthenticating] = useState(true);\n  // useEffect(() => {\n  //     const onLoad = async () => {\n  //         if (localStorage.getItem('JWT')) {\n  //             axios.get(config.API_URL + ENUMS.API_ROUTES.AUTH_STATUS)\n  //             .then(res => {\n  //                 dispatch(allActions.authActions.setUserState(res.data.user));\n  //                 dispatch(allActions.authActions.setUserProjectList(res.data.projectList));\n  //                 userHasAuthenticated(true);\n  //                 setIsAuthenticating(false);\n  //             })\n  //             .catch(error => {\n  //                 console.log(error, 'here')\n  //                 // userHasAuthenticated(false);\n  //                 setIsAuthenticating(false);\n  //                 if (error.response) {\n  //                     if (error.response.data && error.response.data.message === 'jwt expired') {\n  //                         localStorage.removeItem('JWT');\n  //                         addToast(\"Your login token has expired. Please login again!\", { appearance: 'info' });\n  //                         console.error(error.response.data.message);\n  //                     }\n  //                     else {\n  //                         // TODO: remove the comments\n  //                         // addToast(\n  //                         //     error.response.data ? \n  //                         //         error.response.data.message : \n  //                         //         \"Failed to fetch user details. Please login again!\", \n  //                         //     { \n  //                         //         appearance: 'error',\n  //                         //         autoDismiss: true\n  //                         //     }\n  //                         // );\n  //                     }\n  //                 }\n  //             })\n  //         }\n  //         else {\n  //             setIsAuthenticating(false);\n  //         }\n  //     }      \n  //     onLoad();\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"hi\"\n  }, void 0, false);\n}\n_c = Application;\n\nvar _c;\n\n$RefreshReg$(_c, \"Application\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/app.js"],"names":["config","axios","Auth","Admin","ENUMS","useDispatch","allActions","AppContext","React","useState","useEffect","NotFound","useToasts","BrowserRouter","Route","Switch","Redirect","Application"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;;;AAEA,eAAe,SAASC,WAAT,GAAwB;AACnC;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI;AAAA;AAAA,mBADJ;AAKH;KAvDuBA,W","sourcesContent":["import config from \"config\";\nimport axios from \"axiosConfig\";\nimport Auth from \"layouts/Auth.js\";\nimport Admin from \"layouts/Admin.js\";\nimport ENUMS from \"constants/appEnums\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index';\nimport { AppContext } from \"util/ContextUtil\";\nimport React, { useState, useEffect } from \"react\";\nimport NotFound from \"components/NotFound/NotFound\";\nimport { useToasts } from 'react-toast-notifications';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nexport default function Application () {\n    // const dispatch = useDispatch();\n    // const { addToast } = useToasts();\n\n    // const [isAuthenticated, userHasAuthenticated] = useState(false);\n    // const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n    // useEffect(() => {\n    //     const onLoad = async () => {\n    //         if (localStorage.getItem('JWT')) {\n    //             axios.get(config.API_URL + ENUMS.API_ROUTES.AUTH_STATUS)\n    //             .then(res => {\n    //                 dispatch(allActions.authActions.setUserState(res.data.user));\n    //                 dispatch(allActions.authActions.setUserProjectList(res.data.projectList));\n    //                 userHasAuthenticated(true);\n    //                 setIsAuthenticating(false);\n    //             })\n    //             .catch(error => {\n    //                 console.log(error, 'here')\n    //                 // userHasAuthenticated(false);\n    //                 setIsAuthenticating(false);\n    //                 if (error.response) {\n    //                     if (error.response.data && error.response.data.message === 'jwt expired') {\n    //                         localStorage.removeItem('JWT');\n    //                         addToast(\"Your login token has expired. Please login again!\", { appearance: 'info' });\n    //                         console.error(error.response.data.message);\n    //                     }\n    //                     else {\n    //                         // TODO: remove the comments\n    //                         // addToast(\n    //                         //     error.response.data ? \n    //                         //         error.response.data.message : \n    //                         //         \"Failed to fetch user details. Please login again!\", \n    //                         //     { \n    //                         //         appearance: 'error',\n    //                         //         autoDismiss: true\n    //                         //     }\n    //                         // );\n    //                     }\n                        \n    //                 }\n    //             })\n    //         }\n    //         else {\n    //             setIsAuthenticating(false);\n    //         }\n    //     }      \n    //     onLoad();\n    // }, []);\n  \n    return (\n        <>\n            hi\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}