{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/OcReport.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport { Card, Space, Table, Button } from 'antd';\nimport FAKE_DATA from \"constants/fakeData\";\nimport _ from \"lodash\";\nimport ENUMS from \"constants/appEnums\";\nimport HttpUtil from \"util/HttpUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function OcReport() {\n  _s();\n\n  const [data, setData] = useState(FAKE_DATA.STAGE_REPORT);\n\n  const approveStage = (text, record) => {\n    const index = data.findIndex(d => d.key === record.key);\n\n    const newData = _.cloneDeep(data);\n\n    newData[index].approved = true;\n    setData(newData);\n  };\n\n  const columns = [{\n    title: 'Stage',\n    dataIndex: 'stage',\n    key: 'stage'\n  }, {\n    title: 'Pre Frac',\n    dataIndex: 'pre_frac',\n    key: 'pre_frac'\n  }, {\n    title: 'Post Frac',\n    dataIndex: 'post_frac',\n    key: 'post_frac'\n  }, {\n    title: 'NF',\n    dataIndex: 'nf',\n    key: 'nf'\n  }, {\n    title: 'FF',\n    dataIndex: 'ff',\n    key: 'ff'\n  }, {\n    title: 'Half length [ft]',\n    dataIndex: 'half_length',\n    key: 'half_length'\n  }, {\n    title: 'Width [in]',\n    dataIndex: 'width',\n    key: 'width'\n  }, {\n    title: 'Height',\n    dataIndex: 'height',\n    key: 'height'\n  }, {\n    title: 'Reserve potential',\n    dataIndex: 'reserve_potential',\n    key: 'reserve_potential'\n  }, {\n    title: 'Pore pressure',\n    dataIndex: 'pore_pressure',\n    key: 'pore_pressure'\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: record.approved ? 'Approved' : /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: e => approveStage(text, record),\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)\n  }];\n\n  const renderBody = (props, columns) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: props.className,\n      children: columns.map((item, idx) => {\n        // console.log(item)\n        if (!item.hidden) {\n          return props.children[idx];\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this);\n  };\n\n  const fetchQcReport = () => {\n    axios.get(config.API_URL + ENUMS.API_ROUTES.QC_REPORT, { ...HttpUtil.adminHttpHeaders()\n    }).then(res => {\n      console.log(res);\n\n      if (res.status === 200 && res.data) {}\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    fetchQcReport();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      bordered: false,\n      style: {\n        width: '100%',\n        marginBottom: '5px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"QC Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: data,\n        components: {\n          body: {\n            row: props => renderBody(props, columns)\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        disabled: data.filter(d => d.approved).length < 1,\n        children: \"Export stage report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(OcReport, \"RwpGKT5l6iSOLEQw5kgoKhW5Jhc=\");\n\n_c = OcReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"OcReport\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/OcReport.js"],"names":["React","useEffect","useState","config","axios","Card","Space","Table","Button","FAKE_DATA","_","ENUMS","HttpUtil","OcReport","data","setData","STAGE_REPORT","approveStage","text","record","index","findIndex","d","key","newData","cloneDeep","approved","columns","title","dataIndex","render","e","renderBody","props","className","map","item","idx","hidden","children","fetchQcReport","get","API_URL","API_ROUTES","QC_REPORT","adminHttpHeaders","then","res","console","log","status","catch","width","marginBottom","body","row","filter","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport { Card, Space, Table, Button } from 'antd';\nimport FAKE_DATA from \"constants/fakeData\";\nimport _ from \"lodash\";\nimport ENUMS from \"constants/appEnums\";\nimport HttpUtil from \"util/HttpUtil\";\n\nexport default function OcReport() {\n    const [data, setData] = useState(FAKE_DATA.STAGE_REPORT);\n\n    const approveStage = (text, record) => {\n        const index = data.findIndex(d => d.key === record.key);\n        const newData = _.cloneDeep(data);\n        newData[index].approved = true;\n        setData(newData)\n    }\n    \n    const columns = [\n        {\n            title: 'Stage',\n            dataIndex: 'stage',\n            key: 'stage',\n        },\n        {\n            title: 'Pre Frac',\n            dataIndex: 'pre_frac',\n            key: 'pre_frac',\n        },\n        {\n            title: 'Post Frac',\n            dataIndex: 'post_frac',\n            key: 'post_frac',\n        },\n        {\n            title: 'NF',\n            dataIndex: 'nf',\n            key: 'nf',\n        },\n        {\n            title: 'FF',\n            dataIndex: 'ff',\n            key: 'ff',\n        },\n        {\n            title: 'Half length [ft]',\n            dataIndex: 'half_length',\n            key: 'half_length',\n        },\n        {\n            title: 'Width [in]',\n            dataIndex: 'width',\n            key: 'width',\n        },\n        {\n            title: 'Height',\n            dataIndex: 'height',\n            key: 'height',\n        },\n        {\n            title: 'Reserve potential',\n            dataIndex: 'reserve_potential',\n            key: 'reserve_potential',\n        },\n        {\n            title: 'Pore pressure',\n            dataIndex: 'pore_pressure',\n            key: 'pore_pressure',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    {   record.approved \n                        ? 'Approved'\n                        : <Button type=\"primary\" onClick={(e) => approveStage(text, record)}>Approve</Button>\n                    }\n                </Space>\n            ),\n        },\n    ];\n    \n\n    const renderBody = (props, columns) => {\n        return (\n          <tr className={props.className}>\n            {columns.map((item, idx) => {\n                // console.log(item)\n              if (!item.hidden) {\n                return props.children[idx]\n              }\n            })}\n          </tr>\n        );\n    }\n\n    const fetchQcReport = () => {\n        axios.get(config.API_URL + ENUMS.API_ROUTES.QC_REPORT,\n            {\n                ...HttpUtil.adminHttpHeaders(),\n            })\n            .then(res => {\n                console.log(res);\n                if (res.status === 200 && res.data) {\n                    \n                }\n            })\n            .catch(e => {\n                console.log(e)\n            })\n    }\n\n    useEffect(() => {\n        fetchQcReport();\n    }, [])\n    return (\n        <>\n            <Card bordered={false} style={{ width: '100%', marginBottom: '5px' }}>\n                <strong>QC Report</strong>\n            </Card>\n            <Card>\n                <Table\n                    columns={columns}\n                    dataSource={data}\n                    components={{\n                        body: {\n                          row: (props) => renderBody(props, columns)\n                        },\n                      }}\n                />\n                <Button type=\"primary\" disabled={data.filter(d => d.approved).length < 1}>Export stage report</Button>\n            </Card>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}