{"ast":null,"code":"import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Card}from'antd';import APP_CONSTANTS from\"constants/appConstants\";import{RedoOutlined}from\"@ant-design/icons\";// component\nimport FileUploadModal from\"components/Modal/FileUploadModal\";import\"./DataInput.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function DataInput(){var cards=APP_CONSTANTS.DATA_INPUT_CARDS;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isModalVisible=_useState2[0],setIsModalVisible=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),section=_useState4[0],setSection=_useState4[1];var showModal=function showModal(){setIsModalVisible(true);};var handleOk=function handleOk(uploadedFile,selectedSection){cards.find(function(card){return card.section===selectedSection;}).grid[2].label=/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2 reupload-text\",children:'Uploaded'}),/*#__PURE__*/_jsx(\"span\",{className:\"reupload-text-container mr-2\"}),/*#__PURE__*/_jsx(RedoOutlined,{className:\"reupload-button\"})]});cards.find(function(card){return card.section===selectedSection;}).grid[2].className='di-card-success';setIsModalVisible(false);};var handleCancel=function handleCancel(){setIsModalVisible(false);};var handleAction=function handleAction(action,index,selectedSection){if(action==='upload'){cards.find(function(card){return card.section===selectedSection;}).grid[index].label='Upload File';cards.find(function(card){return card.section===selectedSection;}).grid[2].className='';setSection(selectedSection);showModal();}};return/*#__PURE__*/_jsxs(_Fragment,{children:[cards.map(function(card,cardIndex){return/*#__PURE__*/_jsx(Card,{title:card.title,bordered:false,style:{width:'100%',marginBottom:'1.5rem'},className:\"datainput-cards mb-6\",children:card.grid.map(function(cardGrid,cardGridIndex){return/*#__PURE__*/_jsx(Card.Grid,{style:{width:'25%',textAlign:'center'},className:\"di-card-grid \"+(cardGrid.className?cardGrid.className:''),onClick:function onClick(e){return handleAction(cardGrid.action,cardGridIndex,card.section);},children:cardGrid.action===\"upload\"?cardGrid.label:cardGrid.label},cardGridIndex);})},cardIndex);}),/*#__PURE__*/_jsx(FileUploadModal,{isModalVisible:isModalVisible,section:section,handleOk:handleOk,handleCancel:handleCancel})]});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/DataInput.js"],"names":["React","useState","Card","APP_CONSTANTS","RedoOutlined","FileUploadModal","DataInput","cards","DATA_INPUT_CARDS","isModalVisible","setIsModalVisible","section","setSection","showModal","handleOk","uploadedFile","selectedSection","find","card","grid","label","className","handleCancel","handleAction","action","index","map","cardIndex","title","width","marginBottom","cardGrid","cardGridIndex","textAlign","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card } from 'antd';\nimport APP_CONSTANTS from \"constants/appConstants\";\nimport { RedoOutlined } from \"@ant-design/icons\"\n// component\nimport FileUploadModal from \"components/Modal/FileUploadModal\";\nimport \"./DataInput.css\";\n\nexport default function DataInput() {\n    const cards = APP_CONSTANTS.DATA_INPUT_CARDS;\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [section, setSection] = useState(null);\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleOk = (uploadedFile, selectedSection) => {\n        cards.find(card => card.section === selectedSection).grid[2].label = <div\n            className=\"flex items-center justify-center\"\n        >\n            <span className=\"mr-2 reupload-text\">{'Uploaded'}</span>\n            <span className=\"reupload-text-container mr-2\"></span>\n            <RedoOutlined className=\"reupload-button\"/>\n        </div>;\n        cards.find(card => card.section === selectedSection).grid[2].className = 'di-card-success';\n        setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n    \n    const handleAction = (action, index, selectedSection) => {\n        if (action === 'upload') {\n            cards.find(card => card.section === selectedSection).grid[index].label = 'Upload File';\n            cards.find(card => card.section === selectedSection).grid[2].className = '';\n            setSection(selectedSection);\n            showModal();\n        }\n    }\n\n    return (\n        <>\n            {\n                cards.map((card, cardIndex) => {\n                    return <Card key={cardIndex} title={card.title} bordered={false} style={{ width: '100%', marginBottom: '1.5rem' }} className=\"datainput-cards mb-6\">\n                        {\n                            card.grid.map((cardGrid, cardGridIndex) => {\n                                return <Card.Grid\n                                    key={cardGridIndex} \n                                    style={{ width: '25%', textAlign: 'center'}}\n                                    className={\"di-card-grid \" + (cardGrid.className ? cardGrid.className : '')}\n                                    onClick={(e) => handleAction(cardGrid.action, cardGridIndex, card.section)}\n                                >\n                                    {\n                                        (cardGrid.action === \"upload\")\n                                        ? cardGrid.label\n                                        : cardGrid.label\n                                    }\n                                </Card.Grid>\n                            })\n                        }\n                        {/* <Row gutter={16}>\n                            {\n                                card.grid.map((cardGrid, cardGridIndex) => {\n                                    return <Col className=\"gutter-row\" span={6}>\n                                        <Button size={\"large\"} shape=\"round\" className={\"w-full \" + cardGrid.color}>{cardGrid.label}</Button>\n                                    </Col>\n                                })\n                            }\n                        </Row>\n                         */}\n                    </Card>\n                })\n            }\n            <FileUploadModal isModalVisible={isModalVisible} section={section} handleOk={handleOk} handleCancel={handleCancel}\n            ></FileUploadModal>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}