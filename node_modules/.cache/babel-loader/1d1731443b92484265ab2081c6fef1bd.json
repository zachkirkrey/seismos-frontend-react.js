{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/OcReport.js\";\nimport React from \"react\";\nimport { Card } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function OcReport() {\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 29\n    }, this)\n  }, {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age'\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address'\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Aproove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)\n  }];\n  const data = FAKE_DATA.LIST_OF_PROJECTS;\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setSelectedRow(data.filter(x => x.key === selectedRowKeys));\n    },\n    getCheckboxProps: record => ({\n      disabled: record.name === 'Disabled User',\n      // Column configuration not to be checked\n      name: record.name\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = OcReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"OcReport\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/OcReport.js"],"names":["React","Card","OcReport","columns","title","dataIndex","key","render","text","record","data","FAKE_DATA","LIST_OF_PROJECTS","rowSelection","onChange","selectedRowKeys","selectedRows","setSelectedRow","filter","x","getCheckboxProps","disabled","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAC/B,QAAMC,OAAO,GAAG,CACZ;AACIC,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,MAFf;AAGIC,IAAAA,GAAG,EAAE,MAHT;AAIIC,IAAAA,MAAM,EAAEC,IAAI,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAJpB,GADY,EAOZ;AACIJ,IAAAA,KAAK,EAAE,KADX;AAEIC,IAAAA,SAAS,EAAE,KAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GAPY,EAYZ;AACIF,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,SAAS,EAAE,SAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GAZY,EAiBZ;AACIF,IAAAA,KAAK,EAAE,QADX;AAEIE,IAAAA,GAAG,EAAE,QAFT;AAGIC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,kBACJ,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJR,GAjBY,CAAhB;AA2BA,QAAMC,IAAI,GAAGC,SAAS,CAACC,gBAAvB;AAEA,QAAMC,YAAY,GAAG;AACbC,IAAAA,QAAQ,EAAE,CAACC,eAAD,EAAkBC,YAAlB,KAAmC;AAC/CC,MAAAA,cAAc,CAACP,IAAI,CAACQ,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACb,GAAF,KAAUS,eAA3B,CAAD,CAAd;AACD,KAHgB;AAIjBK,IAAAA,gBAAgB,EAAGX,MAAD,KAAa;AAC7BY,MAAAA,QAAQ,EAAEZ,MAAM,CAACa,IAAP,KAAgB,eADG;AAE7B;AACAA,MAAAA,IAAI,EAAEb,MAAM,CAACa;AAHgB,KAAb;AAJD,GAArB;AAWA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,KAAD;AACI,QAAA,OAAO,EAAEnB,OADb;AAEI,QAAA,UAAU,EAAEO;AAFhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH;KAnDuBR,Q","sourcesContent":["import React from \"react\";\nimport { Card } from 'antd';\n\nexport default function OcReport() {\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            render: text => <a>{text}</a>,\n        },\n        {\n            title: 'Age',\n            dataIndex: 'age',\n            key: 'age',\n        },\n        {\n            title: 'Address',\n            dataIndex: 'address',\n            key: 'address',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <a>Aproove</a>\n                </Space>\n            ),\n        },\n    ];\n    const data = FAKE_DATA.LIST_OF_PROJECTS;\n\n    const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n          setSelectedRow(data.filter(x => x.key === selectedRowKeys));\n        },\n        getCheckboxProps: (record) => ({\n          disabled: record.name === 'Disabled User',\n          // Column configuration not to be checked\n          name: record.name,\n        }),\n    };\n\n    return (\n        <>\n            <Card>\n                <Table\n                    columns={columns}\n                    dataSource={data}\n                />\n            </Card>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}