{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Grid/Grid.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactDataSheet from \"react-datasheet\";\nimport \"react-datasheet/lib/react-datasheet.css\";\nimport \"./Grid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SheetRenderer = props => {\n  console.log(props);\n  const {\n    className,\n    columns\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: className + \" seismos-spreadsheet-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          className: `cell ${className}`,\n          style: {\n            width: col.width,\n            background: \"#f9f9f9\",\n            padding: \"10px 0px\",\n            textAlign: \"center\"\n          },\n          children: col.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SheetRenderer;\n\nconst CellRenderer = props => {\n  const {\n    children\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: \"cell\",\n    style: {\n      textAlign: \"center\"\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = CellRenderer;\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: props.columns,\n      grid: props.grid\n    };\n    console.log(props);\n    this.renderSheet = this.renderSheet.bind(this);\n    this.renderRow = this.renderRow.bind(this);\n  }\n\n  renderSheet(props) {\n    return /*#__PURE__*/_jsxDEV(SheetRenderer, {\n      columns: this.state.columns,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  renderRow(props) {\n    const {\n      row,\n      cells,\n      ...rest\n    } = props;\n    return /*#__PURE__*/_jsxDEV(CellRenderer, {\n      rowIndex: row,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactDataSheet, {\n        data: this.state.grid,\n        valueRenderer: cell => cell.value,\n        sheetRenderer: this.renderSheet // cellRenderer={this.renderRow}\n        ,\n        onCellsChanged: changes => {\n          const grid = this.state.grid.map(row => [...row]);\n          changes.forEach(({\n            cell,\n            row,\n            col,\n            value\n          }) => {\n            grid[row][col] = { ...grid[row][col],\n              value\n            };\n          });\n          this.setState({\n            grid\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Grid;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SheetRenderer\");\n$RefreshReg$(_c2, \"CellRenderer\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Grid/Grid.js"],"names":["React","ReactDOM","ReactDataSheet","SheetRenderer","props","console","log","className","columns","map","col","index","width","background","padding","textAlign","label","children","CellRenderer","Grid","Component","constructor","state","grid","renderSheet","bind","renderRow","row","cells","rest","render","cell","value","changes","forEach","setState"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport ReactDataSheet from \"react-datasheet\";\nimport \"react-datasheet/lib/react-datasheet.css\";\nimport \"./Grid.css\";\n\nconst SheetRenderer = props => {\n  console.log(props)\n  const { className, columns } = props;\n  return (\n    <table className={className + \" seismos-spreadsheet-grid\"}>\n      <thead>\n        <tr>\n          {columns.map((col, index) => (\n            <th\n              className={`cell ${className}`}\n              style={{\n                width: col.width,\n                background: \"#f9f9f9\",\n                padding: \"10px 0px\",\n                textAlign: \"center\"\n              }}\n            >\n              {col.label}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>{props.children}</tbody>\n    </table>\n  );\n};\n\nconst CellRenderer = props => {\n  const { children } = props;\n  return (\n    <td className=\"cell\" style={{ textAlign: \"center\" }}>\n      {children}\n    </td>\n  );\n};\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: props.columns,\n      grid: props.grid\n    }\n    console.log(props)\n    this.renderSheet = this.renderSheet.bind(this);\n    this.renderRow = this.renderRow.bind(this);\n  }\n\n  renderSheet(props) {\n    return <SheetRenderer columns={this.state.columns} {...props} />;\n  }\n\n  renderRow(props) {\n    const { row, cells, ...rest } = props;\n    return <CellRenderer rowIndex={row} {...rest} />;\n  }\n\n  render() {\n    return (\n      <div style={{ width: \"100%\" }}>\n        <ReactDataSheet\n            data={this.state.grid}\n            valueRenderer={cell => cell.value}\n            sheetRenderer={this.renderSheet}\n            // cellRenderer={this.renderRow}\n            onCellsChanged={changes => {\n                const grid = this.state.grid.map(row => [...row]);\n                    changes.forEach(({ cell, row, col, value }) => {\n                    grid[row][col] = { ...grid[row][col], value };\n                });\n                this.setState({ grid });\n            }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}