{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/NewProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, PageHeader, Button, Steps, Form, Input, Checkbox } from 'antd';\nimport { useHistory } from \"react-router\"; // components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Step\n} = Steps;\nconst steps = [{\n  title: 'First',\n  content: 'First-content'\n}, {\n  title: 'Second',\n  content: 'Second-content'\n}, {\n  title: 'Last',\n  content: 'Last-content'\n}];\nexport default function NewProject() {\n  _s();\n\n  const history = useHistory();\n  const [current, setCurrent] = useState(0);\n\n  const next = () => {\n    setCurrent(current + 1);\n  };\n\n  const prev = () => {\n    setCurrent(current - 1);\n  }; // const stepChange = (e) => {\n  //     setStepIndex(e);\n  // }\n  // const nextStep = (e) => {\n  //     e.preventDefault();\n  //     if (stepIndex != 5) {\n  //         setStepIndex(stepIndex + 1)\n  //     } else {\n  //         history.push('/admin/dashboard');\n  //     }\n  // }\n  // const previousStep = (e) => {\n  //     e.preventDefault();\n  //     stepIndex !=0 && setStepIndex(stepIndex -1);\n  // }\n  // const onFinish = (values) => {\n  //     console.log('Success:', values);\n  // };\n  //   const onFinishFailed = (errorInfo) => {\n  //     console.log('Failed:', errorInfo);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"80vh\"\n      },\n      className: \"flex justify-center items-center bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"900px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          ghost: false,\n          onBack: () => window.history.back(),\n          title: \"Fill in the information below to create a new project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Steps, {\n            current: current,\n            children: steps.map(item => /*#__PURE__*/_jsxDEV(Step, {\n              title: item.title\n            }, item.title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"steps-content\",\n            children: steps[current].content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"steps-action\",\n            children: [current > 0 && /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: '0 8px'\n              },\n              onClick: () => prev(),\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), current < steps.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: () => next(),\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), current === steps.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: e => console.log(e),\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(NewProject, \"VnZSY0Qha8X0/ZdNVEwdObSyR8c=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/NewProject.js"],"names":["React","useState","Card","PageHeader","Button","Steps","Form","Input","Checkbox","useHistory","Step","steps","title","content","NewProject","history","current","setCurrent","next","prev","minHeight","width","window","back","map","item","margin","length","e","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, PageHeader, Button, Steps, Form, Input, Checkbox } from 'antd';\nimport { useHistory } from \"react-router\";\n\n// components\n\nconst { Step } = Steps;\n\nconst steps = [\n    {\n      title: 'First',\n      content: 'First-content',\n    },\n    {\n      title: 'Second',\n      content: 'Second-content',\n    },\n    {\n      title: 'Last',\n      content: 'Last-content',\n    },\n  ];\n\nexport default function NewProject() {\n    const history = useHistory();\n\n    const [current, setCurrent] = useState(0);\n\n    const next = () => {\n        setCurrent(current + 1);\n      };\n    \n      const prev = () => {\n        setCurrent(current - 1);\n      };\n\n    // const stepChange = (e) => {\n    //     setStepIndex(e);\n    // }\n\n    // const nextStep = (e) => {\n    //     e.preventDefault();\n    //     if (stepIndex != 5) {\n    //         setStepIndex(stepIndex + 1)\n    //     } else {\n    //         history.push('/admin/dashboard');\n    //     }\n    // }\n\n    // const previousStep = (e) => {\n    //     e.preventDefault();\n    //     stepIndex !=0 && setStepIndex(stepIndex -1);\n    // }\n\n    // const onFinish = (values) => {\n    //     console.log('Success:', values);\n    // };\n    \n    //   const onFinishFailed = (errorInfo) => {\n    //     console.log('Failed:', errorInfo);\n    // };\n\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div style={{width: \"900px\"}}>\n                <PageHeader\n                    ghost={false}\n                    onBack={() => window.history.back()}\n                    title=\"Fill in the information below to create a new project\"\n                >\n                </PageHeader>\n                    <Card>\n                    <Steps current={current}>\n                        {steps.map(item => (\n                        <Step key={item.title} title={item.title} />\n                        ))}\n                    </Steps>\n                    <div className=\"steps-content\">{steps[current].content}</div>\n                    <div className=\"steps-action\">\n                        {current > 0 && (\n                        <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n                            Previous\n                        </Button>\n                        )}\n                        {current < steps.length - 1 && (\n                        <Button type=\"primary\" onClick={() => next()}>\n                            Next\n                        </Button>\n                        )}\n                        {current === steps.length - 1 && (\n                        <Button type=\"primary\" onClick={(e) => console.log(e)}>\n                            Done\n                        </Button>\n                        )}\n                    </div>\n                        {/* <Steps progressDot current={stepIndex} onChange={(e) => stepChange(e)}>\n                            <Step title=\"Job Info\" />\n                            <Step title=\"Well Info\" />\n                            <Step title=\"Well Volume\" />\n                            <Step title=\"Client Info\" />\n                            <Step title=\"Crew Info\" />\n                            <Step title=\"Equipment\" />\n                        </Steps>\n                        <div className=\"pt-8\">\n                            <Form\n                                name=\"basic\"\n                                labelCol={{\n                                    span: 8,\n                                }}\n                                wrapperCol={{\n                                    span: 16,\n                                }}\n                                initialValues={{\n                                    remember: true,\n                                }}\n                                onFinish={onFinish}\n                                onFinishFailed={onFinishFailed}\n                            >\n                                <Form.Item\n                                    label=\"Username\"\n                                    name=\"username\"\n                                    rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!',\n                                    },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!',\n                                    },\n                                    ]}\n                                >\n                                    <Input.Password />\n                                </Form.Item>\n\n                                <Form.Item\n                                    wrapperCol={{\n                                    offset: 8,\n                                    span: 16,\n                                    }}\n                                >\n                                    <Button type=\"primary\" htmlType=\"submit\">\n                                    Submit\n                                    </Button>\n                                </Form.Item>\n                                </Form>\n                        </div>\n                        <div className=\"flex justify-between\">\n                            <Button type=\"secondary\" onClick={e => previousStep(e)} disabled={stepIndex == 0}>Back</Button>\n                            <Button type=\"primary\" onClick={e => nextStep(e)}>{stepIndex == 5 ? 'Create Project' : 'Next'}</Button>\n                        </div> */}\n                    </Card>\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}