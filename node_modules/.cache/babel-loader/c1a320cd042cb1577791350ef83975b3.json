{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/Equipment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Equipment(props) {\n  _s();\n\n  const [form] = Form.useForm();\n  const [equipmentGrid, setEquipmentGrid] = useState([]);\n\n  const getEquipmentGridRow = t => {\n    return t.rows.map(label => {\n      return [{\n        value: label,\n        readOnly: true\n      }, {\n        value: \"\"\n      }];\n    });\n  };\n\n  const populateEquipmentGrid = () => {\n    setEquipmentGrid(TableHeadersUtil.equipmentFormTableData.grid.reduce((rows, t, rowIdx) => {\n      return rows.concat(getEquipmentGridRow(t));\n    }, []));\n  };\n\n  const handleEquipmentGridChanged = updatedGridData => {\n    props.setFormValue();\n    setEquipmentGrid(updatedGridData);\n  };\n\n  const createProject = () => {\n    console.log(\"\");\n  };\n\n  useState(() => {\n    if (props.formValues != null) {\n      props.formValues && setEquipmentGrid(props.formValues);\n    } else {\n      populateEquipmentGrid();\n    }\n  }, props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      style: {\n        width: '50%',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        columns: TableHeadersUtil.equipmentFormTableData.columns,\n        grid: equipmentGrid,\n        gridValueChanged: handleEquipmentGridChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: e => {\n          createProject();\n        },\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Equipment, \"PvqR7vBUPNO3jovpKm4t9id/tp8=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Equipment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Equipment\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/Equipment.js"],"names":["React","useState","Form","Button","TableHeadersUtil","Grid","Equipment","props","form","useForm","equipmentGrid","setEquipmentGrid","getEquipmentGridRow","t","rows","map","label","value","readOnly","populateEquipmentGrid","equipmentFormTableData","grid","reduce","rowIdx","concat","handleEquipmentGridChanged","updatedGridData","setFormValue","createProject","console","log","formValues","width","marginLeft","marginRight","columns","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACrC,QAAM,CAACC,IAAD,IAASN,IAAI,CAACO,OAAL,EAAf;AAEA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMW,mBAAmB,GAAIC,CAAD,IAAO;AAC/B,WAAOA,CAAC,CAACC,IAAF,CAAOC,GAAP,CAAWC,KAAK,IAAI;AACvB,aAAO,CACH;AAAEC,QAAAA,KAAK,EAAED,KAAT;AAAgBE,QAAAA,QAAQ,EAAE;AAA1B,OADG,EAEH;AAAED,QAAAA,KAAK,EAAE;AAAT,OAFG,CAAP;AAIH,KALM,CAAP;AAMH,GAPD;;AASA,QAAME,qBAAqB,GAAG,MAAM;AAChCR,IAAAA,gBAAgB,CAACP,gBAAgB,CAACgB,sBAAjB,CAAwCC,IAAxC,CAA6CC,MAA7C,CAAoD,CAACR,IAAD,EAAOD,CAAP,EAAUU,MAAV,KAAqB;AACtF,aAAOT,IAAI,CAACU,MAAL,CAAYZ,mBAAmB,CAACC,CAAD,CAA/B,CAAP;AACH,KAFgB,EAEd,EAFc,CAAD,CAAhB;AAGH,GAJD;;AAMA,QAAMY,0BAA0B,GAAIC,eAAD,IAAqB;AACpDnB,IAAAA,KAAK,CAACoB,YAAN;AACAhB,IAAAA,gBAAgB,CAACe,eAAD,CAAhB;AACH,GAHD;;AAKA,QAAME,aAAa,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACH,GAFD;;AAIA7B,EAAAA,QAAQ,CAAC,MAAM;AACX,QAAGM,KAAK,CAACwB,UAAN,IAAoB,IAAvB,EAA6B;AACzBxB,MAAAA,KAAK,CAACwB,UAAN,IAAoBpB,gBAAgB,CAACJ,KAAK,CAACwB,UAAP,CAApC;AACH,KAFD,MAEO;AACHZ,MAAAA,qBAAqB;AACxB;AACJ,GANO,EAMLZ,KANK,CAAR;AAQA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACyB,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,UAAU,EAAE,MAA3B;AAAmCC,QAAAA,WAAW,EAAE;AAAhD,OAA7B;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,OAAO,EAAE9B,gBAAgB,CAACgB,sBAAjB,CAAwCe,OADrD;AAEI,QAAA,IAAI,EAAEzB,aAFV;AAGI,QAAA,gBAAgB,EAAEe;AAHtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAGW,CAAD,IAAO;AAACR,UAAAA,aAAa;AAAG,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAgBH;;GArDuBtB,S;UACLJ,IAAI,CAACO,O;;;KADAH,S","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\n\nexport default function Equipment(props) {\n    const [form] = Form.useForm();\n    \n    const [equipmentGrid, setEquipmentGrid] = useState([]);\n\n    const getEquipmentGridRow = (t) => {\n        return t.rows.map(label => {\n            return [\n                { value: label, readOnly: true},\n                { value: \"\" },\n            ]\n        })\n    }\n\n    const populateEquipmentGrid = () => {\n        setEquipmentGrid(TableHeadersUtil.equipmentFormTableData.grid.reduce((rows, t, rowIdx) => {\n            return rows.concat(getEquipmentGridRow(t));\n        }, []));\n    }\n\n    const handleEquipmentGridChanged = (updatedGridData) => {\n        props.setFormValue();\n        setEquipmentGrid(updatedGridData)\n    }\n\n    const createProject = () => {\n        console.log(\"\");\n    }\n\n    useState(() => {\n        if(props.formValues != null) {\n            props.formValues && setEquipmentGrid(props.formValues);\n        } else {\n            populateEquipmentGrid();\n        }\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\" style={{width: '50%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Grid \n                    columns={TableHeadersUtil.equipmentFormTableData.columns}\n                    grid={equipmentGrid}\n                    gridValueChanged={handleEquipmentGridChanged}\n                ></Grid>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {createProject()}}>\n                    Create Project\n                </Button>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}