{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/JobInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Row, Col, Button } from 'antd';\nimport ProjectUtil from \"util/ProjectUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobInfo(props) {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    props.setFormValue(values);\n    props.next();\n  };\n\n  const handlePaste = (e, form, fieldIndex) => {\n    var data = e.clipboardData.items[0];\n    const values = [];\n    data.getAsString(str => {\n      str.split(/\\s/).forEach(v => {\n        values.push(v);\n      });\n      form.setFieldsValue(ProjectUtil.setClipboardValues(form.getFieldsValue(), values, fieldIndex));\n    });\n  };\n\n  useState(() => {\n    props.formValues && form.setFieldsValue(props.formValues);\n  }, props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"complex-form\",\n      form: form,\n      onFinish: onFinish,\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        gutter: 24,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"job_name\",\n            label: \"Job name\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Job name is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 0),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Job name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"pad_name\",\n            label: \"Pad name\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Pad name is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 1),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Pad name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 24,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"job_type\",\n            label: \"Job type\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Job type is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 2),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Job type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"pad_id\",\n            label: \"Pad Id\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Pad Id is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 3),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Pad id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 24,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"job_id\",\n            label: \"Job id\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Job id is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 4),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Job id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"client_name\",\n            label: \"Client name\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Client name is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 5),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Client name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 24,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"afe_number\",\n            label: \"AFE #\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'AFE # is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 6),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"AFE #\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"customer_field_rep\",\n            label: \"Customer field rep\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Customer field rep is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 7),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Customer field rep\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 24,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"country\",\n            label: \"Country\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Country is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 8),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"rep_contact\",\n            label: \"Rep contact #\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Rep contact # is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 9),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Rep contact #\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 24,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"basin\",\n            label: \"Basin\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Basin is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 10),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Basin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"operator\",\n            label: \"Operator\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Operator is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 11),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Operator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 24,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"state\",\n            label: \"State\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'State is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 12),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"service_company\",\n            label: \"Service company\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Service company is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 13),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Service company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 24,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"start_date\",\n            label: \"Start date\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Start date is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 14),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Start date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"wireline_company\",\n            label: \"Wireline company\",\n            validateTrigger: \"onBlur\",\n            rules: [{\n              required: true,\n              message: 'Wireline company is required!'\n            }],\n            onPaste: e => handlePaste(e, form, 15),\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Wireline company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          style: {\n            textAlign: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(JobInfo, \"nUUTpLI9g6ZmEVmct33bFE/sJ/k=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = JobInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobInfo\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/JobInfo.js"],"names":["React","useState","Form","Input","Row","Col","Button","ProjectUtil","JobInfo","props","form","useForm","onFinish","values","setFormValue","next","handlePaste","e","fieldIndex","data","clipboardData","items","getAsString","str","split","forEach","v","push","setFieldsValue","setClipboardValues","getFieldsValue","formValues","span","required","message","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input, Row, Col, Button } from 'antd';\nimport ProjectUtil from \"util/ProjectUtil\";\n\nexport default function JobInfo(props) {\n    const [form] = Form.useForm();\n\n    const onFinish = values => {\n        props.setFormValue(values);\n        props.next();\n    };\n\n    const handlePaste = (e, form, fieldIndex) => {\n        var data = e.clipboardData.items[0];\n        \n        const values = [];\n        data.getAsString(str => {\n            str.split(/\\s/).forEach((v) => {\n              values.push(v);\n            })\n            form.setFieldsValue(ProjectUtil.setClipboardValues(form.getFieldsValue(), values, fieldIndex));\n        });\n    }\n\n    useState(() => {\n        props.formValues && form.setFieldsValue(props.formValues)\n    }, props);\n    \n    return (\n        <>\n            <Form name=\"complex-form\" form={form} onFinish={onFinish} labelCol={{ span: 8 }} wrapperCol={{ span: 16 }}>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"job_name\"\n                            label=\"Job name\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Job name is required!',\n                                },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 0)}\n                        >\n                            <Input placeholder=\"Job name\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"pad_name\"\n                            label=\"Pad name\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Pad name is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 1)}\n                        >\n                            <Input placeholder=\"Pad name\" />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"job_type\"\n                            label=\"Job type\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Job type is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 2)}\n                        >\n                            <Input placeholder=\"Job type\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"pad_id\"\n                            label=\"Pad Id\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Pad Id is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 3)}\n                        >\n                            <Input placeholder=\"Pad id\" />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"job_id\"\n                            label=\"Job id\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Job id is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 4)}\n                        >\n                            <Input placeholder=\"Job id\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"client_name\"\n                            label=\"Client name\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Client name is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 5)}\n                        >\n                            <Input placeholder=\"Client name\" />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"afe_number\"\n                            label=\"AFE #\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'AFE # is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 6)}\n                        >\n                            <Input placeholder=\"AFE #\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"customer_field_rep\"\n                            label=\"Customer field rep\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Customer field rep is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 7)}\n                        >\n                            <Input placeholder=\"Customer field rep\" />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"country\"\n                            label=\"Country\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Country is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 8)}\n                        >\n                            <Input placeholder=\"Country\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"rep_contact\"\n                            label=\"Rep contact #\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Rep contact # is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 9)}\n                        >\n                            <Input placeholder=\"Rep contact #\" />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"basin\"\n                            label=\"Basin\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Basin is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 10)}\n                        >\n                            <Input placeholder=\"Basin\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"operator\"\n                            label=\"Operator\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Operator is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 11)}\n                        >\n                            <Input placeholder=\"Operator\" />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"state\"\n                            label=\"State\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'State is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 12)}\n                        >\n                            <Input placeholder=\"State\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"service_company\"\n                            label=\"Service company\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Service company is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 13)}\n                        >\n                            <Input placeholder=\"Service company\" />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"start_date\"\n                            label=\"Start date\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Start date is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 14)}\n                        >\n                            <Input placeholder=\"Start date\" />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"wireline_company\"\n                            label=\"Wireline company\"\n                            validateTrigger=\"onBlur\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Wireline company is required!',\n                            },\n                            ]}\n                            onPaste={(e) => handlePaste(e, form, 15)}\n                        >\n                            <Input placeholder=\"Wireline company\" />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col\n                        span={24}\n                        style={{\n                            textAlign: 'right',\n                        }}\n                        >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Next\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}