{"ast":null,"code":"import _objectSpread from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axiosConfig\";import config from\"config\";import ENUMS from\"constants/appEnums\";import React,{useState}from\"react\";import{useHistory}from\"react-router\";import ProjectUtil from\"util/ProjectUtil\";import{Card,PageHeader,Button,Steps}from'antd';import JobInfo from\"components/Forms/ProjectCreate/JobInfo\";import WellInfo from\"components/Forms/ProjectCreate/WellInfo\";import WellVolume from\"components/Forms/ProjectCreate/WellVolume\";import ClientInfo from\"components/Forms/ProjectCreate/ClientInfo\";import CrewInfo from\"components/Forms/ProjectCreate/CrewInfo\";import Equipment from\"components/Forms/ProjectCreate/Equipment\";import ProjectInfo from\"components/Forms/ProjectCreate/ProjectInfo\";import _ from\"lodash\";import HttpUtil from\"util/HttpUtil\";import{useToasts}from\"react-toast-notifications\";// components\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Step=Steps.Step;export default function NewProject(){var history=useHistory();var _useToasts=useToasts(),addToast=_useToasts.addToast;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),current=_useState2[0],setCurrent=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),projectInfoValues=_useState4[0],setProjectInfoValues=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),jobInfoValues=_useState6[0],setJobInfoValues=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),padInfoValues=_useState8[0],setPadInfoValues=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),wellInfoValues=_useState10[0],setWellInfoValues=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),wellVolumeValues=_useState12[0],setWellVolumeValues=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),wellVolumeEstimationsValues=_useState14[0],setWellVolumeEstimationsValues=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),clientInfoValues=_useState16[0],setClientInfoValues=_useState16[1];var _useState17=useState(null),_useState18=_slicedToArray(_useState17,2),crewInfoValues=_useState18[0],setCrewInfoValues=_useState18[1];var _useState19=useState(null),_useState20=_slicedToArray(_useState19,2),equipmentValues=_useState20[0],setEquipmentValues=_useState20[1];var next=function next(){console.log('next',_.cloneDeep(jobInfoValues));setCurrent(current+1);};var prev=function prev(){console.log('prev',_.cloneDeep(jobInfoValues));setCurrent(current-1);};var handleCreateProjectFormSubmit=function handleCreateProjectFormSubmit(){var wellVolumeData=wellVolumeValues?wellVolumeValues.map(function(wellVol){return ProjectUtil.formatFormValuesFromColumnGridData(wellVol);}):[];var wellVolumeEstimationsData=wellVolumeEstimationsValues?wellVolumeEstimationsValues.map(function(wellVolEst){return ProjectUtil.formatFormValuesFromRowGridData(wellVolEst);}):[];var projectData={projectValues:ProjectUtil.formatFormValuesFromRowGridData(projectInfoValues),jobInfoValues:ProjectUtil.formatFormValuesFromRowGridData(_.cloneDeep(jobInfoValues)),padInfoValues:ProjectUtil.formatFormValuesFromRowGridData(padInfoValues),wellInfoValues:ProjectUtil.formatFormValuesFromColumnGridData(wellInfoValues).map(function(x,index){return _objectSpread({},x);}),wellVolumeValues:wellVolumeData,wellVolumeEstimationsValues:wellVolumeEstimationsData,clientInfoValues:ProjectUtil.formatFormValuesFromColumnGridData(clientInfoValues),crewInfoValues:ProjectUtil.formatFormValuesFromColumnGridData(crewInfoValues),equipmentValues:ProjectUtil.formatFormValuesFromRowGridData(equipmentValues)};axios.post(config.API_URL+ENUMS.API_ROUTES.PROJECT_CREATE,_objectSpread({},projectData),_objectSpread({},HttpUtil.adminHttpHeaders())).then(function(res){if(res.status===200&&res.data){var projectId=res.data.data.project.id;addToast(\"Project created successfully!\",{appearance:'success',autoDismiss:true});history.push({pathname:'/admin/dashboard',search:'?projectId='+projectId,state:{passedId:projectId}});}}).catch(function(e){console.log(e);});};var steps=[{title:'Project Info',content:/*#__PURE__*/_jsx(ProjectInfo,{next:next,setFormValue:setProjectInfoValues,formValues:projectInfoValues})},{title:'Job Info',content:/*#__PURE__*/_jsx(JobInfo,{next:next,setJobInfoFormValue:setJobInfoValues,setPadInfoFormValue:setPadInfoValues,jobInfoFormValues:jobInfoValues,padInfoFormValues:padInfoValues})},{title:'Well Info',content:/*#__PURE__*/_jsx(WellInfo,{next:next,setFormValue:setWellInfoValues,formValues:wellInfoValues})},{title:'Well Volume',content:/*#__PURE__*/_jsx(WellVolume,{next:next,setWellVolumeFormValue:setWellVolumeValues,setWellVolumeEstimationsFormValue:setWellVolumeEstimationsValues,wellInfoValues:wellInfoValues,wellVolumeFormValues:wellVolumeValues,wellVolumeEstimationsFormValues:wellVolumeEstimationsValues})},{title:'Client Info',content:/*#__PURE__*/_jsx(ClientInfo,{next:next,setFormValue:setClientInfoValues,formValues:clientInfoValues})},{title:'Crew Info',content:/*#__PURE__*/_jsx(CrewInfo,{next:next,setFormValue:setCrewInfoValues,formValues:crewInfoValues})},{title:'Equipment',content:/*#__PURE__*/_jsx(Equipment,{next:next,setFormValue:setEquipmentValues,formValues:equipmentValues,createProjectSubmit:handleCreateProjectFormSubmit})}];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{style:{minHeight:\"80vh\"},className:\"flex justify-center items-center bg-white\",children:/*#__PURE__*/_jsxs(\"div\",{style:{width:\"1100px\"},children:[/*#__PURE__*/_jsx(PageHeader,{ghost:false,onBack:function onBack(){return window.history.back();},title:\"Fill in the information below to create a new project\"}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Steps,{progressDot:true,current:current,children:steps.map(function(item){return/*#__PURE__*/_jsx(Step,{title:item.title,className:\"mb-6\"},item.title);})}),/*#__PURE__*/_jsx(\"div\",{className:\"steps-content mb-6\",children:steps[current].content}),/*#__PURE__*/_jsx(\"div\",{className:\"steps-action flex justify-between\",style:{position:'absolute',bottom:'48px'},children:/*#__PURE__*/_jsx(Button,{style:{margin:'0 8px'},disabled:current<1,onClick:function onClick(){return prev();},children:\"Previous\"})})]})]})})});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/NewProject.js"],"names":["axios","config","ENUMS","React","useState","useHistory","ProjectUtil","Card","PageHeader","Button","Steps","JobInfo","WellInfo","WellVolume","ClientInfo","CrewInfo","Equipment","ProjectInfo","_","HttpUtil","useToasts","Step","NewProject","history","addToast","current","setCurrent","projectInfoValues","setProjectInfoValues","jobInfoValues","setJobInfoValues","padInfoValues","setPadInfoValues","wellInfoValues","setWellInfoValues","wellVolumeValues","setWellVolumeValues","wellVolumeEstimationsValues","setWellVolumeEstimationsValues","clientInfoValues","setClientInfoValues","crewInfoValues","setCrewInfoValues","equipmentValues","setEquipmentValues","next","console","log","cloneDeep","prev","handleCreateProjectFormSubmit","wellVolumeData","map","wellVol","formatFormValuesFromColumnGridData","wellVolumeEstimationsData","wellVolEst","formatFormValuesFromRowGridData","projectData","projectValues","x","index","post","API_URL","API_ROUTES","PROJECT_CREATE","adminHttpHeaders","then","res","status","data","projectId","project","id","appearance","autoDismiss","push","pathname","search","state","passedId","catch","e","steps","title","content","minHeight","width","window","back","item","position","bottom","margin"],"mappings":"uXAAA,MAAOA,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,kBAAxB,CACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,MAA3B,CAAmCC,KAAnC,KAAgD,MAAhD,CACA,MAAOC,CAAAA,OAAP,KAAoB,wCAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yCAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2CAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2CAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yCAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0CAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4CAAxB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,MAAOC,CAAAA,QAAP,KAAqB,eAArB,CACA,OAASC,SAAT,KAA0B,2BAA1B,CAEA;6IACA,GAAQC,CAAAA,IAAR,CAAiBX,KAAjB,CAAQW,IAAR,CAEA,cAAe,SAASC,CAAAA,UAAT,EAAsB,CACjC,GAAMC,CAAAA,OAAO,CAAGlB,UAAU,EAA1B,CACA,eAAqBe,SAAS,EAA9B,CAAQI,QAAR,YAAQA,QAAR,CAEA,cAA8BpB,QAAQ,CAAC,CAAD,CAAtC,wCAAOqB,OAAP,eAAgBC,UAAhB,eACA,eAAkDtB,QAAQ,CAAC,IAAD,CAA1D,yCAAOuB,iBAAP,eAA0BC,oBAA1B,eACA,eAA0CxB,QAAQ,CAAC,IAAD,CAAlD,yCAAOyB,aAAP,eAAsBC,gBAAtB,eACA,eAA0C1B,QAAQ,CAAC,IAAD,CAAlD,yCAAO2B,aAAP,eAAsBC,gBAAtB,eACA,eAA4C5B,QAAQ,CAAC,IAAD,CAApD,0CAAO6B,cAAP,gBAAuBC,iBAAvB,gBACA,gBAAgD9B,QAAQ,CAAC,IAAD,CAAxD,2CAAO+B,gBAAP,gBAAyBC,mBAAzB,gBACA,gBAAsEhC,QAAQ,CAAC,IAAD,CAA9E,2CAAOiC,2BAAP,gBAAoCC,8BAApC,gBACA,gBAAgDlC,QAAQ,CAAC,IAAD,CAAxD,2CAAOmC,gBAAP,gBAAyBC,mBAAzB,gBACA,gBAA4CpC,QAAQ,CAAC,IAAD,CAApD,2CAAOqC,cAAP,gBAAuBC,iBAAvB,gBACA,gBAA8CtC,QAAQ,CAAC,IAAD,CAAtD,2CAAOuC,eAAP,gBAAwBC,kBAAxB,gBAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACfC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAoB7B,CAAC,CAAC8B,SAAF,CAAYnB,aAAZ,CAApB,EACAH,UAAU,CAACD,OAAO,CAAG,CAAX,CAAV,CACH,CAHD,CAKA,GAAMwB,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACfH,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAoB7B,CAAC,CAAC8B,SAAF,CAAYnB,aAAZ,CAApB,EACAH,UAAU,CAACD,OAAO,CAAG,CAAX,CAAV,CACH,CAHD,CAKA,GAAMyB,CAAAA,6BAA6B,CAAG,QAAhCA,CAAAA,6BAAgC,EAAM,CACxC,GAAMC,CAAAA,cAAc,CAAGhB,gBAAgB,CAAGA,gBAAgB,CAACiB,GAAjB,CAAqB,SAAAC,OAAO,CAAI,CACtE,MAAO/C,CAAAA,WAAW,CAACgD,kCAAZ,CAA+CD,OAA/C,CAAP,CACH,CAFyC,CAAH,CAElC,EAFL,CAGA,GAAME,CAAAA,yBAAyB,CAAGlB,2BAA2B,CAAGA,2BAA2B,CAACe,GAA5B,CAAgC,SAAAI,UAAU,CAAI,CAC1G,MAAOlD,CAAAA,WAAW,CAACmD,+BAAZ,CAA4CD,UAA5C,CAAP,CACH,CAF+D,CAAH,CAExD,EAFL,CAIA,GAAME,CAAAA,WAAW,CAAG,CAChBC,aAAa,CAAErD,WAAW,CAACmD,+BAAZ,CAA4C9B,iBAA5C,CADC,CAEhBE,aAAa,CAAEvB,WAAW,CAACmD,+BAAZ,CAA4CvC,CAAC,CAAC8B,SAAF,CAAYnB,aAAZ,CAA5C,CAFC,CAGhBE,aAAa,CAAEzB,WAAW,CAACmD,+BAAZ,CAA4C1B,aAA5C,CAHC,CAIhBE,cAAc,CAAE3B,WAAW,CAACgD,kCAAZ,CAA+CrB,cAA/C,EAA+DmB,GAA/D,CAAmE,SAACQ,CAAD,CAAIC,KAAJ,CAAc,CAAC,wBAAWD,CAAX,EAAc,CAAhG,CAJA,CAKhBzB,gBAAgB,CAAEgB,cALF,CAMhBd,2BAA2B,CAAEkB,yBANb,CAOhBhB,gBAAgB,CAAEjC,WAAW,CAACgD,kCAAZ,CAA+Cf,gBAA/C,CAPF,CAQhBE,cAAc,CAAEnC,WAAW,CAACgD,kCAAZ,CAA+Cb,cAA/C,CARA,CAShBE,eAAe,CAAErC,WAAW,CAACmD,+BAAZ,CAA4Cd,eAA5C,CATD,CAApB,CAYA3C,KAAK,CAAC8D,IAAN,CAAW7D,MAAM,CAAC8D,OAAP,CAAiB7D,KAAK,CAAC8D,UAAN,CAAiBC,cAA7C,kBAEWP,WAFX,mBAGWvC,QAAQ,CAAC+C,gBAAT,EAHX,GAIKC,IAJL,CAIU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAf,EAAsBD,GAAG,CAACE,IAA9B,CAAoC,CAChC,GAAMC,CAAAA,SAAS,CAAGH,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcE,OAAd,CAAsBC,EAAxC,CACAjD,QAAQ,CAAC,+BAAD,CAAkC,CACtCkD,UAAU,CAAE,SAD0B,CAEtCC,WAAW,CAAE,IAFyB,CAAlC,CAAR,CAIApD,OAAO,CAACqD,IAAR,CAAa,CACTC,QAAQ,CAAE,kBADD,CAETC,MAAM,CAAE,cAAgBP,SAFf,CAGTQ,KAAK,CAAE,CAAEC,QAAQ,CAAET,SAAZ,CAHE,CAAb,EAKH,CACJ,CAjBL,EAkBKU,KAlBL,CAkBW,SAAAC,CAAC,CAAI,CACRpC,OAAO,CAACC,GAAR,CAAYmC,CAAZ,EACH,CApBL,EAqBH,CAzCD,CA2CA,GAAMC,CAAAA,KAAK,CAAG,CACV,CACIC,KAAK,CAAE,cADX,CAEIC,OAAO,cAAE,KAAC,WAAD,EACL,IAAI,CAAExC,IADD,CAEL,YAAY,CAAEjB,oBAFT,CAGL,UAAU,CAAED,iBAHP,EAFb,CADU,CAQV,CACIyD,KAAK,CAAE,UADX,CAEIC,OAAO,cAAE,KAAC,OAAD,EACL,IAAI,CAAExC,IADD,CAEL,mBAAmB,CAAEf,gBAFhB,CAGL,mBAAmB,CAAEE,gBAHhB,CAIL,iBAAiB,CAAEH,aAJd,CAI6B,iBAAiB,CAAEE,aAJhD,EAFb,CARU,CAgBV,CACIqD,KAAK,CAAE,WADX,CAEIC,OAAO,cAAE,KAAC,QAAD,EACL,IAAI,CAAExC,IADD,CAEL,YAAY,CAAEX,iBAFT,CAGL,UAAU,CAAED,cAHP,EAFb,CAhBU,CAuBV,CACImD,KAAK,CAAE,aADX,CAEIC,OAAO,cAAE,KAAC,UAAD,EACL,IAAI,CAAExC,IADD,CAEL,sBAAsB,CAAET,mBAFnB,CAGL,iCAAiC,CAAEE,8BAH9B,CAIL,cAAc,CAAEL,cAJX,CAKL,oBAAoB,CAAEE,gBALjB,CAKmC,+BAA+B,CAAEE,2BALpE,EAFb,CAvBU,CAgCV,CACI+C,KAAK,CAAE,aADX,CAEIC,OAAO,cAAE,KAAC,UAAD,EACL,IAAI,CAAExC,IADD,CAEL,YAAY,CAAEL,mBAFT,CAGL,UAAU,CAAED,gBAHP,EAFb,CAhCU,CAuCV,CACI6C,KAAK,CAAE,WADX,CAEIC,OAAO,cAAE,KAAC,QAAD,EACL,IAAI,CAAExC,IADD,CAEL,YAAY,CAAEH,iBAFT,CAGL,UAAU,CAAED,cAHP,EAFb,CAvCU,CA8CV,CACI2C,KAAK,CAAE,WADX,CAEIC,OAAO,cAAE,KAAC,SAAD,EACL,IAAI,CAAExC,IADD,CAEL,YAAY,CAAED,kBAFT,CAGL,UAAU,CAAED,eAHP,CAIL,mBAAmB,CAAEO,6BAJhB,EAFb,CA9CU,CAAd,CAyDA,mBACI,sCACI,YAAK,KAAK,CAAE,CAACoC,SAAS,CAAE,MAAZ,CAAZ,CAAiC,SAAS,CAAC,2CAA3C,uBACI,aAAK,KAAK,CAAE,CAACC,KAAK,CAAE,QAAR,CAAZ,wBACI,KAAC,UAAD,EACI,KAAK,CAAE,KADX,CAEI,MAAM,CAAE,wBAAMC,CAAAA,MAAM,CAACjE,OAAP,CAAekE,IAAf,EAAN,EAFZ,CAGI,KAAK,CAAC,uDAHV,EADJ,cAOQ,MAAC,IAAD,yBACI,KAAC,KAAD,EAAO,WAAW,KAAlB,CAAmB,OAAO,CAAEhE,OAA5B,UAEQ0D,KAAK,CAAC/B,GAAN,CAAU,SAAAsC,IAAI,qBACV,KAAC,IAAD,EAAuB,KAAK,CAAEA,IAAI,CAACN,KAAnC,CAA0C,SAAS,CAAC,MAApD,EAAWM,IAAI,CAACN,KAAhB,CADU,EAAd,CAFR,EADJ,cAQI,YAAK,SAAS,CAAC,oBAAf,UACKD,KAAK,CAAC1D,OAAD,CAAL,CAAe4D,OADpB,EARJ,cAWI,YAAK,SAAS,CAAC,mCAAf,CAAmD,KAAK,CAAE,CAACM,QAAQ,CAAE,UAAX,CAAuBC,MAAM,CAAE,MAA/B,CAA1D,uBAEQ,KAAC,MAAD,EAAQ,KAAK,CAAE,CAAEC,MAAM,CAAE,OAAV,CAAf,CAAoC,QAAQ,CAAEpE,OAAO,CAAG,CAAxD,CAA2D,OAAO,CAAE,yBAAMwB,CAAAA,IAAI,EAAV,EAApE,sBAFR,EAXJ,GAPR,GADJ,EADJ,EADJ,CAiCH","sourcesContent":["import axios from \"axiosConfig\";\nimport config from \"config\";\nimport ENUMS from \"constants/appEnums\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ProjectUtil from \"util/ProjectUtil\";\nimport { Card, PageHeader, Button, Steps } from 'antd';\nimport JobInfo from \"components/Forms/ProjectCreate/JobInfo\";\nimport WellInfo from \"components/Forms/ProjectCreate/WellInfo\";\nimport WellVolume from \"components/Forms/ProjectCreate/WellVolume\";\nimport ClientInfo from \"components/Forms/ProjectCreate/ClientInfo\";\nimport CrewInfo from \"components/Forms/ProjectCreate/CrewInfo\";\nimport Equipment from \"components/Forms/ProjectCreate/Equipment\";\nimport ProjectInfo from \"components/Forms/ProjectCreate/ProjectInfo\";\nimport _ from \"lodash\";\nimport HttpUtil from \"util/HttpUtil\";\nimport { useToasts } from \"react-toast-notifications\";\n\n// components\nconst { Step } = Steps;\n\nexport default function NewProject() {\n    const history = useHistory();\n    const { addToast } = useToasts();\n\n    const [current, setCurrent] = useState(0);\n    const [projectInfoValues, setProjectInfoValues] = useState(null);\n    const [jobInfoValues, setJobInfoValues] = useState(null);\n    const [padInfoValues, setPadInfoValues] = useState(null);\n    const [wellInfoValues, setWellInfoValues] = useState(null);\n    const [wellVolumeValues, setWellVolumeValues] = useState(null);\n    const [wellVolumeEstimationsValues, setWellVolumeEstimationsValues] = useState(null);\n    const [clientInfoValues, setClientInfoValues] = useState(null);\n    const [crewInfoValues, setCrewInfoValues] = useState(null);\n    const [equipmentValues, setEquipmentValues] = useState(null);\n\n    const next = () => {\n        console.log('next', _.cloneDeep(jobInfoValues));\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        console.log('prev', _.cloneDeep(jobInfoValues));\n        setCurrent(current - 1);\n    };\n\n    const handleCreateProjectFormSubmit = () => {\n        const wellVolumeData = wellVolumeValues ? wellVolumeValues.map(wellVol => {\n            return ProjectUtil.formatFormValuesFromColumnGridData(wellVol);\n        }) : [];\n        const wellVolumeEstimationsData = wellVolumeEstimationsValues ? wellVolumeEstimationsValues.map(wellVolEst => {\n            return ProjectUtil.formatFormValuesFromRowGridData(wellVolEst);\n        }) : [];\n        \n        const projectData = {\n            projectValues: ProjectUtil.formatFormValuesFromRowGridData(projectInfoValues),\n            jobInfoValues: ProjectUtil.formatFormValuesFromRowGridData(_.cloneDeep(jobInfoValues)),\n            padInfoValues: ProjectUtil.formatFormValuesFromRowGridData(padInfoValues),\n            wellInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(wellInfoValues).map((x, index) => {return {...x}}),\n            wellVolumeValues: wellVolumeData,\n            wellVolumeEstimationsValues: wellVolumeEstimationsData,\n            clientInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(clientInfoValues),\n            crewInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(crewInfoValues),\n            equipmentValues: ProjectUtil.formatFormValuesFromRowGridData(equipmentValues),\n        };\n        \n        axios.post(config.API_URL + ENUMS.API_ROUTES.PROJECT_CREATE,\n            {\n                ...projectData\n            }, {...HttpUtil.adminHttpHeaders()})\n            .then(res => {\n                if (res.status === 200 && res.data) {\n                    const projectId = res.data.data.project.id;\n                    addToast(\"Project created successfully!\", { \n                        appearance: 'success',\n                        autoDismiss: true\n                    });\n                    history.push({\n                        pathname: '/admin/dashboard',\n                        search: '?projectId=' + projectId,\n                        state: { passedId: projectId }\n                    });\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            });\n    }\n\n    const steps = [\n        {\n            title: 'Project Info',\n            content: <ProjectInfo\n                next={next}\n                setFormValue={setProjectInfoValues}\n                formValues={projectInfoValues}></ProjectInfo>\n        },\n        {\n            title: 'Job Info',\n            content: <JobInfo\n                next={next}\n                setJobInfoFormValue={setJobInfoValues}\n                setPadInfoFormValue={setPadInfoValues}\n                jobInfoFormValues={jobInfoValues} padInfoFormValues={padInfoValues}></JobInfo>\n        },\n        {\n            title: 'Well Info',\n            content: <WellInfo\n                next={next}\n                setFormValue={setWellInfoValues}\n                formValues={wellInfoValues}></WellInfo>\n        },\n        {\n            title: 'Well Volume',\n            content: <WellVolume\n                next={next}\n                setWellVolumeFormValue={setWellVolumeValues}\n                setWellVolumeEstimationsFormValue={setWellVolumeEstimationsValues}\n                wellInfoValues={wellInfoValues}\n                wellVolumeFormValues={wellVolumeValues} wellVolumeEstimationsFormValues={wellVolumeEstimationsValues}></WellVolume>\n        },\n        {\n            title: 'Client Info',\n            content: <ClientInfo\n                next={next}\n                setFormValue={setClientInfoValues}\n                formValues={clientInfoValues}></ClientInfo>\n        },\n        {\n            title: 'Crew Info',\n            content: <CrewInfo\n                next={next}\n                setFormValue={setCrewInfoValues}\n                formValues={crewInfoValues}></CrewInfo>\n        },\n        {\n            title: 'Equipment',\n            content: <Equipment\n                next={next}\n                setFormValue={setEquipmentValues}\n                formValues={equipmentValues}\n                createProjectSubmit={handleCreateProjectFormSubmit}></Equipment>\n        }\n    ];\n\n\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div style={{width: \"1100px\"}}>\n                    <PageHeader\n                        ghost={false}\n                        onBack={() => window.history.back()}\n                        title=\"Fill in the information below to create a new project\"\n                    >\n                    </PageHeader>\n                        <Card>\n                            <Steps progressDot current={current}>\n                                {\n                                    steps.map(item => (\n                                        <Step key={item.title} title={item.title} className=\"mb-6\"/>\n                                    ))\n                                }\n                            </Steps>\n                            <div className=\"steps-content mb-6\">\n                                {steps[current].content}\n                            </div>\n                            <div className=\"steps-action flex justify-between\" style={{position: 'absolute', bottom: '48px'}}>\n                                {\n                                    <Button style={{ margin: '0 8px' }} disabled={current < 1} onClick={() => prev()}>\n                                        Previous\n                                    </Button>\n                                }\n                            </div>\n                        </Card>\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}