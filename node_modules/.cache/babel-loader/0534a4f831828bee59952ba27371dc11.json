{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/DailyLog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport { Form, Button, Row, Col, Card, Input, DatePicker, TimePicker } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport \"./DailyLog.css\";\nimport { useToasts } from \"react-toast-notifications\";\nimport ENUMS from \"constants/appEnums\";\nimport HttpUtil from \"util/HttpUtil\";\nimport { useLocation } from \"react-router\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DailyLog() {\n  _s();\n\n  let location = useLocation();\n  const {\n    addToast\n  } = useToasts();\n  const initialFormValues = {\n    dailyLogData: [{\n      date: null,\n      time: null,\n      description: null\n    }]\n  };\n  const [dailyLogs, setDailyLogs] = useState([]);\n  const [projectId, setProjectId] = useState();\n  const [wellId, setWellId] = useState();\n\n  const onChange = (date, dateString) => {\n    console.log(date, dateString);\n  };\n\n  const onFinish = values => {\n    if (values.dailyLogData.length < 1) return;\n    const val = values.dailyLogData.map(log => {\n      const date = log.date;\n      const time = moment(log.time).format(\"HH:mm:ss\");\n      console.log(moment(date).startOf(time));\n      return { ...log,\n        date: Number(moment(log.date).format('x')),\n        time: log.time.toString()\n      };\n    }); // axios.post(config.API_URL + ENUMS.API_ROUTES.DAILY_LOG,\n    //     {\n    //         project_id: Number(projectId),\n    //         well_id: Number(wellId),\n    //         logs: val\n    //     }, {...HttpUtil.adminHttpHeaders()})\n    //     .then(res => {\n    //         if (res.status === 201) {\n    //             addToast(\"Daily logs added successfully.\", { \n    //                 appearance: 'success',\n    //                 autoDismiss: true\n    //             });\n    //         }\n    //     })\n    //     .catch(e => {\n    //         console.log(e)\n    //     });\n  };\n\n  const fetchDailyLog = well_id => {\n    axios.get(config.API_URL + ENUMS.API_ROUTES.DAILY_LOG + '/' + well_id, { ...HttpUtil.adminHttpHeaders()\n    }).then(res => {\n      if (res.status === 200 && res.data) {\n        addToast(\"Daily Logs fetched\", {\n          appearance: 'success',\n          autoDismiss: true\n        });\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    if (location.state && location.state.projectId) {\n      setProjectId(location.state.projectId);\n      setWellId(location.state.wellId);\n      fetchDailyLog(location.state.wellId);\n    } else if (location.search) {\n      const params = new URLSearchParams(location.search);\n      const projectIdSearch = params.get('projectId');\n      const wellIdSearch = params.get('wellId');\n      setProjectId(projectIdSearch);\n      setWellId(wellIdSearch);\n      fetchDailyLog(wellIdSearch);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      bordered: false,\n      style: {\n        width: '100%',\n        marginBottom: '5px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-580-px mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), \"All times entered In tracking sheet are to be in 24 hour time format. The site layout and frac equipment info needs to be notated in the Daily log, with objectives including:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"disc\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"The distance from the last pump to the well (estimate) pip length \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Size of iron from pumps \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Pump types (triplex, quadplex, quinplex) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Number of pumps \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Surface line volume \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Photographs to be collected of the equipment layout if allowed by client \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:ml-64\",\n        style: {\n          width: '650px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: 24,\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 10,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          name: \"dynamic_form_nest_item\",\n          onFinish: onFinish,\n          autoComplete: \"off\",\n          initialValues: initialFormValues,\n          children: [/*#__PURE__*/_jsxDEV(Form.List, {\n            name: \"dailyLogData\",\n            children: (fields, {\n              add,\n              remove\n            }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [fields.map(({\n                key,\n                name,\n                fieldKey,\n                ...restField\n              }) => /*#__PURE__*/_jsxDEV(Row, {\n                gutter: 24,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 6,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n                    name: [name, 'date'],\n                    fieldKey: [fieldKey, 'date'],\n                    rules: [{\n                      required: true,\n                      message: 'Missing date'\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      onChange: onChange,\n                      className: \"w-full\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 6,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n                    name: [name, 'time'],\n                    fieldKey: [fieldKey, 'time'],\n                    rules: [{\n                      required: true,\n                      message: 'Missing time'\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                      onChange: onChange,\n                      className: \"w-full\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 10,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n                    name: [name, 'description'],\n                    fieldKey: [fieldKey, 'description'],\n                    rules: [{\n                      required: true,\n                      message: 'Missing description'\n                    }],\n                    className: \"w-full\",\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      placeholder: \"Description\",\n                      className: \"w-full\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 2,\n                  children: /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n                    onClick: () => remove(name)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 45\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(Row, {\n                gutter: 24,\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"dashed\",\n                      onClick: () => add(),\n                      block: true,\n                      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 59\n                      }, this),\n                      children: \"Add line\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit log\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), dailyLogs && /*#__PURE__*/_jsxDEV(Card, {\n      children: dailyLogs.map(log => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 24,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 5,\n              children: log.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 5,\n              children: log.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 14,\n              children: log.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DailyLog, \"jPOa2aISXln+H/YyaY8eaB1t4m8=\", false, function () {\n  return [useLocation, useToasts];\n});\n\n_c = DailyLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyLog\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/DailyLog.js"],"names":["React","useEffect","useState","config","axios","Form","Button","Row","Col","Card","Input","DatePicker","TimePicker","MinusCircleOutlined","PlusOutlined","useToasts","ENUMS","HttpUtil","useLocation","moment","DailyLog","location","addToast","initialFormValues","dailyLogData","date","time","description","dailyLogs","setDailyLogs","projectId","setProjectId","wellId","setWellId","onChange","dateString","console","log","onFinish","values","length","val","map","format","startOf","Number","toString","fetchDailyLog","well_id","get","API_URL","API_ROUTES","DAILY_LOG","adminHttpHeaders","then","res","status","data","appearance","autoDismiss","catch","e","state","search","params","URLSearchParams","projectIdSearch","wellIdSearch","width","marginBottom","listStyle","fields","add","remove","key","name","fieldKey","restField","required","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport { Form, Button, Row, Col, Card, Input, DatePicker, TimePicker } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport \"./DailyLog.css\";\nimport { useToasts } from \"react-toast-notifications\";\nimport ENUMS from \"constants/appEnums\";\nimport HttpUtil from \"util/HttpUtil\";\nimport { useLocation } from \"react-router\";\nimport moment from \"moment\";\n\nexport default function DailyLog() {\n    let location = useLocation();\n    const { addToast } = useToasts();\n\n    const initialFormValues = { dailyLogData: [{ date: null, time: null, description: null }] }\n\n    const [dailyLogs, setDailyLogs] = useState([]);\n    const [projectId, setProjectId] = useState();\n    const [wellId, setWellId] = useState();\n    const onChange = (date, dateString)  => {\n        console.log(date, dateString);\n    }\n\n    const onFinish = values => {\n        if (values.dailyLogData.length < 1)\n            return;\n        const val = values.dailyLogData.map(log => {\n            const date = log.date;\n            const time = moment(log.time).format(\"HH:mm:ss\");\n            console.log(moment(date).startOf(time))\n            return {\n                ...log,\n                date: Number(moment(log.date).format('x')),\n                time: log.time.toString()\n            }\n        });\n        \n        // axios.post(config.API_URL + ENUMS.API_ROUTES.DAILY_LOG,\n        //     {\n        //         project_id: Number(projectId),\n        //         well_id: Number(wellId),\n        //         logs: val\n        //     }, {...HttpUtil.adminHttpHeaders()})\n        //     .then(res => {\n        //         if (res.status === 201) {\n        //             addToast(\"Daily logs added successfully.\", { \n        //                 appearance: 'success',\n        //                 autoDismiss: true\n        //             });\n        //         }\n        //     })\n        //     .catch(e => {\n        //         console.log(e)\n        //     });\n    };\n\n    const fetchDailyLog = (well_id) => {\n        axios.get(config.API_URL + ENUMS.API_ROUTES.DAILY_LOG + '/' + well_id,\n            {\n                ...HttpUtil.adminHttpHeaders(),\n            })\n            .then(res => {\n                if (res.status === 200 && res.data) {\n                    addToast(\"Daily Logs fetched\", { \n                        appearance: 'success',\n                        autoDismiss: true\n                    });\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            })\n    }\n\n    useEffect(() => {\n        if (location.state && location.state.projectId) {\n            setProjectId(location.state.projectId);\n            setWellId(location.state.wellId);\n            fetchDailyLog(location.state.wellId)\n        }\n        else if (location.search) {\n            const params = new URLSearchParams(location.search);\n            const projectIdSearch = params.get('projectId');\n            const wellIdSearch = params.get('wellId');\n            setProjectId(projectIdSearch);\n            setWellId(wellIdSearch);\n            fetchDailyLog(wellIdSearch);\n        }\n    }, [])\n\n      \n    return (\n        <>\n            <Card bordered={false} style={{ width: '100%', marginBottom: '5px' }}>\n                <div className=\"max-w-580-px mx-auto\">\n                        <strong>Note: </strong>\n                         All times entered In tracking sheet are to be in 24 hour time format. The site layout and frac equipment info needs to be notated in the Daily log, with objectives including: \n                        <br></br>\n                        <br></br>\n                        <ul style={{listStyle: \"disc\"}}>\n                            <li>The distance from the last pump to the well (estimate) pip length </li>\n                            <li>Size of iron from pumps </li>\n                            <li>Pump types (triplex, quadplex, quinplex) </li>\n                            <li>Number of pumps </li>\n                            <li>Surface line volume </li>\n                            <li>Photographs to be collected of the equipment layout if allowed by client </li>\n                        </ul>\n                </div>\n            </Card>\n            <Card>\n                {/* <div className=\"text-right\">\n                    <Button type=\"primary\" >Submit log</Button>\n                </div> */}\n                <div className=\"md:ml-64\" style={{width: '650px'}}>\n                    <Row gutter={24} className=\"mb-2\">\n                        <Col span={6}><strong>Date</strong></Col>\n                        <Col span={6}><strong>Time</strong></Col>\n                        <Col span={10}><strong>Description</strong></Col>\n                    </Row>\n                    <Form\n                        name=\"dynamic_form_nest_item\"\n                        onFinish={onFinish}\n                        autoComplete=\"off\"\n                        initialValues={initialFormValues}\n                    >\n                        <Form.List name=\"dailyLogData\">\n                            {(fields, { add, remove }) => (\n                                <>\n                                    {fields.map(({ key, name, fieldKey, ...restField }) => (\n                                        <Row gutter={24} key={key}>\n                                            <Col span={6}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'date']}\n                                                    fieldKey={[fieldKey, 'date']}\n                                                    rules={[{ required: true, message: 'Missing date' }]}\n                                                >\n                                                    <DatePicker onChange={onChange} className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={6}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'time']}\n                                                    fieldKey={[fieldKey, 'time']}\n                                                    rules={[{ required: true, message: 'Missing time' }]}\n                                                >\n                                                    <TimePicker onChange={onChange} className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'description']}\n                                                    fieldKey={[fieldKey, 'description']}\n                                                    rules={[{ required: true, message: 'Missing description' }]}\n                                                    className=\"w-full\"\n                                                >\n                                                    <Input placeholder=\"Description\" className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={2}>\n                                                <MinusCircleOutlined onClick={() => remove(name)} />\n                                            </Col>\n                                        </Row>\n                                    ))}\n                                    <Row gutter={24}>\n                                        <Col span={8}>\n                                            <Form.Item>\n                                                <Button\n                                                    type=\"dashed\"\n                                                    onClick={() => add()}\n                                                    block\n                                                    icon={<PlusOutlined />}\n                                                >\n                                                    Add line\n                                                </Button>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                    \n                                </>\n                            )}\n                        </Form.List>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit log\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </Card>\n            {\n                dailyLogs && \n                <Card>\n                    {dailyLogs.map(log => {\n                        return <>\n                            <Row gutter={24}>\n                                <Col span={5}>{log.date}</Col>\n                                <Col span={5}>{log.time}</Col>\n                                <Col span={14}>{log.description}</Col>\n                            </Row>\n                        </>\n                    })}\n                </Card>\n            }\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}