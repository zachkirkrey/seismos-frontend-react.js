{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/JobInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Table, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport ProjectUtil from \"util/ProjectUtil\";\nimport Grid from \"./Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobInfo(props) {\n  _s();\n\n  const [form] = Form.useForm();\n  const [jobInfoGrid, setJobInfoGrid] = useState([]);\n  const rowLabels = ['Job name', 'Pad name', 'Job type', 'Pad Id', 'Job id', 'Client name', 'AFE #', 'Customer field rep', 'Country', 'Rep contact #', 'Basin', 'Operator', 'State', 'Service company', 'Start date', 'Wireline company'];\n\n  const populateJobInfoGrid = () => {\n    setJobInfoGrid(TableHeadersUtil.jobInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n      const row = t.rows.map(label => {\n        return [{\n          value: \"Well 1\"\n        }];\n      });\n      console.log(row);\n      return rows.concat(row);\n    }, []));\n  };\n\n  useState(() => {\n    props.formValues && form.setFieldsValue(props.formValues);\n    populateJobInfoGrid();\n  }, props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        columns: TableHeadersUtil.jobInfoFormTableData.columns,\n        grid: jobInfoGrid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: e => {\n          props.next();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(JobInfo, \"QkXAV59NIhsdFF1gMQXSdd6ktUI=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = JobInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobInfo\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/JobInfo.js"],"names":["React","useState","Form","Table","Button","TableHeadersUtil","ProjectUtil","Grid","JobInfo","props","form","useForm","jobInfoGrid","setJobInfoGrid","rowLabels","populateJobInfoGrid","jobInfoFormTableData","grid","reduce","rows","t","rowIdx","row","map","label","value","console","log","concat","formValues","setFieldsValue","columns","e","next"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,QAAM,CAACC,IAAD,IAASR,IAAI,CAACS,OAAL,EAAf;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMa,SAAS,GAAG,CACd,UADc,EAEd,UAFc,EAGd,UAHc,EAId,QAJc,EAKd,QALc,EAMd,aANc,EAOd,OAPc,EAQd,oBARc,EASd,SATc,EAUd,eAVc,EAWd,OAXc,EAYd,UAZc,EAad,OAbc,EAcd,iBAdc,EAed,YAfc,EAgBd,kBAhBc,CAAlB;;AAmBA,QAAMC,mBAAmB,GAAG,MAAM;AAC9BF,IAAAA,cAAc,CAACR,gBAAgB,CAACW,oBAAjB,CAAsCC,IAAtC,CAA2CC,MAA3C,CAAkD,CAACC,IAAD,EAAOC,CAAP,EAAUC,MAAV,KAAqB;AAClF,YAAMC,GAAG,GAAGF,CAAC,CAACD,IAAF,CAAOI,GAAP,CAAWC,KAAK,IAAI;AAC5B,eAAO,CACH;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADG,CAAP;AAGH,OAJW,CAAZ;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,aAAOH,IAAI,CAACS,MAAL,CAAYN,GAAZ,CAAP;AACH,KARc,EAQZ,EARY,CAAD,CAAd;AASH,GAVD;;AAYArB,EAAAA,QAAQ,CAAC,MAAM;AACXQ,IAAAA,KAAK,CAACoB,UAAN,IAAoBnB,IAAI,CAACoB,cAAL,CAAoBrB,KAAK,CAACoB,UAA1B,CAApB;AACAd,IAAAA,mBAAmB;AACtB,GAHO,EAGLN,KAHK,CAAR;AAKA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,OAAO,EAAEJ,gBAAgB,CAACW,oBAAjB,CAAsCe,OADnD;AAEI,QAAA,IAAI,EAAEnB;AAFV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAGoB,CAAD,IAAO;AAACvB,UAAAA,KAAK,CAACwB,IAAN;AAAa,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAeH;;GAxDuBzB,O;UACLN,IAAI,CAACS,O;;;KADAH,O","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Table, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport ProjectUtil from \"util/ProjectUtil\";\nimport Grid from \"./Grid\";\n\nexport default function JobInfo(props) {\n    const [form] = Form.useForm();\n    \n    const [jobInfoGrid, setJobInfoGrid] = useState([]);\n\n    const rowLabels = [\n        'Job name',\n        'Pad name',\n        'Job type',\n        'Pad Id',\n        'Job id',\n        'Client name',\n        'AFE #',\n        'Customer field rep',\n        'Country',\n        'Rep contact #',\n        'Basin',\n        'Operator',\n        'State',\n        'Service company',\n        'Start date',\n        'Wireline company'\n    ];\n\n    const populateJobInfoGrid = () => {\n        setJobInfoGrid(TableHeadersUtil.jobInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            const row = t.rows.map(label => {\n                return [\n                    { value: \"Well 1\" },\n                ]\n            })\n            console.log(row)\n            return rows.concat(row);\n        }, []))\n    }\n\n    useState(() => {\n        props.formValues && form.setFieldsValue(props.formValues)\n        populateJobInfoGrid();\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\">\n                <Grid \n                    columns={TableHeadersUtil.jobInfoFormTableData.columns}\n                    grid={jobInfoGrid}\n                ></Grid>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {props.next()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}