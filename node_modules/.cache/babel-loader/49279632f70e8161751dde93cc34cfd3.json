{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/WellInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Table, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport ProjectUtil from \"util/ProjectUtil\";\nimport Grid from \"./Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WellInfo(props) {\n  _s();\n\n  const [form] = Form.useForm();\n  const [wellInfoGrid, setWellInfoGrid] = useState([]);\n\n  const populateWillInfoGrid = () => {\n    setWellInfoGrid(TableHeadersUtil.wellInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n      const rowValues = [[{\n        value: \"Well 1\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }]];\n      return rows.concat(rowValues);\n    }, []));\n  };\n\n  useState(() => {\n    props.formValues && form.setFieldsValue(props.formValues);\n    populateWillInfoGrid();\n  }, props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        columns: TableHeadersUtil.wellInfoFormTableData.columns,\n        grid: wellInfoGrid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: e => {\n          props.next();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(WellInfo, \"r7RIkaP+ujawc7TSHWqayiyGJdU=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = WellInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WellInfo\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/WellInfo.js"],"names":["React","useState","Form","Table","Button","TableHeadersUtil","ProjectUtil","Grid","WellInfo","props","form","useForm","wellInfoGrid","setWellInfoGrid","populateWillInfoGrid","wellInfoFormTableData","grid","reduce","rows","t","rowIdx","rowValues","value","concat","formValues","setFieldsValue","columns","e","next"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAM,CAACC,IAAD,IAASR,IAAI,CAACS,OAAL,EAAf;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMa,oBAAoB,GAAG,MAAM;AAC/BD,IAAAA,eAAe,CAACR,gBAAgB,CAACU,qBAAjB,CAAuCC,IAAvC,CAA4CC,MAA5C,CAAmD,CAACC,IAAD,EAAOC,CAAP,EAAUC,MAAV,KAAqB;AACpF,YAAMC,SAAS,GAAG,CACd,CACI;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADJ,EAEI;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAFJ,EAGI;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAHJ,EAII;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAJJ,EAKI;AAAEA,QAAAA,KAAK,EAAE;AAAT,OALJ,EAMI;AAAEA,QAAAA,KAAK,EAAE;AAAT,OANJ,CADc,CAAlB;AAWA,aAAOJ,IAAI,CAACK,MAAL,CAAYF,SAAZ,CAAP;AACH,KAbe,EAab,EAba,CAAD,CAAf;AAcH,GAfD;;AAiBApB,EAAAA,QAAQ,CAAC,MAAM;AACXQ,IAAAA,KAAK,CAACe,UAAN,IAAoBd,IAAI,CAACe,cAAL,CAAoBhB,KAAK,CAACe,UAA1B,CAApB;AACAV,IAAAA,oBAAoB;AACvB,GAHO,EAGLL,KAHK,CAAR;AAKA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,OAAO,EAAEJ,gBAAgB,CAACU,qBAAjB,CAAuCW,OADpD;AAEI,QAAA,IAAI,EAAEd;AAFV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAGe,CAAD,IAAO;AAAClB,UAAAA,KAAK,CAACmB,IAAN;AAAa,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAeH;;GA1CuBpB,Q;UACLN,IAAI,CAACS,O;;;KADAH,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Table, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport ProjectUtil from \"util/ProjectUtil\";\nimport Grid from \"./Grid\";\n\nexport default function WellInfo(props) {\n    const [form] = Form.useForm();\n    \n    const [wellInfoGrid, setWellInfoGrid] = useState([]);\n\n    const populateWillInfoGrid = () => {\n        setWellInfoGrid(TableHeadersUtil.wellInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            const rowValues = [\n                [\n                    { value: \"Well 1\" },\n                    { value: \"\" },\n                    { value: \"\" },\n                    { value: \"\" },\n                    { value: \"\" },\n                    { value: \"\" },\n                ]\n            ]\n    \n            return rows.concat(rowValues);\n        }, []))\n    }\n\n    useState(() => {\n        props.formValues && form.setFieldsValue(props.formValues)\n        populateWillInfoGrid();\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\">\n                <Grid \n                    columns={TableHeadersUtil.wellInfoFormTableData.columns}\n                    grid={wellInfoGrid}\n                ></Grid>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {props.next()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}