{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/DailyLog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button, Row, Col, Card, Input, DatePicker, TimePicker } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport \"./DailyLog.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DailyLog() {\n  _s();\n\n  const initialFormValues = {\n    dailyLogData: [{\n      date: null,\n      time: null,\n      description: null\n    }]\n  };\n  const [dailyLogs, setDailyLogs] = useState([]);\n\n  const onChange = (date, dateString) => {\n    console.log(date, dateString);\n  };\n\n  const onFinish = values => {\n    if (values.dailyLogData.length < 1) return;\n    console.log(values.dailyLogData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      bordered: false,\n      style: {\n        width: '100%',\n        marginBottom: '5px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-580-px mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), \"All times entered In tracking sheet are to be in 24 hour time format. The site layout and frac equipment info needs to be notated in the Daily log, with objectives including:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"disc\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"The distance from the last pump to the well (estimate) pip length \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Size of iron from pumps \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Pump types (triplex, quadplex, quinplex) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Number of pumps \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Surface line volume \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Photographs to be collected of the equipment layout if allowed by client \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:ml-64\",\n        style: {\n          width: '650px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: 24,\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 5,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 5,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          name: \"dynamic_form_nest_item\",\n          onFinish: onFinish,\n          autoComplete: \"off\",\n          initialValues: initialFormValues,\n          children: [/*#__PURE__*/_jsxDEV(Form.List, {\n            name: \"dailyLogData\",\n            children: (fields, {\n              add,\n              remove\n            }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [fields.map(({\n                key,\n                name,\n                fieldKey,\n                ...restField\n              }) => /*#__PURE__*/_jsxDEV(Row, {\n                gutter: 24,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 5,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n                    name: [name, 'date'],\n                    fieldKey: [fieldKey, 'date'],\n                    rules: [{\n                      required: true,\n                      message: 'Missing date'\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      onChange: onChange,\n                      className: \"w-full\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 5,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n                    name: [name, 'time'],\n                    fieldKey: [fieldKey, 'time'],\n                    rules: [{\n                      required: true,\n                      message: 'Missing time'\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                      onChange: onChange,\n                      className: \"w-full\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 12,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n                    name: [name, 'description'],\n                    fieldKey: [fieldKey, 'description'],\n                    rules: [{\n                      required: true,\n                      message: 'Missing description'\n                    }],\n                    className: \"w-full\",\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      placeholder: \"Description\",\n                      className: \"w-full\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 2,\n                  children: /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n                    onClick: () => remove(name)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 45\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(Row, {\n                gutter: 24,\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"dashed\",\n                      onClick: () => add(),\n                      block: true,\n                      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 59\n                      }, this),\n                      children: \"Add line\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit log\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: dailyLogs.map(log => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 24,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 5,\n              children: log.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 5,\n              children: log.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 14,\n              children: log.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DailyLog, \"wo0US843+wPtk7znRA1C5CEfCkQ=\");\n\n_c = DailyLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyLog\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/DailyLog.js"],"names":["React","useState","Form","Button","Row","Col","Card","Input","DatePicker","TimePicker","MinusCircleOutlined","PlusOutlined","DailyLog","initialFormValues","dailyLogData","date","time","description","dailyLogs","setDailyLogs","onChange","dateString","console","log","onFinish","values","length","width","marginBottom","listStyle","fields","add","remove","map","key","name","fieldKey","restField","required","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Row, Col, Card, Input, DatePicker, TimePicker } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport \"./DailyLog.css\";\n\nexport default function DailyLog() {\n    const initialFormValues = { dailyLogData: [{ date: null, time: null, description: null }] }\n\n    const [dailyLogs, setDailyLogs] = useState([]);\n\n    const onChange = (date, dateString)  => {\n        console.log(date, dateString);\n    }\n\n    const onFinish = values => {\n        if (values.dailyLogData.length < 1)\n            return;\n        console.log(values.dailyLogData)\n    };\n\n      \n    return (\n        <>\n            <Card bordered={false} style={{ width: '100%', marginBottom: '5px' }}>\n                <div className=\"max-w-580-px mx-auto\">\n                        <strong>Note: </strong>\n                         All times entered In tracking sheet are to be in 24 hour time format. The site layout and frac equipment info needs to be notated in the Daily log, with objectives including: \n                        <br></br>\n                        <br></br>\n                        <ul style={{listStyle: \"disc\"}}>\n                            <li>The distance from the last pump to the well (estimate) pip length </li>\n                            <li>Size of iron from pumps </li>\n                            <li>Pump types (triplex, quadplex, quinplex) </li>\n                            <li>Number of pumps </li>\n                            <li>Surface line volume </li>\n                            <li>Photographs to be collected of the equipment layout if allowed by client </li>\n                        </ul>\n                </div>\n            </Card>\n            <Card>\n                {/* <div className=\"text-right\">\n                    <Button type=\"primary\" >Submit log</Button>\n                </div> */}\n                <div className=\"md:ml-64\" style={{width: '650px'}}>\n                    <Row gutter={24} className=\"mb-2\">\n                        <Col span={5}><strong>Date</strong></Col>\n                        <Col span={5}><strong>Time</strong></Col>\n                        <Col span={12}><strong>Description</strong></Col>\n                    </Row>\n                    <Form\n                        name=\"dynamic_form_nest_item\"\n                        onFinish={onFinish}\n                        autoComplete=\"off\"\n                        initialValues={initialFormValues}\n                    >\n                        <Form.List name=\"dailyLogData\">\n                            {(fields, { add, remove }) => (\n                                <>\n                                    {fields.map(({ key, name, fieldKey, ...restField }) => (\n                                        <Row gutter={24} key={key}>\n                                            <Col span={5}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'date']}\n                                                    fieldKey={[fieldKey, 'date']}\n                                                    rules={[{ required: true, message: 'Missing date' }]}\n                                                >\n                                                    <DatePicker onChange={onChange} className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={5}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'time']}\n                                                    fieldKey={[fieldKey, 'time']}\n                                                    rules={[{ required: true, message: 'Missing time' }]}\n                                                >\n                                                    <TimePicker onChange={onChange} className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={12}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'description']}\n                                                    fieldKey={[fieldKey, 'description']}\n                                                    rules={[{ required: true, message: 'Missing description' }]}\n                                                    className=\"w-full\"\n                                                >\n                                                    <Input placeholder=\"Description\" className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={2}>\n                                                <MinusCircleOutlined onClick={() => remove(name)} />\n                                            </Col>\n                                        </Row>\n                                    ))}\n                                    <Row gutter={24}>\n                                        <Col span={8}>\n                                            <Form.Item>\n                                                <Button\n                                                    type=\"dashed\"\n                                                    onClick={() => add()}\n                                                    block\n                                                    icon={<PlusOutlined />}\n                                                >\n                                                    Add line\n                                                </Button>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                    \n                                </>\n                            )}\n                        </Form.List>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit log\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </Card>\n            <Card>\n                {dailyLogs.map(log => {\n                    return <>\n                        <Row gutter={24}>\n                            <Col span={5}>{log.date}</Col>\n                            <Col span={5}>{log.time}</Col>\n                            <Col span={14}>{log.description}</Col>\n                        </Row>\n                    </>\n                })}\n            </Card>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}