{"ast":null,"code":"import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Card,Space,Table,Button}from'antd';import FAKE_DATA from\"constants/fakeData\";import _ from\"lodash\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function OcReport(){var _useState=useState(FAKE_DATA.STAGE_REPORT),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var approveStage=function approveStage(text,record){var index=data.findIndex(function(d){return d.key===record.key;});var newData=_.cloneDeep(data);newData[index].approved=true;setData(newData);};var columns=[{title:'Stage',dataIndex:'stage',key:'stage'},{title:'Pre Frac',dataIndex:'pre_frac',key:'pre_frac'},{title:'Post Frac',dataIndex:'post_frac',key:'post_frac'},{title:'NF',dataIndex:'nf',key:'nf'},{title:'FF',dataIndex:'ff',key:'ff'},{title:'Half length [ft]',dataIndex:'half_length',key:'half_length'},{title:'Width [in]',dataIndex:'width',key:'width'},{title:'Height',dataIndex:'height',key:'height'},{title:'Reserve potential',dataIndex:'reserve_potential',key:'reserve_potential'},{title:'Pore pressure',dataIndex:'pore_pressure',key:'pore_pressure'},{title:'Action',key:'action',render:function render(text,record){return/*#__PURE__*/_jsx(Space,{size:\"middle\",children:record.approved?'Approved':/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:function onClick(e){return approveStage(text,record);},children:\"Approve\"})});}}];var renderBody=function renderBody(props,columns){return/*#__PURE__*/_jsx(\"tr\",{className:props.className,children:columns.map(function(item,idx){// console.log(item)\nif(!item.hidden){return props.children[idx];}})});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Card,{bordered:false,style:{width:'100%',marginBottom:'5px'},children:/*#__PURE__*/_jsx(\"strong\",{children:\"QC Report\"})}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Table,{columns:columns,dataSource:data,components:{body:{row:function row(props){return renderBody(props,columns);}}}}),/*#__PURE__*/_jsx(Button,{type:\"primary\",disabled:data.filter(function(d){return d.approved;}).length<1,children:\"Export stage report\"})]})]});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/OcReport.js"],"names":["React","useState","Card","Space","Table","Button","FAKE_DATA","_","OcReport","STAGE_REPORT","data","setData","approveStage","text","record","index","findIndex","d","key","newData","cloneDeep","approved","columns","title","dataIndex","render","e","renderBody","props","className","map","item","idx","hidden","children","width","marginBottom","body","row","filter","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Space, Table, Button } from 'antd';\nimport FAKE_DATA from \"constants/fakeData\";\nimport _ from \"lodash\";\n\nexport default function OcReport() {\n    const [data, setData] = useState(FAKE_DATA.STAGE_REPORT);\n\n    const approveStage = (text, record) => {\n        const index = data.findIndex(d => d.key === record.key);\n        const newData = _.cloneDeep(data);\n        newData[index].approved = true;\n        setData(newData)\n    }\n    \n    const columns = [\n        {\n            title: 'Stage',\n            dataIndex: 'stage',\n            key: 'stage',\n        },\n        {\n            title: 'Pre Frac',\n            dataIndex: 'pre_frac',\n            key: 'pre_frac',\n        },\n        {\n            title: 'Post Frac',\n            dataIndex: 'post_frac',\n            key: 'post_frac',\n        },\n        {\n            title: 'NF',\n            dataIndex: 'nf',\n            key: 'nf',\n        },\n        {\n            title: 'FF',\n            dataIndex: 'ff',\n            key: 'ff',\n        },\n        {\n            title: 'Half length [ft]',\n            dataIndex: 'half_length',\n            key: 'half_length',\n        },\n        {\n            title: 'Width [in]',\n            dataIndex: 'width',\n            key: 'width',\n        },\n        {\n            title: 'Height',\n            dataIndex: 'height',\n            key: 'height',\n        },\n        {\n            title: 'Reserve potential',\n            dataIndex: 'reserve_potential',\n            key: 'reserve_potential',\n        },\n        {\n            title: 'Pore pressure',\n            dataIndex: 'pore_pressure',\n            key: 'pore_pressure',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    {   record.approved \n                        ? 'Approved'\n                        : <Button type=\"primary\" onClick={(e) => approveStage(text, record)}>Approve</Button>\n                    }\n                </Space>\n            ),\n        },\n    ];\n    \n\n    const renderBody = (props, columns) => {\n        return (\n          <tr className={props.className}>\n            {columns.map((item, idx) => {\n                // console.log(item)\n              if (!item.hidden) {\n                return props.children[idx]\n              }\n            })}\n          </tr>\n        );\n    }\n\n    return (\n        <>\n            <Card bordered={false} style={{ width: '100%', marginBottom: '5px' }}>\n                <strong>QC Report</strong>\n            </Card>\n            <Card>\n                <Table\n                    columns={columns}\n                    dataSource={data}\n                    components={{\n                        body: {\n                          row: (props) => renderBody(props, columns)\n                        },\n                      }}\n                />\n                <Button type=\"primary\" disabled={data.filter(d => d.approved).length < 1}>Export stage report</Button>\n            </Card>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}