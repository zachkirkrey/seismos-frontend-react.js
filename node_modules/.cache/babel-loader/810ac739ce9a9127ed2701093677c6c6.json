{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/ClientInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ClientInfo(props) {\n  _s();\n\n  const [form] = Form.useForm();\n  const [clientInfoGrid, setClientInfoGrid] = useState([]);\n\n  const getClientInfoGridRow = t => {\n    return t.rows.map(label => {\n      return [{\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }];\n    });\n  };\n\n  const populateClientInfoGrid = () => {\n    setClientInfoGrid(TableHeadersUtil.clientInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n      return rows.concat(getClientInfoGridRow(t));\n    }, []));\n  };\n\n  const addNewClient = e => {\n    e.preventDefault();\n    const newClientInfoGrid = [...clientInfoGrid, [{\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }]];\n    setClientInfoGrid(newClientInfoGrid);\n  };\n\n  const handleClientInfoGridChanged = updatedGridData => {\n    setClientInfoGrid(updatedGridData);\n  };\n\n  useState(() => {\n    props.formValues && form.setFieldsValue(props.formValues);\n    populateClientInfoGrid();\n  }, props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        columns: TableHeadersUtil.clientInfoFormTableData.columns,\n        grid: clientInfoGrid,\n        gridValueChanged: handleClientInfoGridChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lightBlue-600 mt-2 cursor-pointer inline-block\",\n        onClick: e => addNewClient(e),\n        children: \"+ Add a new client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: e => {\n          props.next();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClientInfo, \"cqAYtYG8N7BokqTREQ43VdLExTA=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = ClientInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientInfo\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/ClientInfo.js"],"names":["React","useState","Form","Button","TableHeadersUtil","Grid","ClientInfo","props","form","useForm","clientInfoGrid","setClientInfoGrid","getClientInfoGridRow","t","rows","map","label","value","populateClientInfoGrid","clientInfoFormTableData","grid","reduce","rowIdx","concat","addNewClient","e","preventDefault","newClientInfoGrid","handleClientInfoGridChanged","updatedGridData","formValues","setFieldsValue","columns","next"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAM,CAACC,IAAD,IAASN,IAAI,CAACO,OAAL,EAAf;AAEA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMW,oBAAoB,GAAIC,CAAD,IAAO;AAChC,WAAOA,CAAC,CAACC,IAAF,CAAOC,GAAP,CAAWC,KAAK,IAAI;AACvB,aAAO,CACH;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADG,EAEH;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAFG,EAGH;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAHG,CAAP;AAKH,KANM,CAAP;AAOH,GARD;;AAUA,QAAMC,sBAAsB,GAAG,MAAM;AACjCP,IAAAA,iBAAiB,CAACP,gBAAgB,CAACe,uBAAjB,CAAyCC,IAAzC,CAA8CC,MAA9C,CAAqD,CAACP,IAAD,EAAOD,CAAP,EAAUS,MAAV,KAAqB;AACxF,aAAOR,IAAI,CAACS,MAAL,CAAYX,oBAAoB,CAACC,CAAD,CAAhC,CAAP;AACH,KAFiB,EAEf,EAFe,CAAD,CAAjB;AAGH,GAJD;;AAMA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,iBAAiB,GAAG,CACtB,GAAGjB,cADmB,EAEtB,CACI;AAAEO,MAAAA,KAAK,EAAE;AAAT,KADJ,EAEI;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAFJ,EAGI;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAHJ,CAFsB,CAA1B;AAQAN,IAAAA,iBAAiB,CAACgB,iBAAD,CAAjB;AACH,GAXD;;AAaA,QAAMC,2BAA2B,GAAIC,eAAD,IAAqB;AACrDlB,IAAAA,iBAAiB,CAACkB,eAAD,CAAjB;AACH,GAFD;;AAIA5B,EAAAA,QAAQ,CAAC,MAAM;AACXM,IAAAA,KAAK,CAACuB,UAAN,IAAoBtB,IAAI,CAACuB,cAAL,CAAoBxB,KAAK,CAACuB,UAA1B,CAApB;AACAZ,IAAAA,sBAAsB;AACzB,GAHO,EAGLX,KAHK,CAAR;AAKA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI,QAAC,IAAD;AACI,QAAA,OAAO,EAAEH,gBAAgB,CAACe,uBAAjB,CAAyCa,OADtD;AAEI,QAAA,IAAI,EAAEtB,cAFV;AAGI,QAAA,gBAAgB,EAAEkB;AAHtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,qDAAf;AAAqE,QAAA,OAAO,EAAGH,CAAD,IAAOD,YAAY,CAACC,CAAD,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAGA,CAAD,IAAO;AAAClB,UAAAA,KAAK,CAAC0B,IAAN;AAAa,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAiBH;;GA5DuB3B,U;UACLJ,IAAI,CAACO,O;;;KADAH,U","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\n\nexport default function ClientInfo(props) {\n    const [form] = Form.useForm();\n    \n    const [clientInfoGrid, setClientInfoGrid] = useState([]);\n\n    const getClientInfoGridRow = (t) => {\n        return t.rows.map(label => {\n            return [\n                { value: \"\" },\n                { value: \"\" },\n                { value: \"\" },\n            ]\n        })\n    }\n\n    const populateClientInfoGrid = () => {\n        setClientInfoGrid(TableHeadersUtil.clientInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            return rows.concat(getClientInfoGridRow(t));\n        }, []));\n    }\n\n    const addNewClient = (e) => {\n        e.preventDefault();\n        const newClientInfoGrid = [\n            ...clientInfoGrid,\n            [\n                { value: \"\" },\n                { value: \"\" },\n                { value: \"\" }\n            ]\n        ];\n        setClientInfoGrid(newClientInfoGrid);\n    }\n\n    const handleClientInfoGridChanged = (updatedGridData) => {\n        setClientInfoGrid(updatedGridData)\n    }\n\n    useState(() => {\n        props.formValues && form.setFieldsValue(props.formValues)\n        populateClientInfoGrid();\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\">\n                <Grid \n                    columns={TableHeadersUtil.clientInfoFormTableData.columns}\n                    grid={clientInfoGrid}\n                    gridValueChanged={handleClientInfoGridChanged}\n                ></Grid>\n                <div className=\"text-lightBlue-600 mt-2 cursor-pointer inline-block\" onClick={(e) => addNewClient(e)}>+ Add a new client</div>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {props.next()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}