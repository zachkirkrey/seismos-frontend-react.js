{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/JobInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button, Space } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobInfo(props) {\n  _s();\n\n  const [form] = Form.useForm();\n  const [jobInfoGrid, setJobInfoGrid] = useState([]);\n  const [padInfoGrid, setPadInfoGrid] = useState([]);\n\n  const getRow = t => {\n    return t.rows.map(label => {\n      return [{\n        value: label,\n        readOnly: true,\n        disableEvents: true\n      }, {\n        value: \"\"\n      }];\n    });\n  };\n\n  const populateJobInfoGrid = () => {\n    setJobInfoGrid(TableHeadersUtil.jobInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n      const row = getRow(t);\n      return rows.concat(row);\n    }, []));\n  };\n\n  const populatePadInfoGrid = () => {\n    setPadInfoGrid(TableHeadersUtil.padInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n      const row = getRow(t);\n      return rows.concat(row);\n    }, []));\n  };\n\n  const handleJobInfoGridChanged = updatedGridData => {\n    setJobInfoGrid(updatedGridData);\n  };\n\n  const handlePadInfoGridChanged = updatedGridData => {\n    setPadInfoGrid(updatedGridData);\n  };\n\n  const gotoNextStep = () => {\n    props.next();\n  };\n\n  useState(() => {\n    props.formValues && form.setFieldsValue(props.formValues);\n    populateJobInfoGrid();\n    populatePadInfoGrid();\n  }, props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      style: {\n        width: '80%',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        size: \"large\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          columns: TableHeadersUtil.jobInfoFormTableData.columns,\n          grid: jobInfoGrid,\n          className: \"job-info-grid mb-8\",\n          gridValueChanged: handleJobInfoGridChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          columns: TableHeadersUtil.padInfoFormTableData.columns,\n          grid: padInfoGrid,\n          className: \"pad-info-grid mb-8\",\n          gridValueChanged: handlePadInfoGridChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: e => {\n          gotoNextStep();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(JobInfo, \"rwMRUEogX6m8gr6UQ0oFq/YMotM=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = JobInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobInfo\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/JobInfo.js"],"names":["React","useState","Form","Button","Space","TableHeadersUtil","Grid","JobInfo","props","form","useForm","jobInfoGrid","setJobInfoGrid","padInfoGrid","setPadInfoGrid","getRow","t","rows","map","label","value","readOnly","disableEvents","populateJobInfoGrid","jobInfoFormTableData","grid","reduce","rowIdx","row","concat","populatePadInfoGrid","padInfoFormTableData","handleJobInfoGridChanged","updatedGridData","handlePadInfoGridChanged","gotoNextStep","next","formValues","setFieldsValue","width","marginLeft","marginRight","columns","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Space } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\n\nexport default function JobInfo(props) {\n    const [form] = Form.useForm();\n    \n    const [jobInfoGrid, setJobInfoGrid] = useState([]);\n    const [padInfoGrid, setPadInfoGrid] = useState([]);\n\n    const getRow = (t) => {\n        return t.rows.map(label => {\n            return [\n                { value: label, readOnly: true, disableEvents: true },\n                { value: \"\" },\n            ]\n        })\n    }\n\n    const populateJobInfoGrid = () => {\n        setJobInfoGrid(TableHeadersUtil.jobInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            const row = getRow(t);\n            return rows.concat(row);\n        }, []))\n    }\n\n    const populatePadInfoGrid = () => {\n        setPadInfoGrid(TableHeadersUtil.padInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            const row = getRow(t);\n            return rows.concat(row);\n        }, []))\n    }\n\n    const handleJobInfoGridChanged = (updatedGridData) => {\n        setJobInfoGrid(updatedGridData);\n    }\n\n    const handlePadInfoGridChanged = (updatedGridData) => {\n        setPadInfoGrid(updatedGridData);\n    }\n\n    const gotoNextStep = () => {\n        props.next();\n    }\n\n    useState(() => {\n        props.formValues && form.setFieldsValue(props.formValues)\n        populateJobInfoGrid();\n        populatePadInfoGrid();\n    }, props);\n\n    return (\n        <>\n            <div className=\"flex\" style={{width: '80%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Space size=\"large\">\n                    <Grid \n                        columns={TableHeadersUtil.jobInfoFormTableData.columns}\n                        grid={jobInfoGrid}\n                        className=\"job-info-grid mb-8\"\n                        gridValueChanged={handleJobInfoGridChanged}\n                    ></Grid>\n                    <Grid \n                        columns={TableHeadersUtil.padInfoFormTableData.columns}\n                        grid={padInfoGrid}\n                        className=\"pad-info-grid mb-8\"\n                        gridValueChanged={handlePadInfoGridChanged}\n                    ></Grid>\n                </Space>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {gotoNextStep()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}