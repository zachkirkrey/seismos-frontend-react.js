{"ast":null,"code":"import _objectWithoutProperties from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _objectSpread from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _excluded=[\"key\",\"name\",\"fieldKey\"];import React,{useState}from\"react\";import{Form,Button,Row,Col,Card,Input,DatePicker,TimePicker}from'antd';import{MinusCircleOutlined,PlusOutlined}from'@ant-design/icons';import\"./DailyLog.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function DailyLog(){var initialFormValues={dailyLogData:[{date:null,time:null,description:null}]};var _useState=useState(),_useState2=_slicedToArray(_useState,2),dailyLogs=_useState2[0],setDailyLogs=_useState2[1];var onChange=function onChange(date,dateString){console.log(date,dateString);};var onFinish=function onFinish(values){if(values.dailyLogData.length<1)return;var val=values.dailyLogData.map(function(log){return _objectSpread(_objectSpread({},log),{},{date:log.date.toString(),time:log.time.toString()});});setDailyLogs(val);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Card,{bordered:false,style:{width:'100%',marginBottom:'5px'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-580-px mx-auto\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note: \"}),\"All times entered In tracking sheet are to be in 24 hour time format. The site layout and frac equipment info needs to be notated in the Daily log, with objectives including:\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"ul\",{style:{listStyle:\"disc\"},children:[/*#__PURE__*/_jsx(\"li\",{children:\"The distance from the last pump to the well (estimate) pip length \"}),/*#__PURE__*/_jsx(\"li\",{children:\"Size of iron from pumps \"}),/*#__PURE__*/_jsx(\"li\",{children:\"Pump types (triplex, quadplex, quinplex) \"}),/*#__PURE__*/_jsx(\"li\",{children:\"Number of pumps \"}),/*#__PURE__*/_jsx(\"li\",{children:\"Surface line volume \"}),/*#__PURE__*/_jsx(\"li\",{children:\"Photographs to be collected of the equipment layout if allowed by client \"})]})]})}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"md:ml-64\",style:{width:'650px'},children:[/*#__PURE__*/_jsxs(Row,{gutter:24,className:\"mb-2\",children:[/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(\"strong\",{children:\"Date\"})}),/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(\"strong\",{children:\"Time\"})}),/*#__PURE__*/_jsx(Col,{span:10,children:/*#__PURE__*/_jsx(\"strong\",{children:\"Description\"})})]}),/*#__PURE__*/_jsxs(Form,{name:\"dynamic_form_nest_item\",onFinish:onFinish,autoComplete:\"off\",initialValues:initialFormValues,children:[/*#__PURE__*/_jsx(Form.List,{name:\"dailyLogData\",children:function children(fields,_ref){var add=_ref.add,remove=_ref.remove;return/*#__PURE__*/_jsxs(_Fragment,{children:[fields.map(function(_ref2){var key=_ref2.key,name=_ref2.name,fieldKey=_ref2.fieldKey,restField=_objectWithoutProperties(_ref2,_excluded);return/*#__PURE__*/_jsxs(Row,{gutter:24,children:[/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({},restField),{},{name:[name,'date'],fieldKey:[fieldKey,'date'],rules:[{required:true,message:'Missing date'}],children:/*#__PURE__*/_jsx(DatePicker,{onChange:onChange,className:\"w-full\"})}))}),/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({},restField),{},{name:[name,'time'],fieldKey:[fieldKey,'time'],rules:[{required:true,message:'Missing time'}],children:/*#__PURE__*/_jsx(TimePicker,{onChange:onChange,className:\"w-full\"})}))}),/*#__PURE__*/_jsx(Col,{span:10,children:/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({},restField),{},{name:[name,'description'],fieldKey:[fieldKey,'description'],rules:[{required:true,message:'Missing description'}],className:\"w-full\",children:/*#__PURE__*/_jsx(Input,{placeholder:\"Description\",className:\"w-full\"})}))}),/*#__PURE__*/_jsx(Col,{span:2,children:/*#__PURE__*/_jsx(MinusCircleOutlined,{onClick:function onClick(){return remove(name);}})})]},key);}),/*#__PURE__*/_jsx(Row,{gutter:24,children:/*#__PURE__*/_jsx(Col,{span:8,children:/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"dashed\",onClick:function onClick(){return add();},block:true,icon:/*#__PURE__*/_jsx(PlusOutlined,{}),children:\"Add line\"})})})})]});}}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Submit log\"})})]})]})}),dailyLogs&&/*#__PURE__*/_jsx(Card,{children:dailyLogs.map(function(log){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Row,{gutter:24,children:[/*#__PURE__*/_jsx(Col,{span:5,children:log.date}),/*#__PURE__*/_jsx(Col,{span:5,children:log.time}),/*#__PURE__*/_jsx(Col,{span:14,children:log.description})]})});})})]});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/DailyLog.js"],"names":["React","useState","Form","Button","Row","Col","Card","Input","DatePicker","TimePicker","MinusCircleOutlined","PlusOutlined","DailyLog","initialFormValues","dailyLogData","date","time","description","dailyLogs","setDailyLogs","onChange","dateString","console","log","onFinish","values","length","val","map","toString","width","marginBottom","listStyle","fields","add","remove","key","name","fieldKey","restField","required","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Row, Col, Card, Input, DatePicker, TimePicker } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport \"./DailyLog.css\";\n\nexport default function DailyLog() {\n    const initialFormValues = { dailyLogData: [{ date: null, time: null, description: null }] }\n\n    const [dailyLogs, setDailyLogs] = useState();\n\n    const onChange = (date, dateString)  => {\n        console.log(date, dateString);\n    }\n\n    const onFinish = values => {\n        if (values.dailyLogData.length < 1)\n            return;\n        const val = values.dailyLogData.map(log => {\n            return {\n                ...log,\n                date: log.date.toString(),\n                time: log.time.toString()\n            }\n        });\n\n        setDailyLogs(val);\n    };\n\n      \n    return (\n        <>\n            <Card bordered={false} style={{ width: '100%', marginBottom: '5px' }}>\n                <div className=\"max-w-580-px mx-auto\">\n                        <strong>Note: </strong>\n                         All times entered In tracking sheet are to be in 24 hour time format. The site layout and frac equipment info needs to be notated in the Daily log, with objectives including: \n                        <br></br>\n                        <br></br>\n                        <ul style={{listStyle: \"disc\"}}>\n                            <li>The distance from the last pump to the well (estimate) pip length </li>\n                            <li>Size of iron from pumps </li>\n                            <li>Pump types (triplex, quadplex, quinplex) </li>\n                            <li>Number of pumps </li>\n                            <li>Surface line volume </li>\n                            <li>Photographs to be collected of the equipment layout if allowed by client </li>\n                        </ul>\n                </div>\n            </Card>\n            <Card>\n                {/* <div className=\"text-right\">\n                    <Button type=\"primary\" >Submit log</Button>\n                </div> */}\n                <div className=\"md:ml-64\" style={{width: '650px'}}>\n                    <Row gutter={24} className=\"mb-2\">\n                        <Col span={6}><strong>Date</strong></Col>\n                        <Col span={6}><strong>Time</strong></Col>\n                        <Col span={10}><strong>Description</strong></Col>\n                    </Row>\n                    <Form\n                        name=\"dynamic_form_nest_item\"\n                        onFinish={onFinish}\n                        autoComplete=\"off\"\n                        initialValues={initialFormValues}\n                    >\n                        <Form.List name=\"dailyLogData\">\n                            {(fields, { add, remove }) => (\n                                <>\n                                    {fields.map(({ key, name, fieldKey, ...restField }) => (\n                                        <Row gutter={24} key={key}>\n                                            <Col span={6}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'date']}\n                                                    fieldKey={[fieldKey, 'date']}\n                                                    rules={[{ required: true, message: 'Missing date' }]}\n                                                >\n                                                    <DatePicker onChange={onChange} className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={6}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'time']}\n                                                    fieldKey={[fieldKey, 'time']}\n                                                    rules={[{ required: true, message: 'Missing time' }]}\n                                                >\n                                                    <TimePicker onChange={onChange} className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'description']}\n                                                    fieldKey={[fieldKey, 'description']}\n                                                    rules={[{ required: true, message: 'Missing description' }]}\n                                                    className=\"w-full\"\n                                                >\n                                                    <Input placeholder=\"Description\" className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={2}>\n                                                <MinusCircleOutlined onClick={() => remove(name)} />\n                                            </Col>\n                                        </Row>\n                                    ))}\n                                    <Row gutter={24}>\n                                        <Col span={8}>\n                                            <Form.Item>\n                                                <Button\n                                                    type=\"dashed\"\n                                                    onClick={() => add()}\n                                                    block\n                                                    icon={<PlusOutlined />}\n                                                >\n                                                    Add line\n                                                </Button>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                    \n                                </>\n                            )}\n                        </Form.List>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit log\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </Card>\n            {\n                dailyLogs && \n                <Card>\n                    {dailyLogs.map(log => {\n                        return <>\n                            <Row gutter={24}>\n                                <Col span={5}>{log.date}</Col>\n                                <Col span={5}>{log.time}</Col>\n                                <Col span={14}>{log.description}</Col>\n                            </Row>\n                        </>\n                    })}\n                </Card>\n            }\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}