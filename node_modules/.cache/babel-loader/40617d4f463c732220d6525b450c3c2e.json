{"ast":null,"code":"import _toConsumableArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button}from'antd';import TableHeadersUtil from\"util/TableHeaderUtil\";import Grid from\"components/Grid/Grid\";import SelectEditor from\"components/Grid/DataEditor/SelectEditor\";import _ from\"lodash\";import APP_CONSTANTS from\"constants/appConstants\";import ENUMS from\"constants/appEnums\";import{MinusCircleOutlined}from\"@ant-design/icons\";import ConfirmationModal from\"components/Modal/ConfirmationModal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function CrewInfo(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),crewInfoGrid=_useState2[0],setCrewInfoGrid=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),showConfirmationModal=_useState4[0],setShowConfirmationModal=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),modalData=_useState6[0],setModalData=_useState6[1];var remove=function remove(rowIdx,grid){setShowConfirmationModal(true);setModalData({rowIdx:rowIdx,grid:grid});};var handleCancel=function handleCancel(){setShowConfirmationModal(false);setModalData(null);};var handleRemoveConfirmed=function handleRemoveConfirmed(data){data.grid.splice(data.rowIdx,1);setCrewInfoGrid(data.grid.map(function(x,index){return x.map(function(y){var componentData=y.field===ENUMS.FORM_FIELDS.CREW_INFO.ACTION?component(index,data.grid):null;return _objectSpread(_objectSpread({},y),{},{component:componentData,forceComponent:y.field===ENUMS.FORM_FIELDS.CREW_INFO.ACTION?true:false});});}));setShowConfirmationModal(false);setModalData(null);};var component=function component(rowIdx,grid){return/*#__PURE__*/_jsx(MinusCircleOutlined,{onClick:function onClick(event){return remove(rowIdx,grid);}});};var FillViewer=function FillViewer(props){var value=props.value;var foundOption=APP_CONSTANTS.ROLE_OPTIONS.find(function(op){return op.value===value;});return/*#__PURE__*/_jsx(\"div\",{className:\"cell-text-view\",children:foundOption?foundOption.label:''});};var getCrewInfoGridRow=function getCrewInfoGridRow(t){return t.rows.map(function(row){var columns=[];TableHeadersUtil.crewInfoFormTableData.columns.map(function(column){var col={};if(column.field===\"role\"){col={value:row.label,field:column.field,dataEditor:SelectEditor,valueViewer:FillViewer,className:'select-cell'};}else{col={value:\"\",field:column.field,required:column.required,className:column.className};}columns.push(col);return column;});return columns;});};var populateCrewInfoGrid=function populateCrewInfoGrid(){var grid=TableHeadersUtil.crewInfoFormTableData.grid.reduce(function(rows,t,rowIdx){return rows.concat(getCrewInfoGridRow(t));},[]);setCrewInfoGrid(grid.map(function(x,index){return x.map(function(y){var componentData=y.field===ENUMS.FORM_FIELDS.CREW_INFO.ACTION?component(index,grid):null;return _objectSpread(_objectSpread({},y),{},{component:componentData,forceComponent:y.field===ENUMS.FORM_FIELDS.CREW_INFO.ACTION?true:false});});}));};var addNewCrewInfo=function addNewCrewInfo(e){e.preventDefault();var columns=[];TableHeadersUtil.crewInfoFormTableData.columns.map(function(column){var col={};if(column.field===\"role\"){col={value:\"\",field:column.field,dataEditor:SelectEditor,valueViewer:FillViewer,className:'select-cell'};}else{col={value:\"\",field:column.field,required:column.required,className:column.className};}columns.push(col);return column;});var newCrewInfoGrid=[].concat(_toConsumableArray(crewInfoGrid),[columns]);setCrewInfoGrid(newCrewInfoGrid.map(function(x,index){return x.map(function(y){var componentData=y.field===ENUMS.FORM_FIELDS.CREW_INFO.ACTION?component(index,newCrewInfoGrid):null;return _objectSpread(_objectSpread({},y),{},{component:componentData,forceComponent:y.field===ENUMS.FORM_FIELDS.CREW_INFO.ACTION?true:false});});}));};// const addNewCrew = (e) => {\n//     e.preventDefault();\n//     const newCrewInfoGrid = [\n//         ...crewInfoGrid,\n//         [\n//             { value: \"Field engineer\", readOnly: true},\n//             { value: \"\" },\n//             { value: \"\" }\n//         ]\n//     ];\n//     setCrewInfoGrid(newCrewInfoGrid);\n// }\nvar handleCrewInfoGridChanged=function handleCrewInfoGridChanged(updatedGridData){props.setFormValue(updatedGridData);setCrewInfoGrid(updatedGridData.map(function(x,index){return x.map(function(y){var componentData=y.field===ENUMS.FORM_FIELDS.CREW_INFO.ACTION?component(index,updatedGridData):null;return _objectSpread(_objectSpread({},y),{},{component:componentData,forceComponent:y.field===ENUMS.FORM_FIELDS.CREW_INFO.ACTION?true:false});});}));};var gotoNextStep=function gotoNextStep(){var isCrewInfoValid=true;var validatedCrewGrid=_.cloneDeep(crewInfoGrid);validatedCrewGrid.map(function(row){row.map(function(cell){if(cell.required&&cell.value===\"\"){isCrewInfoValid=false;cell.className='cell-error';}return cell;});return row;});if(!isCrewInfoValid){handleCrewInfoGridChanged(validatedCrewGrid);}else{props.next();}};useState(function(){if(props.formValues!=null){props.formValues&&setCrewInfoGrid(props.formValues.map(function(x,index){return x.map(function(y){var componentData=y.field===ENUMS.FORM_FIELDS.CREW_INFO.ACTION?component(index,props.formValues):null;return _objectSpread(_objectSpread({},y),{},{component:componentData,forceComponent:y.field===ENUMS.FORM_FIELDS.CREW_INFO.ACTION?true:false});});}));}else{populateCrewInfoGrid();}},props);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",style:{width:'70%',marginLeft:'auto',marginRight:'auto'},children:[/*#__PURE__*/_jsx(Grid,{columns:TableHeadersUtil.crewInfoFormTableData.columns,grid:crewInfoGrid,gridValueChanged:handleCrewInfoGridChanged}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lightBlue-600 mt-2 cursor-pointer inline-block\",onClick:function onClick(e){return addNewCrewInfo(e);},children:\"+ Add a new crew member\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:function onClick(e){gotoNextStep();},children:\"Next\"})}),showConfirmationModal&&/*#__PURE__*/_jsx(ConfirmationModal,{isModalVisible:showConfirmationModal,handleCancel:handleCancel,handleOk:handleRemoveConfirmed,modalTitle:\"Delete Row\",modalText:\"Are you sure you want to delete this row?\",footerButtons:{cancel_text:'Cancel',confirm_text:'Yes'},data:modalData})]});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/CrewInfo.js"],"names":["React","useState","Button","TableHeadersUtil","Grid","SelectEditor","_","APP_CONSTANTS","ENUMS","MinusCircleOutlined","ConfirmationModal","CrewInfo","props","crewInfoGrid","setCrewInfoGrid","showConfirmationModal","setShowConfirmationModal","modalData","setModalData","remove","rowIdx","grid","handleCancel","handleRemoveConfirmed","data","splice","map","x","index","y","componentData","field","FORM_FIELDS","CREW_INFO","ACTION","component","forceComponent","event","FillViewer","value","foundOption","ROLE_OPTIONS","find","op","label","getCrewInfoGridRow","t","rows","row","columns","crewInfoFormTableData","column","col","dataEditor","valueViewer","className","required","push","populateCrewInfoGrid","reduce","concat","addNewCrewInfo","e","preventDefault","newCrewInfoGrid","handleCrewInfoGridChanged","updatedGridData","setFormValue","gotoNextStep","isCrewInfoValid","validatedCrewGrid","cloneDeep","cell","next","formValues","width","marginLeft","marginRight","cancel_text","confirm_text"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport SelectEditor from \"components/Grid/DataEditor/SelectEditor\";\nimport _ from \"lodash\";\nimport APP_CONSTANTS from \"constants/appConstants\";\nimport ENUMS from \"constants/appEnums\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\"; \nimport ConfirmationModal from \"components/Modal/ConfirmationModal\";\n\nexport default function CrewInfo(props) {\n    \n    const [crewInfoGrid, setCrewInfoGrid] = useState([]);\n    const [showConfirmationModal, setShowConfirmationModal] = useState();\n    const [modalData, setModalData] = useState();\n\n    const remove = (rowIdx, grid) => {\n        setShowConfirmationModal(true);\n        setModalData({\n            rowIdx,\n            grid\n        })\n    }\n\n    const handleCancel = () => {\n        setShowConfirmationModal(false);\n        setModalData(null);\n    }\n\n    const handleRemoveConfirmed = (data) => {\n        data.grid.splice(data.rowIdx, 1);\n        setCrewInfoGrid(data.grid.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? component(index, data.grid) : null;\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? true : false\n                }\n            })\n        }));\n        setShowConfirmationModal(false);\n        setModalData(null);\n    }\n    \n    const component = (rowIdx, grid) => {\n        return <MinusCircleOutlined onClick={(event) => remove(rowIdx, grid)}/>;\n    }\n\n    const FillViewer = props => {\n        const { value } = props;\n        const foundOption = APP_CONSTANTS.ROLE_OPTIONS.find(op => op.value === value);\n        return (\n            <div className=\"cell-text-view\">\n                {foundOption ? foundOption.label : ''}\n            </div>\n        )\n    }\n\n    const getCrewInfoGridRow = (t) => {\n        return t.rows.map(row => {\n            const columns = [];\n            TableHeadersUtil.crewInfoFormTableData.columns.map(column => {\n                let col = {};\n                if(column.field === \"role\") {\n                    col = { value: row.label, field: column.field, dataEditor: SelectEditor, valueViewer: FillViewer, className: 'select-cell'} \n                } else {\n                    col = { value: \"\", field: column.field, required: column.required, className: column.className };\n                }\n                columns.push(col);\n                return column;\n            })\n            return columns;\n        })\n    }\n\n    const populateCrewInfoGrid = () => {\n        const grid = TableHeadersUtil.crewInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            return rows.concat(getCrewInfoGridRow(t));\n        }, [])\n        setCrewInfoGrid(grid.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? component(index, grid) : null\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? true : false\n                }\n            })\n        }));\n    }\n\n    const addNewCrewInfo = (e) => {\n        e.preventDefault();\n        const columns = [];\n        TableHeadersUtil.crewInfoFormTableData.columns.map(column => {\n            let col = {};\n            if(column.field === \"role\") {\n                col = { value: \"\", field: column.field, dataEditor: SelectEditor, valueViewer: FillViewer, className: 'select-cell'} \n            } else {\n                col = { value: \"\", field: column.field, required: column.required, className: column.className };\n            }\n            columns.push(col);\n            return column;\n        })\n        const newCrewInfoGrid = [\n            ...crewInfoGrid,\n            columns\n        ];\n        setCrewInfoGrid(newCrewInfoGrid.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? component(index, newCrewInfoGrid) : null\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? true : false\n                }\n            })\n        }));\n    }\n\n    // const addNewCrew = (e) => {\n    //     e.preventDefault();\n    //     const newCrewInfoGrid = [\n    //         ...crewInfoGrid,\n    //         [\n    //             { value: \"Field engineer\", readOnly: true},\n    //             { value: \"\" },\n    //             { value: \"\" }\n    //         ]\n    //     ];\n    //     setCrewInfoGrid(newCrewInfoGrid);\n    // }\n\n    const handleCrewInfoGridChanged = (updatedGridData) => {\n        props.setFormValue(updatedGridData);\n        setCrewInfoGrid(updatedGridData.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? component(index, updatedGridData) : null\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? true : false\n                }\n            })\n        }))\n    }\n\n    const gotoNextStep = () => {\n        let isCrewInfoValid = true;\n        const validatedCrewGrid = _.cloneDeep(crewInfoGrid);\n        validatedCrewGrid.map(row => {\n            row.map(cell => {\n                if(cell.required && cell.value === \"\") {\n                    isCrewInfoValid = false;\n                    cell.className = 'cell-error';\n                }\n                return cell;\n            })\n            return row;\n        });\n\n        if(!isCrewInfoValid) {\n            handleCrewInfoGridChanged(validatedCrewGrid);\n        } else {\n            props.next();\n        }\n    }\n\n    useState(() => {\n        if(props.formValues != null) {\n            props.formValues && setCrewInfoGrid(props.formValues.map((x, index) => {\n                return x.map(y => { \n                    const componentData = y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? component(index, props.formValues) : null\n                    return {\n                        ...y,\n                        component: componentData,\n                        forceComponent: y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? true : false\n                    }\n                })\n            }));\n        } else {\n            populateCrewInfoGrid();\n        }\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\" style={{width: '70%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Grid \n                    columns={TableHeadersUtil.crewInfoFormTableData.columns}\n                    grid={crewInfoGrid}\n                    gridValueChanged={handleCrewInfoGridChanged}\n                ></Grid>\n                <div className=\"text-lightBlue-600 mt-2 cursor-pointer inline-block\" onClick={(e) => addNewCrewInfo(e)}>+ Add a new crew member</div>\n            </div>\n            \n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {gotoNextStep()}}>\n                    Next\n                </Button>\n            </div>\n            {\n                showConfirmationModal && <ConfirmationModal\n                    isModalVisible={showConfirmationModal}\n                    handleCancel={handleCancel}\n                    handleOk={handleRemoveConfirmed}\n                    modalTitle={\"Delete Row\"}\n                    modalText={\"Are you sure you want to delete this row?\"}\n                    footerButtons={{cancel_text: 'Cancel', confirm_text: 'Yes'}}\n                    data={modalData}\n                >\n                </ConfirmationModal>\n            }\n        </>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}