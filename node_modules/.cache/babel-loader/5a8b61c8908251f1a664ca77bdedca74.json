{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/WellInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WellInfo(props) {\n  _s();\n\n  const [form] = Form.useForm();\n  const [wellInfoGrid, setWellInfoGrid] = useState([]);\n\n  const populateWillInfoGrid = () => {\n    setWellInfoGrid(TableHeadersUtil.wellInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n      const rowValues = [[{\n        value: \"Well 1\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }]];\n      return rows.concat(rowValues);\n    }, []));\n  };\n\n  const addNewWell = e => {\n    e.preventDefault();\n    const newWellInfoGrid = [...wellInfoGrid, [{\n      value: \"Well \" + (wellInfoGrid.length + 1)\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }]];\n    setWellInfoGrid(newWellInfoGrid);\n  };\n\n  const handleWellInfoGridChanged = updatedGridData => {\n    setWellInfoGrid(updatedGridData);\n  };\n\n  const gotoNextStep = () => {\n    props.setFormValue();\n    props.next();\n  };\n\n  useState(() => {\n    props.formValues && form.setFieldsValue(props.formValues);\n    populateWillInfoGrid();\n  }, props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        columns: TableHeadersUtil.wellInfoFormTableData.columns,\n        grid: wellInfoGrid,\n        gridValueChanged: handleWellInfoGridChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lightBlue-600 mt-2 cursor-pointer inline-block\",\n        onClick: e => addNewWell(e),\n        children: \"+ Add a new well\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: e => {\n          gotoNextStep();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(WellInfo, \"r7RIkaP+ujawc7TSHWqayiyGJdU=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = WellInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WellInfo\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/WellInfo.js"],"names":["React","useState","Form","Button","TableHeadersUtil","Grid","WellInfo","props","form","useForm","wellInfoGrid","setWellInfoGrid","populateWillInfoGrid","wellInfoFormTableData","grid","reduce","rows","t","rowIdx","rowValues","value","concat","addNewWell","e","preventDefault","newWellInfoGrid","length","handleWellInfoGridChanged","updatedGridData","gotoNextStep","setFormValue","next","formValues","setFieldsValue","columns"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\n\nexport default function WellInfo(props) {\n    const [form] = Form.useForm();\n    \n    const [wellInfoGrid, setWellInfoGrid] = useState([]);\n\n    const populateWillInfoGrid = () => {\n        setWellInfoGrid(TableHeadersUtil.wellInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            const rowValues = [\n                [\n                    { value: \"Well 1\" },\n                    { value: \"\" },\n                    { value: \"\" },\n                    { value: \"\" },\n                    { value: \"\" },\n                    { value: \"\" },\n                ]\n            ]\n            return rows.concat(rowValues);\n        }, []))\n    }\n\n    const addNewWell = (e) => {\n        e.preventDefault();\n        const newWellInfoGrid = [\n            ...wellInfoGrid,\n            [\n                { value: \"Well \" +  (wellInfoGrid.length + 1)},\n                { value: \"\" },\n                { value: \"\" },\n                { value: \"\" },\n                { value: \"\" },\n                { value: \"\" },\n            ]\n        ];\n        setWellInfoGrid(newWellInfoGrid);\n    }\n\n    const handleWellInfoGridChanged = (updatedGridData) => {\n        setWellInfoGrid(updatedGridData);\n    }\n\n    const gotoNextStep = () => {\n        props.setFormValue();\n        props.next();\n    }\n\n    useState(() => {\n        props.formValues && form.setFieldsValue(props.formValues)\n        populateWillInfoGrid();\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\">\n                <Grid \n                    columns={TableHeadersUtil.wellInfoFormTableData.columns}\n                    grid={wellInfoGrid}\n                    gridValueChanged={handleWellInfoGridChanged}\n                ></Grid>\n                <div className=\"text-lightBlue-600 mt-2 cursor-pointer inline-block\" onClick={(e) => addNewWell(e)}>+ Add a new well</div>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {gotoNextStep()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}