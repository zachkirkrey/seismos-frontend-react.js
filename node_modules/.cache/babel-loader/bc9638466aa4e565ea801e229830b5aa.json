{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Grid/DataEditor/SelectShiftEditor.js\";\nimport APP_CONSTANTS from 'constants/appConstants';\nimport React, { PureComponent } from 'react';\nimport { ENTER_KEY, TAB_KEY } from 'react-datasheet/lib/keys';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectShiftEditor extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.state = {};\n  }\n\n  handleChange(opt) {\n    const {\n      onCommit,\n      onRevert\n    } = this.props;\n\n    if (!opt) {\n      return onRevert();\n    }\n\n    const {\n      e\n    } = this.state;\n    onCommit(opt.value, e);\n    console.log('COMMITTED', opt.value);\n  }\n\n  handleKeyDown(e) {\n    // record last key pressed so we can handle enter\n    if (e.which === ENTER_KEY || e.which === TAB_KEY) {\n      e.persist();\n      this.setState({\n        e\n      });\n    } else {\n      this.setState({\n        e: null\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Select, {\n      autoFocus: true,\n      openOnFocus: true,\n      closeOnSelect: true,\n      value: this.props.value,\n      onChange: this.handleChange,\n      onInputKeyDown: this.handleKeyDown,\n      options: APP_CONSTANTS.SHIFT_OPTIONS,\n      classNamePrefix: \"grid-react-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SelectShiftEditor;","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Grid/DataEditor/SelectShiftEditor.js"],"names":["APP_CONSTANTS","React","PureComponent","ENTER_KEY","TAB_KEY","Select","SelectShiftEditor","constructor","props","handleChange","bind","handleKeyDown","state","opt","onCommit","onRevert","e","value","console","log","which","persist","setState","render","SHIFT_OPTIONS"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,wBAA1B;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAAQC,SAAR,EAAmBC,OAAnB,QAAiC,0BAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,iBAAN,SAAgCJ,aAAhC,CAA8C;AAC5CK,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,KAAL,GAAa,EAAb;AACD;;AAEDH,EAAAA,YAAY,CAAEI,GAAF,EAAO;AACjB,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAAuB,KAAKP,KAAlC;;AACA,QAAI,CAACK,GAAL,EAAU;AACR,aAAOE,QAAQ,EAAf;AACD;;AACD,UAAM;AAAEC,MAAAA;AAAF,QAAQ,KAAKJ,KAAnB;AACAE,IAAAA,QAAQ,CAACD,GAAG,CAACI,KAAL,EAAYD,CAAZ,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,GAAG,CAACI,KAA7B;AACD;;AAEDN,EAAAA,aAAa,CAAEK,CAAF,EAAK;AAChB;AACA,QAAIA,CAAC,CAACI,KAAF,KAAYjB,SAAZ,IAAyBa,CAAC,CAACI,KAAF,KAAYhB,OAAzC,EAAkD;AAChDY,MAAAA,CAAC,CAACK,OAAF;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAHD,MAGO;AACL,WAAKM,QAAL,CAAc;AAAEN,QAAAA,CAAC,EAAE;AAAL,OAAd;AACD;AACF;;AAEDO,EAAAA,MAAM,GAAI;AACR,wBACE,QAAC,MAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,WAAW,MAFb;AAGE,MAAA,aAAa,MAHf;AAIE,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWS,KAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKR,YALjB;AAME,MAAA,cAAc,EAAE,KAAKE,aANvB;AAOE,MAAA,OAAO,EAAEX,aAAa,CAACwB,aAPzB;AAQE,MAAA,eAAe,EAAC;AARlB;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAzC2C;;AA4C9C,eAAelB,iBAAf","sourcesContent":["import APP_CONSTANTS from 'constants/appConstants';\nimport React, { PureComponent } from 'react';\nimport {ENTER_KEY, TAB_KEY} from 'react-datasheet/lib/keys';\nimport Select from 'react-select';\n\nclass SelectShiftEditor extends PureComponent {\n  constructor (props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.state = {}\n  }\n\n  handleChange (opt) {\n    const {onCommit, onRevert} = this.props\n    if (!opt) {\n      return onRevert()\n    }\n    const { e } = this.state\n    onCommit(opt.value, e)\n    console.log('COMMITTED', opt.value)\n  }\n\n  handleKeyDown (e) {\n    // record last key pressed so we can handle enter\n    if (e.which === ENTER_KEY || e.which === TAB_KEY) {\n      e.persist()\n      this.setState({ e })\n    } else {\n      this.setState({ e: null })\n    }\n  }\n\n  render () {\n    return (\n      <Select\n        autoFocus\n        openOnFocus\n        closeOnSelect\n        value={this.props.value}\n        onChange={this.handleChange}\n        onInputKeyDown={this.handleKeyDown}\n        options={APP_CONSTANTS.SHIFT_OPTIONS}\n        classNamePrefix=\"grid-react-select\"\n      />\n    )\n  }\n}\n\nexport default SelectShiftEditor;"]},"metadata":{},"sourceType":"module"}