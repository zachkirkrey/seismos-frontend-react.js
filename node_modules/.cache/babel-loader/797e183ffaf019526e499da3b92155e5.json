{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/WellVolume.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Table, Button, Space } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport ProjectUtil from \"util/ProjectUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WellVolume(props) {\n  _s();\n\n  const [form] = Form.useForm();\n  const [wellInfoGrid, setWellInfoGrid] = useState([]);\n\n  const getRow = t => {\n    return t.rows.map(label => {\n      return [{\n        value: label,\n        readOnly: true,\n        disableEvents: true\n      }, {\n        value: \"\"\n      }];\n    });\n  };\n\n  const populateWellInfoGrid = () => {\n    setWellInfoGrid(TableHeadersUtil.wellInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n      const row = getRow(t);\n      return rows.concat(row);\n    }, []));\n  };\n\n  useState(() => {\n    props.formValues && form.setFieldsValue(props.formValues);\n    populateWellInfoGrid();\n    populatePadInfoGrid();\n  }, props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        size: \"large\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          columns: TableHeadersUtil.wellInfoFormTableData.columns,\n          grid: wellInfoGrid,\n          className: \"job-info-grid mb-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          columns: TableHeadersUtil.padInfoFormTableData.columns,\n          grid: padInfoGrid,\n          className: \"pad-info-grid mb-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: e => {\n          props.next();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(WellVolume, \"jXkSaYOx8UyNsRp6K8Okq6oUjJc=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = WellVolume;\n\nvar _c;\n\n$RefreshReg$(_c, \"WellVolume\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/WellVolume.js"],"names":["React","useState","Form","Table","Button","Space","TableHeadersUtil","ProjectUtil","Grid","WellVolume","props","form","useForm","wellInfoGrid","setWellInfoGrid","getRow","t","rows","map","label","value","readOnly","disableEvents","populateWellInfoGrid","wellInfoFormTableData","grid","reduce","rowIdx","row","concat","formValues","setFieldsValue","populatePadInfoGrid","columns","padInfoFormTableData","padInfoGrid","e","next"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,KAA9B,QAA2C,MAA3C;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAM,CAACC,IAAD,IAAST,IAAI,CAACU,OAAL,EAAf;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMc,MAAM,GAAIC,CAAD,IAAO;AAClB,WAAOA,CAAC,CAACC,IAAF,CAAOC,GAAP,CAAWC,KAAK,IAAI;AACvB,aAAO,CACH;AAAEC,QAAAA,KAAK,EAAED,KAAT;AAAgBE,QAAAA,QAAQ,EAAE,IAA1B;AAAgCC,QAAAA,aAAa,EAAE;AAA/C,OADG,EAEH;AAAEF,QAAAA,KAAK,EAAE;AAAT,OAFG,CAAP;AAIH,KALM,CAAP;AAMH,GAPD;;AASA,QAAMG,oBAAoB,GAAG,MAAM;AAC/BT,IAAAA,eAAe,CAACR,gBAAgB,CAACkB,qBAAjB,CAAuCC,IAAvC,CAA4CC,MAA5C,CAAmD,CAACT,IAAD,EAAOD,CAAP,EAAUW,MAAV,KAAqB;AACpF,YAAMC,GAAG,GAAGb,MAAM,CAACC,CAAD,CAAlB;AACA,aAAOC,IAAI,CAACY,MAAL,CAAYD,GAAZ,CAAP;AACH,KAHe,EAGb,EAHa,CAAD,CAAf;AAIH,GALD;;AAOA3B,EAAAA,QAAQ,CAAC,MAAM;AACXS,IAAAA,KAAK,CAACoB,UAAN,IAAoBnB,IAAI,CAACoB,cAAL,CAAoBrB,KAAK,CAACoB,UAA1B,CAApB;AACAP,IAAAA,oBAAoB;AACpBS,IAAAA,mBAAmB;AACtB,GAJO,EAILtB,KAJK,CAAR;AAMA,sBACI;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA,gCACI,QAAC,IAAD;AACI,UAAA,OAAO,EAAEJ,gBAAgB,CAACkB,qBAAjB,CAAuCS,OADpD;AAEI,UAAA,IAAI,EAAEpB,YAFV;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,IAAD;AACI,UAAA,OAAO,EAAEP,gBAAgB,CAAC4B,oBAAjB,CAAsCD,OADnD;AAEI,UAAA,IAAI,EAAEE,WAFV;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAGC,CAAD,IAAO;AAAC1B,UAAAA,KAAK,CAAC2B,IAAN;AAAa,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA,kBADJ;AAuBH;;GAlDuB5B,U;UACLP,IAAI,CAACU,O;;;KADAH,U","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Table, Button, Space } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport ProjectUtil from \"util/ProjectUtil\";\nimport Grid from \"components/Grid/Grid\";\n\nexport default function WellVolume(props) {\n    const [form] = Form.useForm();\n    \n    const [wellInfoGrid, setWellInfoGrid] = useState([]);\n\n    const getRow = (t) => {\n        return t.rows.map(label => {\n            return [\n                { value: label, readOnly: true, disableEvents: true },\n                { value: \"\" },\n            ]\n        })\n    }\n\n    const populateWellInfoGrid = () => {\n        setWellInfoGrid(TableHeadersUtil.wellInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            const row = getRow(t);\n            return rows.concat(row);\n        }, []))\n    }\n\n    useState(() => {\n        props.formValues && form.setFieldsValue(props.formValues)\n        populateWellInfoGrid();\n        populatePadInfoGrid();\n    }, props);\n\n    return (\n        <>\n            <div class=\"flex\">\n                <Space size=\"large\">\n                    <Grid \n                        columns={TableHeadersUtil.wellInfoFormTableData.columns}\n                        grid={wellInfoGrid}\n                        className=\"job-info-grid mb-8\"\n                    ></Grid>\n                    <Grid \n                        columns={TableHeadersUtil.padInfoFormTableData.columns}\n                        grid={padInfoGrid}\n                        className=\"pad-info-grid mb-8\"\n                    ></Grid>\n                </Space>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {props.next()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}