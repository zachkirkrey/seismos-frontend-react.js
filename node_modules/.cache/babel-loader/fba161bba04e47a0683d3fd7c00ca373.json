{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/app.js\",\n    _s = $RefreshSig$();\n\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport Auth from \"layouts/Auth.js\";\nimport Admin from \"layouts/Admin.js\";\nimport ENUMS from \"constants/appEnums\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index';\nimport { AppContext } from \"util/ContextUtil\";\nimport React, { useState, useEffect } from \"react\";\nimport NotFound from \"components/NotFound/NotFound\";\nimport { useToasts } from 'react-toast-notifications';\nimport { BrowserRouter, Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport FAKE_DATA from \"constants/fakeData\";\nimport HttpUtil from \"util/HttpUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Application() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    addToast\n  } = useToasts();\n  const history = useHistory();\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  const logOutUser = () => {\n    userHasAuthenticated(false);\n    dispatch(allActions.authActions.userLoggedOut());\n    localStorage.removeItem('JWT');\n    history.push('/auth/login');\n  };\n  /**\n   * Method to save user data in redux store and set local storage with JWT\n   * @param {Object} data \n   */\n\n\n  const saveUserState = data => {\n    console.log(data, 'here');\n    localStorage.setItem('JWT', data.access_token);\n    userHasAuthenticated(true);\n    dispatch(allActions.authActions.setUserState(data.user));\n    dispatch(allActions.authActions.setUserProjectIds(data.project_ids));\n  };\n\n  useEffect(() => {\n    const onLoad = async () => {\n      if (localStorage.getItem('JWT')) {\n        axios.get(config.API_URL + ENUMS.API_ROUTES.AUTH_STATUS, { ...HttpUtil.adminHttpHeaders()\n        }).then(res => {\n          saveUserState(res.data.data);\n          userHasAuthenticated(true);\n          setIsAuthenticating(false);\n        }).catch(error => {\n          setIsAuthenticating(false);\n\n          if (error.response) {// logOutUser();\n          }\n        });\n      } else {\n        setIsAuthenticating(false);\n      }\n    };\n\n    onLoad();\n  }, [addToast, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isAuthenticating && /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        isAuthenticated,\n        userHasAuthenticated\n      },\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: ENUMS.ROUTES.ADMIN,\n            render: props => /*#__PURE__*/_jsxDEV(Admin, { ...props,\n              isAuthenticated: isAuthenticated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: ENUMS.ROUTES.AUTH,\n            render: props => /*#__PURE__*/_jsxDEV(Auth, { ...props,\n              isAuthenticated: isAuthenticated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 74\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            from: \"/\",\n            to: \"/auth/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            render: props => /*#__PURE__*/_jsxDEV(NotFound, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Application, \"o7VCnGKH7C+7QQl1Zpg4hPEhXz0=\", false, function () {\n  return [useDispatch, useToasts, useHistory];\n});\n\n_c = Application;\n\nvar _c;\n\n$RefreshReg$(_c, \"Application\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/app.js"],"names":["config","axios","Auth","Admin","ENUMS","useDispatch","allActions","AppContext","React","useState","useEffect","NotFound","useToasts","BrowserRouter","Route","Switch","Redirect","useHistory","FAKE_DATA","HttpUtil","Application","dispatch","addToast","history","isAuthenticated","userHasAuthenticated","isAuthenticating","setIsAuthenticating","logOutUser","authActions","userLoggedOut","localStorage","removeItem","push","saveUserState","data","console","log","setItem","access_token","setUserState","user","setUserProjectIds","project_ids","onLoad","getItem","get","API_URL","API_ROUTES","AUTH_STATUS","adminHttpHeaders","then","res","catch","error","response","ROUTES","ADMIN","props","AUTH"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiDC,UAAjD,QAAmE,kBAAnE;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;;;AAEA,eAAe,SAASC,WAAT,GAAwB;AAAA;;AACnC,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAeV,SAAS,EAA9B;AACA,QAAMW,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAM,CAACO,eAAD,EAAkBC,oBAAlB,IAA0ChB,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACiB,gBAAD,EAAmBC,mBAAnB,IAA0ClB,QAAQ,CAAC,IAAD,CAAxD;;AAEA,QAAMmB,UAAU,GAAG,MAAM;AACrBH,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAJ,IAAAA,QAAQ,CAACf,UAAU,CAACuB,WAAX,CAAuBC,aAAvB,EAAD,CAAR;AACAC,IAAAA,YAAY,CAACC,UAAb,CAAwB,KAAxB;AACAT,IAAAA,OAAO,CAACU,IAAR,CAAa,aAAb;AACH,GALD;AAOA;AACJ;AACA;AACA;;;AACK,QAAMC,aAAa,GAAIC,IAAD,IAAU;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,MAAlB;AACDJ,IAAAA,YAAY,CAACO,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACI,YAAjC;AACAd,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAJ,IAAAA,QAAQ,CAACf,UAAU,CAACuB,WAAX,CAAuBW,YAAvB,CAAoCL,IAAI,CAACM,IAAzC,CAAD,CAAR;AACApB,IAAAA,QAAQ,CAACf,UAAU,CAACuB,WAAX,CAAuBa,iBAAvB,CAAyCP,IAAI,CAACQ,WAA9C,CAAD,CAAR;AACH,GANA;;AASDjC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkC,MAAM,GAAG,YAAY;AACvB,UAAIb,YAAY,CAACc,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC7B5C,QAAAA,KAAK,CAAC6C,GAAN,CAAU9C,MAAM,CAAC+C,OAAP,GAAiB3C,KAAK,CAAC4C,UAAN,CAAiBC,WAA5C,EACA,EACI,GAAG9B,QAAQ,CAAC+B,gBAAT;AADP,SADA,EAICC,IAJD,CAIMC,GAAG,IAAI;AACTlB,UAAAA,aAAa,CAACkB,GAAG,CAACjB,IAAJ,CAASA,IAAV,CAAb;AACAV,UAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAE,UAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,SARD,EASC0B,KATD,CASOC,KAAK,IAAI;AACZ3B,UAAAA,mBAAmB,CAAC,KAAD,CAAnB;;AACA,cAAI2B,KAAK,CAACC,QAAV,EAAoB,CAChB;AACH;AACJ,SAdD;AAeH,OAhBD,MAiBK;AACD5B,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH;AACJ,KArBD;;AAsBAiB,IAAAA,MAAM;AACT,GAxBQ,EAwBN,CAACtB,QAAD,EAAWD,QAAX,CAxBM,CAAT;AA0BA,sBACI;AAAA,cACM,CAACK,gBAAD,iBACF,QAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE;AAAEF,QAAAA,eAAF;AAAmBC,QAAAA;AAAnB,OAA5B;AAAA,6BACI,QAAC,aAAD;AAAA,+BACI,QAAC,MAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAErB,KAAK,CAACoD,MAAN,CAAaC,KAA1B;AAAiC,YAAA,MAAM,EAAEC,KAAK,iBAAI,QAAC,KAAD,OAAWA,KAAX;AAAkB,cAAA,eAAe,EAAElC;AAAnC;AAAA;AAAA;AAAA;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEpB,KAAK,CAACoD,MAAN,CAAaG,IAA1B;AAAgC,YAAA,MAAM,EAAED,KAAK,iBAAI,QAAC,IAAD,OAAUA,KAAV;AAAiB,cAAA,eAAe,EAAElC;AAAlC;AAAA;AAAA;AAAA;AAAA;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAOI,QAAC,QAAD;AAAU,YAAA,IAAI,EAAC,GAAf;AAAmB,YAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI,QAAC,KAAD;AAAO,YAAA,MAAM,EAAEkC,KAAK,iBAAI,QAAC,QAAD,OAAcA;AAAd;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAoBH;;GA1EuBtC,W;UACHf,W,EACIO,S,EACLK,U;;;KAHIG,W","sourcesContent":["import config from \"config\";\nimport axios from \"axiosConfig\";\nimport Auth from \"layouts/Auth.js\";\nimport Admin from \"layouts/Admin.js\";\nimport ENUMS from \"constants/appEnums\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index';\nimport { AppContext } from \"util/ContextUtil\";\nimport React, { useState, useEffect } from \"react\";\nimport NotFound from \"components/NotFound/NotFound\";\nimport { useToasts } from 'react-toast-notifications';\nimport { BrowserRouter, Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport FAKE_DATA from \"constants/fakeData\";\nimport HttpUtil from \"util/HttpUtil\";\n\nexport default function Application () {\n    const dispatch = useDispatch();\n    const { addToast } = useToasts();\n    const history = useHistory();\n\n    const [isAuthenticated, userHasAuthenticated] = useState(false);\n    const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n    const logOutUser = () => {\n        userHasAuthenticated(false);\n        dispatch(allActions.authActions.userLoggedOut());\n        localStorage.removeItem('JWT');\n        history.push('/auth/login');\n    }\n\n    /**\n     * Method to save user data in redux store and set local storage with JWT\n     * @param {Object} data \n     */\n     const saveUserState = (data) => {\n         console.log(data, 'here');\n        localStorage.setItem('JWT', data.access_token);\n        userHasAuthenticated(true);\n        dispatch(allActions.authActions.setUserState(data.user));\n        dispatch(allActions.authActions.setUserProjectIds(data.project_ids));\n    }\n\n\n    useEffect(() => {\n        const onLoad = async () => {\n            if (localStorage.getItem('JWT')) {\n                axios.get(config.API_URL + ENUMS.API_ROUTES.AUTH_STATUS,\n                {\n                    ...HttpUtil.adminHttpHeaders()\n                })\n                .then(res => {\n                    saveUserState(res.data.data);\n                    userHasAuthenticated(true);\n                    setIsAuthenticating(false);\n                })\n                .catch(error => {\n                    setIsAuthenticating(false);\n                    if (error.response) {\n                        // logOutUser();\n                    }\n                })\n            }\n            else {\n                setIsAuthenticating(false);\n            }\n        }      \n        onLoad();\n    }, [addToast, dispatch]);\n  \n    return (\n        <>\n            { !isAuthenticating &&\n            <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route path={ENUMS.ROUTES.ADMIN} render={props => <Admin {...props} isAuthenticated={isAuthenticated} />} />\n                        <Route path={ENUMS.ROUTES.AUTH} render={props => <Auth {...props} isAuthenticated={isAuthenticated} />} />\n                        {/* \n                        // TODO: remove the comments\n                        <Redirect from=\"/\" to=\"/auth/home\" /> \n                        */} \n                        <Redirect from=\"/\" to=\"/auth/login\" />\n                        <Route render={props => <NotFound {...props} />} />\n                    </Switch>\n                </BrowserRouter>\n            </AppContext.Provider>\n            }\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}