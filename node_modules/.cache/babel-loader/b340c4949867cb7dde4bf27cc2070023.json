{"ast":null,"code":"import _objectSpread from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axiosConfig\";import config from\"config\";import ENUMS from\"constants/appEnums\";import React,{useState}from\"react\";import{useDispatch}from\"react-redux\";import{useHistory}from\"react-router\";import ProjectUtil from\"util/ProjectUtil\";import allActions from'redux/actions/index';import{Card,PageHeader,Button,Steps}from'antd';import JobInfo from\"components/Forms/ProjectCreate/JobInfo\";import WellInfo from\"components/Forms/ProjectCreate/WellInfo\";import WellVolume from\"components/Forms/ProjectCreate/WellVolume\";import ClientInfo from\"components/Forms/ProjectCreate/ClientInfo\";import CrewInfo from\"components/Forms/ProjectCreate/CrewInfo\";import Equipment from\"components/Forms/ProjectCreate/Equipment\";// components\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Step=Steps.Step;export default function NewProject(){var history=useHistory();var dispatch=useDispatch();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),current=_useState2[0],setCurrent=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),jobInfoValues=_useState4[0],setJobInfoValues=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),padInfoValues=_useState6[0],setPadInfoValues=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),wellInfoValues=_useState8[0],setWellInfoValues=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),wellVolumeValues=_useState10[0],setWellVolumeValues=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),wellVolumeEstimationsValues=_useState12[0],setWellVolumeEstimationsValues=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),clientInfoValues=_useState14[0],setClientInfoValues=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),crewInfoValues=_useState16[0],setCrewInfoValues=_useState16[1];var _useState17=useState(null),_useState18=_slicedToArray(_useState17,2),equipmentValues=_useState18[0],setEquipmentValues=_useState18[1];var next=function next(){setCurrent(current+1);};var prev=function prev(){setCurrent(current-1);};var handleCreateProjectFormSubmit=function handleCreateProjectFormSubmit(){var wellVolumeData=wellVolumeValues?wellVolumeValues.map(function(wellVol){return ProjectUtil.formatFormValuesFromColumnGridData(wellVol);}):[];var wellVolumeEstimationsData=wellVolumeEstimationsValues?wellVolumeEstimationsValues.map(function(wellVolEst){return ProjectUtil.formatFormValuesFromRowGridData(wellVolEst);}):[];var projectData={jobInfoValues:ProjectUtil.formatFormValuesFromRowGridData(jobInfoValues),padInfoValues:ProjectUtil.formatFormValuesFromRowGridData(padInfoValues),wellInfoValues:ProjectUtil.formatFormValuesFromColumnGridData(wellInfoValues).map(function(x,index){return _objectSpread(_objectSpread({},x),{},{id:index+1});}),wellVolumeValues:wellVolumeData,wellVolumeEstimationsValues:wellVolumeEstimationsData,clientInfoValues:ProjectUtil.formatFormValuesFromColumnGridData(clientInfoValues),crewInfoValues:ProjectUtil.formatFormValuesFromColumnGridData(crewInfoValues),equipmentValues:ProjectUtil.formatFormValuesFromRowGridData(equipmentValues)};console.log(projectData);axios.post(config.API_URL+ENUMS.API_ROUTES.PROJECT_CREATE,projectData).then(function(res){console.log(res);if(res.status===200&&res.data.success){// saveUserState(res.data);\n}}).catch(function(e){console.log(e);});dispatch(allActions.authActions.setUserProject(projectData));history.push('/admin/dashboard');};var steps=[{title:'Job Info',content:/*#__PURE__*/_jsx(JobInfo,{next:next,setJobInfoFormValue:setJobInfoValues,setPadInfoFormValue:setPadInfoValues,jobInfoFormValues:jobInfoValues,padInfoFormValues:padInfoValues})},{title:'Well Info',content:/*#__PURE__*/_jsx(WellInfo,{next:next,setFormValue:setWellInfoValues,formValues:wellInfoValues})},{title:'Well Volume',content:/*#__PURE__*/_jsx(WellVolume,{next:next,setWellVolumeFormValue:setWellVolumeValues,setWellVolumeEstimationsFormValue:setWellVolumeEstimationsValues,wellInfoValues:wellInfoValues,wellVolumeFormValues:wellVolumeValues,wellVolumeEstimationsFormValues:wellVolumeEstimationsValues})},{title:'Client Info',content:/*#__PURE__*/_jsx(ClientInfo,{next:next,setFormValue:setClientInfoValues,formValues:clientInfoValues})},{title:'Crew Info',content:/*#__PURE__*/_jsx(CrewInfo,{next:next,setFormValue:setCrewInfoValues,formValues:crewInfoValues})},{title:'Equipment',content:/*#__PURE__*/_jsx(Equipment,{next:next,setFormValue:setEquipmentValues,formValues:equipmentValues,createProjectSubmit:handleCreateProjectFormSubmit})}];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{style:{minHeight:\"80vh\"},className:\"flex justify-center items-center bg-white\",children:/*#__PURE__*/_jsxs(\"div\",{style:{width:\"1100px\"},children:[/*#__PURE__*/_jsx(PageHeader,{ghost:false,onBack:function onBack(){return window.history.back();},title:\"Fill in the information below to create a new project\"}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Steps,{progressDot:true,current:current,children:steps.map(function(item){return/*#__PURE__*/_jsx(Step,{title:item.title,className:\"mb-6\"},item.title);})}),/*#__PURE__*/_jsx(\"div\",{className:\"steps-content mb-6\",children:steps[current].content}),/*#__PURE__*/_jsx(\"div\",{className:\"steps-action flex justify-between\",style:{position:'absolute',bottom:'48px'},children:/*#__PURE__*/_jsx(Button,{style:{margin:'0 8px'},disabled:current<1,onClick:function onClick(){return prev();},children:\"Previous\"})})]})]})})});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/NewProject.js"],"names":["axios","config","ENUMS","React","useState","useDispatch","useHistory","ProjectUtil","allActions","Card","PageHeader","Button","Steps","JobInfo","WellInfo","WellVolume","ClientInfo","CrewInfo","Equipment","Step","NewProject","history","dispatch","current","setCurrent","jobInfoValues","setJobInfoValues","padInfoValues","setPadInfoValues","wellInfoValues","setWellInfoValues","wellVolumeValues","setWellVolumeValues","wellVolumeEstimationsValues","setWellVolumeEstimationsValues","clientInfoValues","setClientInfoValues","crewInfoValues","setCrewInfoValues","equipmentValues","setEquipmentValues","next","prev","handleCreateProjectFormSubmit","wellVolumeData","map","wellVol","formatFormValuesFromColumnGridData","wellVolumeEstimationsData","wellVolEst","formatFormValuesFromRowGridData","projectData","x","index","id","console","log","post","API_URL","API_ROUTES","PROJECT_CREATE","then","res","status","data","success","catch","e","authActions","setUserProject","push","steps","title","content","minHeight","width","window","back","item","position","bottom","margin"],"mappings":"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","sourcesContent":["import axios from \"axiosConfig\";\nimport config from \"config\";\nimport ENUMS from \"constants/appEnums\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport ProjectUtil from \"util/ProjectUtil\";\nimport allActions from 'redux/actions/index';\nimport { Card, PageHeader, Button, Steps } from 'antd';\nimport JobInfo from \"components/Forms/ProjectCreate/JobInfo\";\nimport WellInfo from \"components/Forms/ProjectCreate/WellInfo\";\nimport WellVolume from \"components/Forms/ProjectCreate/WellVolume\";\nimport ClientInfo from \"components/Forms/ProjectCreate/ClientInfo\";\nimport CrewInfo from \"components/Forms/ProjectCreate/CrewInfo\";\nimport Equipment from \"components/Forms/ProjectCreate/Equipment\";\n\n// components\nconst { Step } = Steps;\n\nexport default function NewProject() {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [current, setCurrent] = useState(0);\n    const [jobInfoValues, setJobInfoValues] = useState(null);\n    const [padInfoValues, setPadInfoValues] = useState(null);\n    const [wellInfoValues, setWellInfoValues] = useState(null);\n    const [wellVolumeValues, setWellVolumeValues] = useState(null);\n    const [wellVolumeEstimationsValues, setWellVolumeEstimationsValues] = useState(null);\n    const [clientInfoValues, setClientInfoValues] = useState(null);\n    const [crewInfoValues, setCrewInfoValues] = useState(null);\n    const [equipmentValues, setEquipmentValues] = useState(null);\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const handleCreateProjectFormSubmit = () => {\n        const wellVolumeData = wellVolumeValues ? wellVolumeValues.map(wellVol => {\n            return ProjectUtil.formatFormValuesFromColumnGridData(wellVol);\n        }) : [];\n        const wellVolumeEstimationsData = wellVolumeEstimationsValues ? wellVolumeEstimationsValues.map(wellVolEst => {\n            return ProjectUtil.formatFormValuesFromRowGridData(wellVolEst);\n        }) : [];\n        \n        const projectData = {\n            jobInfoValues: ProjectUtil.formatFormValuesFromRowGridData(jobInfoValues),\n            padInfoValues: ProjectUtil.formatFormValuesFromRowGridData(padInfoValues),\n            wellInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(wellInfoValues).map((x, index) => {return {...x, id: index+1}}),\n            wellVolumeValues: wellVolumeData,\n            wellVolumeEstimationsValues: wellVolumeEstimationsData,\n            clientInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(clientInfoValues),\n            crewInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(crewInfoValues),\n            equipmentValues: ProjectUtil.formatFormValuesFromRowGridData(equipmentValues),\n        };\n        console.log(projectData)\n        axios.post(config.API_URL + ENUMS.API_ROUTES.PROJECT_CREATE,projectData)\n            .then(res => {\n                console.log(res);\n                if (res.status === 200 && res.data.success) {\n                    // saveUserState(res.data);\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            });\n\n        dispatch(allActions.authActions.setUserProject(projectData));\n        history.push('/admin/dashboard');\n    }\n\n    const steps = [\n        {\n            title: 'Job Info',\n            content: <JobInfo\n                next={next}\n                setJobInfoFormValue={setJobInfoValues}\n                setPadInfoFormValue={setPadInfoValues}\n                jobInfoFormValues={jobInfoValues} padInfoFormValues={padInfoValues}></JobInfo>\n        },\n        {\n            title: 'Well Info',\n            content: <WellInfo\n                next={next}\n                setFormValue={setWellInfoValues}\n                formValues={wellInfoValues}></WellInfo>\n        },\n        {\n            title: 'Well Volume',\n            content: <WellVolume\n                next={next}\n                setWellVolumeFormValue={setWellVolumeValues}\n                setWellVolumeEstimationsFormValue={setWellVolumeEstimationsValues}\n                wellInfoValues={wellInfoValues}\n                wellVolumeFormValues={wellVolumeValues} wellVolumeEstimationsFormValues={wellVolumeEstimationsValues}></WellVolume>\n        },\n        {\n            title: 'Client Info',\n            content: <ClientInfo\n                next={next}\n                setFormValue={setClientInfoValues}\n                formValues={clientInfoValues}></ClientInfo>\n        },\n        {\n            title: 'Crew Info',\n            content: <CrewInfo\n                next={next}\n                setFormValue={setCrewInfoValues}\n                formValues={crewInfoValues}></CrewInfo>\n        },\n        {\n            title: 'Equipment',\n            content: <Equipment\n                next={next}\n                setFormValue={setEquipmentValues}\n                formValues={equipmentValues}\n                createProjectSubmit={handleCreateProjectFormSubmit}></Equipment>\n        }\n    ];\n\n\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div style={{width: \"1100px\"}}>\n                    <PageHeader\n                        ghost={false}\n                        onBack={() => window.history.back()}\n                        title=\"Fill in the information below to create a new project\"\n                    >\n                    </PageHeader>\n                        <Card>\n                            <Steps progressDot current={current}>\n                                {\n                                    steps.map(item => (\n                                        <Step key={item.title} title={item.title} className=\"mb-6\"/>\n                                    ))\n                                }\n                            </Steps>\n                            <div className=\"steps-content mb-6\">\n                                {steps[current].content}\n                            </div>\n                            <div className=\"steps-action flex justify-between\" style={{position: 'absolute', bottom: '48px'}}>\n                                {\n                                    <Button style={{ margin: '0 8px' }} disabled={current < 1} onClick={() => prev()}>\n                                        Previous\n                                    </Button>\n                                }\n                            </div>\n                        </Card>\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}