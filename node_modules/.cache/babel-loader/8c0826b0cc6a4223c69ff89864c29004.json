{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/CrewInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CrewInfo(props) {\n  _s();\n\n  const [form] = Form.useForm();\n  const [crewInfoGrid, setCrewInfoGrid] = useState([]);\n\n  const getCrewInfoGridRow = t => {\n    return t.rows.map(label => {\n      return [{\n        value: label,\n        readOnly: true\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }];\n    });\n  };\n\n  const populateCrewInfoGrid = () => {\n    setCrewInfoGrid(TableHeadersUtil.crewInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n      return rows.concat(getCrewInfoGridRow(t));\n    }, []));\n  }; // const addNewCrew = (e) => {\n  //     e.preventDefault();\n  //     const newCrewInfoGrid = [\n  //         ...crewInfoGrid,\n  //         [\n  //             { value: \"Field engineer\", readOnly: true},\n  //             { value: \"\" },\n  //             { value: \"\" }\n  //         ]\n  //     ];\n  //     setCrewInfoGrid(newCrewInfoGrid);\n  // }\n\n\n  const handleCrewInfoGridChanged = updatedGridData => {\n    setCrewInfoGrid(updatedGridData);\n  };\n\n  const gotoNextStep = () => {\n    props.next();\n  };\n\n  useState(() => {\n    props.formValues && form.setFieldsValue(props.formValues);\n    populateCrewInfoGrid();\n  }, props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      style: {\n        width: '70%',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        columns: TableHeadersUtil.crewInfoFormTableData.columns,\n        grid: crewInfoGrid,\n        gridValueChanged: handleCrewInfoGridChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: e => {\n          props.next();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CrewInfo, \"NpJycMjnDNNv55H/JarNBa61V9c=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = CrewInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrewInfo\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/CrewInfo.js"],"names":["React","useState","Form","Button","TableHeadersUtil","Grid","CrewInfo","props","form","useForm","crewInfoGrid","setCrewInfoGrid","getCrewInfoGridRow","t","rows","map","label","value","readOnly","populateCrewInfoGrid","crewInfoFormTableData","grid","reduce","rowIdx","concat","handleCrewInfoGridChanged","updatedGridData","gotoNextStep","next","formValues","setFieldsValue","width","marginLeft","marginRight","columns","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAM,CAACC,IAAD,IAASN,IAAI,CAACO,OAAL,EAAf;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMW,kBAAkB,GAAIC,CAAD,IAAO;AAC9B,WAAOA,CAAC,CAACC,IAAF,CAAOC,GAAP,CAAWC,KAAK,IAAI;AACvB,aAAO,CACH;AAAEC,QAAAA,KAAK,EAAED,KAAT;AAAgBE,QAAAA,QAAQ,EAAE;AAA1B,OADG,EAEH;AAAED,QAAAA,KAAK,EAAE;AAAT,OAFG,EAGH;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAHG,CAAP;AAKH,KANM,CAAP;AAOH,GARD;;AAUA,QAAME,oBAAoB,GAAG,MAAM;AAC/BR,IAAAA,eAAe,CAACP,gBAAgB,CAACgB,qBAAjB,CAAuCC,IAAvC,CAA4CC,MAA5C,CAAmD,CAACR,IAAD,EAAOD,CAAP,EAAUU,MAAV,KAAqB;AACpF,aAAOT,IAAI,CAACU,MAAL,CAAYZ,kBAAkB,CAACC,CAAD,CAA9B,CAAP;AACH,KAFe,EAEb,EAFa,CAAD,CAAf;AAGH,GAJD,CAfoC,CAqBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMY,yBAAyB,GAAIC,eAAD,IAAqB;AACnDf,IAAAA,eAAe,CAACe,eAAD,CAAf;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACvBpB,IAAAA,KAAK,CAACqB,IAAN;AACH,GAFD;;AAIA3B,EAAAA,QAAQ,CAAC,MAAM;AACXM,IAAAA,KAAK,CAACsB,UAAN,IAAoBrB,IAAI,CAACsB,cAAL,CAAoBvB,KAAK,CAACsB,UAA1B,CAApB;AACAV,IAAAA,oBAAoB;AACvB,GAHO,EAGLZ,KAHK,CAAR;AAKA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACwB,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,UAAU,EAAE,MAA3B;AAAmCC,QAAAA,WAAW,EAAE;AAAhD,OAA7B;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,OAAO,EAAE7B,gBAAgB,CAACgB,qBAAjB,CAAuCc,OADpD;AAEI,QAAA,IAAI,EAAExB,YAFV;AAGI,QAAA,gBAAgB,EAAEe;AAHtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC5B,UAAAA,KAAK,CAACqB,IAAN;AAAa,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAiBH;;GAhEuBtB,Q;UACLJ,IAAI,CAACO,O;;;KADAH,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\n\nexport default function CrewInfo(props) {\n    const [form] = Form.useForm();\n    \n    const [crewInfoGrid, setCrewInfoGrid] = useState([]);\n\n    const getCrewInfoGridRow = (t) => {\n        return t.rows.map(label => {\n            return [\n                { value: label, readOnly: true},\n                { value: \"\" },\n                { value: \"\" },\n            ]\n        })\n    }\n\n    const populateCrewInfoGrid = () => {\n        setCrewInfoGrid(TableHeadersUtil.crewInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            return rows.concat(getCrewInfoGridRow(t));\n        }, []));\n    }\n\n    // const addNewCrew = (e) => {\n    //     e.preventDefault();\n    //     const newCrewInfoGrid = [\n    //         ...crewInfoGrid,\n    //         [\n    //             { value: \"Field engineer\", readOnly: true},\n    //             { value: \"\" },\n    //             { value: \"\" }\n    //         ]\n    //     ];\n    //     setCrewInfoGrid(newCrewInfoGrid);\n    // }\n\n    const handleCrewInfoGridChanged = (updatedGridData) => {\n        setCrewInfoGrid(updatedGridData)\n    }\n\n    const gotoNextStep = () => {\n        props.next();\n    }\n\n    useState(() => {\n        props.formValues && form.setFieldsValue(props.formValues)\n        populateCrewInfoGrid();\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\" style={{width: '70%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Grid \n                    columns={TableHeadersUtil.crewInfoFormTableData.columns}\n                    grid={crewInfoGrid}\n                    gridValueChanged={handleCrewInfoGridChanged}\n                ></Grid>\n                {/* <div className=\"text-lightBlue-600 mt-2 cursor-pointer inline-block\" onClick={(e) => addNewCrew(e)}>+ Add a new client</div> */}\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {props.next()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}