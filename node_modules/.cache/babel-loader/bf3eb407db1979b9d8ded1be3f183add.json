{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/ExistingProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport { Card, Table, PageHeader, Button } from 'antd';\nimport FAKE_DATA from \"constants/fakeData\";\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index';\nimport ENUMS from \"constants/appEnums\";\nimport HttpUtil from \"util/HttpUtil\"; // components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ExistingProject() {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const columns = TableHeadersUtil.projectTable;\n  const [data, setData] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      const p = data.filter(x => x.key === selectedRowKeys);\n      setSelectedProject(p);\n    },\n    getCheckboxProps: record => ({\n      disabled: record.name === 'Disabled User',\n      // Column configuration not to be checked\n      name: record.name\n    })\n  };\n\n  const handleTableChange = (pagination, filters, sorter) => {\n    console.log('here'); // this.fetch({\n    //   sortField: sorter.field,\n    //   sortOrder: sorter.order,\n    //   pagination,\n    //   ...filters,\n    // });\n  };\n\n  const [pagination, setPagination] = useState({});\n\n  const openProject = e => {\n    e.preventDefault();\n    const projectId = selectedProject;\n    console.log(projectId); // history.push({\n    //     pathname: '/admin/dashboard',\n    //     search: '?projectId=' + projectId,\n    //     state: { projectId: projectId }\n    // });\n    // dispatch(allActions.authActions.setUserProject(FAKE_DATA.projectData));\n    // history.push({\n    //     pathname: '/admin/dashboard',\n    //     search: '?projectId=' + projectId,\n    //     state: { passedId: projectId }\n    // });\n  };\n\n  const fetchProjects = () => {\n    axios.get(config.API_URL + ENUMS.API_ROUTES.PROJECT_LIST, { ...HttpUtil.adminHttpHeaders()\n    }).then(res => {\n      if (res.status === 200 && res.data) {\n        setData(res.data.projects.map((project, index) => {\n          return {\n            key: index,\n            job_number: project.job_id,\n            id: project.id,\n            job_name: project.job_name,\n            project_name: project.created_by,\n            created_by: project.created_by,\n            created_at_date: project.created_date,\n            created_time: project.created_time\n          };\n        }));\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    fetchProjects();\n    setPagination({\n      current: 1,\n      pageSize: 5,\n      total: 10\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"80vh\"\n      },\n      className: \"flex justify-center items-center bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '1100px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          ghost: false,\n          onBack: () => window.history.back(),\n          title: \"Select a project to continue\",\n          extra: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            disabled: selectedProject ? false : true,\n            onClick: e => openProject(e),\n            children: \"Next\"\n          }, \"1\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            rowSelection: {\n              type: 'radio',\n              ...rowSelection\n            },\n            pagination: pagination,\n            columns: columns,\n            dataSource: data,\n            onChange: handleTableChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ExistingProject, \"ylmySv6wfURre7PXL/uI0xmwPxk=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = ExistingProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExistingProject\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/ExistingProject.js"],"names":["React","useEffect","useState","config","axios","Card","Table","PageHeader","Button","FAKE_DATA","TableHeadersUtil","useHistory","useDispatch","allActions","ENUMS","HttpUtil","ExistingProject","history","dispatch","columns","projectTable","data","setData","selectedProject","setSelectedProject","rowSelection","onChange","selectedRowKeys","selectedRows","p","filter","x","key","getCheckboxProps","record","disabled","name","handleTableChange","pagination","filters","sorter","console","log","setPagination","openProject","e","preventDefault","projectId","fetchProjects","get","API_URL","API_ROUTES","PROJECT_LIST","adminHttpHeaders","then","res","status","projects","map","project","index","job_number","job_id","id","job_name","project_name","created_by","created_at_date","created_date","created_time","catch","current","pageSize","total","minHeight","width","window","back","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport { Card, Table, PageHeader, Button} from 'antd';\nimport FAKE_DATA from \"constants/fakeData\";\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index';\nimport ENUMS from \"constants/appEnums\";\nimport HttpUtil from \"util/HttpUtil\";\n// components\nexport default function ExistingProject() {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const columns = TableHeadersUtil.projectTable;\n    const [data, setData] = useState([]);\n\n    const [selectedProject, setSelectedProject] = useState(null);\n\n    const rowSelection = {\n        onChange: (selectedRowKeys, selectedRows) => {\n            const p = data.filter(x => x.key === selectedRowKeys);\n            setSelectedProject(p);\n        },\n        getCheckboxProps: (record) => ({\n          disabled: record.name === 'Disabled User',\n          // Column configuration not to be checked\n          name: record.name,\n        }),\n    };\n\n    const handleTableChange = (pagination, filters, sorter) => {\n        console.log('here')\n        // this.fetch({\n        //   sortField: sorter.field,\n        //   sortOrder: sorter.order,\n        //   pagination,\n        //   ...filters,\n        // });\n    };\n    \n    const [pagination, setPagination] = useState({});\n\n    const openProject = (e) => {\n        e.preventDefault();\n        const projectId = selectedProject;\n        console.log(projectId)\n        // history.push({\n        //     pathname: '/admin/dashboard',\n        //     search: '?projectId=' + projectId,\n        //     state: { projectId: projectId }\n        // });\n        // dispatch(allActions.authActions.setUserProject(FAKE_DATA.projectData));\n        // history.push({\n        //     pathname: '/admin/dashboard',\n        //     search: '?projectId=' + projectId,\n        //     state: { passedId: projectId }\n        // });\n    }\n\n    const fetchProjects = () => {\n        axios.get(config.API_URL + ENUMS.API_ROUTES.PROJECT_LIST,\n            {\n                ...HttpUtil.adminHttpHeaders()\n            })\n            .then(res => {\n                if (res.status === 200 && res.data) {\n                    setData(res.data.projects.map((project, index) => {\n                        return {\n                            key: index,\n                            job_number: project.job_id,\n                            id: project.id,\n                            job_name: project.job_name,\n                            project_name: project.created_by,\n                            created_by: project.created_by,\n                            created_at_date: project.created_date,\n                            created_time: project.created_time,\n                        }\n                    }))\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            })\n    }\n\n    useEffect(() => {\n        fetchProjects();\n        setPagination({\n            current: 1,\n            pageSize: 5,\n            total: 10,\n        })\n    }, [])\n\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div style={{width: '1100px'}}>\n                <PageHeader\n                    ghost={false}\n                    onBack={() => window.history.back()}\n                    title=\"Select a project to continue\"\n                    extra={[\n                        <Button\n                            key=\"1\"\n                            type=\"primary\"\n                            disabled={selectedProject ? false : true}\n                            onClick={e => openProject(e)}\n                        >\n                            Next\n                        </Button>,\n                    ]}\n                    >\n                </PageHeader>\n                    <Card>\n                        <Table\n                            rowSelection={{\n                                type: 'radio',\n                                ...rowSelection,\n                            }}\n                            pagination={pagination}\n                            columns={columns}\n                            dataSource={data}\n                            onChange={handleTableChange}\n                        />\n                    </Card>\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}