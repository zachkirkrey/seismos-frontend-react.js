{"ast":null,"code":"import _objectSpread from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Card,Table,PageHeader,Button}from'antd';import FAKE_DATA from\"constants/fakeData\";import TableHeadersUtil from\"util/TableHeaderUtil\";import{useHistory}from\"react-router\";// components\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function ExistingProject(){var history=useHistory();var columns=TableHeadersUtil.projectTable;var data=FAKE_DATA.LIST_OF_PROJECTS;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedRow=_useState2[0],setSelectedRow=_useState2[1];var rowSelection={onChange:function onChange(selectedRowKeys,selectedRows){setSelectedRow(data.filter(function(x){return x.key===selectedRowKeys;}));},getCheckboxProps:function getCheckboxProps(record){return{disabled:record.name==='Disabled User',// Column configuration not to be checked\nname:record.name};}};var handleTableChange=function handleTableChange(pagination,filters,sorter){// this.fetch({\n//   sortField: sorter.field,\n//   sortOrder: sorter.order,\n//   pagination,\n//   ...filters,\n// });\n};var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),pagination=_useState4[0],setPagination=_useState4[1];var openProject=function openProject(e){e.preventDefault();history.push('/admin/dashboard');};useEffect(function(){setPagination({current:1,pageSize:5,total:10});},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{style:{minHeight:\"80vh\"},className:\"flex justify-center items-center bg-white\",children:/*#__PURE__*/_jsxs(\"div\",{style:{width:'1100px'},children:[/*#__PURE__*/_jsx(PageHeader,{ghost:false,onBack:function onBack(){return window.history.back();},title:\"Select a project to continue\",extra:[/*#__PURE__*/_jsx(Button,{type:\"primary\",disabled:selectedRow?false:true,onClick:function onClick(e){return openProject(e);},children:\"Next\"},\"1\")]}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Table,{rowSelection:_objectSpread({type:'radio'},rowSelection),pagination:pagination,columns:columns,dataSource:data,onChange:handleTableChange})})]})})});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/ExistingProject.js"],"names":["React","useEffect","useState","Card","Table","PageHeader","Button","FAKE_DATA","TableHeadersUtil","useHistory","ExistingProject","history","columns","projectTable","data","LIST_OF_PROJECTS","selectedRow","setSelectedRow","rowSelection","onChange","selectedRowKeys","selectedRows","filter","x","key","getCheckboxProps","record","disabled","name","handleTableChange","pagination","filters","sorter","setPagination","openProject","e","preventDefault","push","current","pageSize","total","minHeight","width","window","back","type"],"mappings":"uXAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,MAAlC,KAA+C,MAA/C,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,sBAA7B,CACA,OAASC,UAAT,KAA2B,cAA3B,CAEA;6IACA,cAAe,SAASC,CAAAA,eAAT,EAA2B,CACtC,GAAMC,CAAAA,OAAO,CAAGF,UAAU,EAA1B,CACA,GAAMG,CAAAA,OAAO,CAAGJ,gBAAgB,CAACK,YAAjC,CACA,GAAMC,CAAAA,IAAI,CAAGP,SAAS,CAACQ,gBAAvB,CAEA,cAAsCb,QAAQ,CAAC,IAAD,CAA9C,wCAAOc,WAAP,eAAoBC,cAApB,eAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,QAAQ,CAAE,kBAACC,eAAD,CAAkBC,YAAlB,CAAmC,CAC3CJ,cAAc,CAACH,IAAI,CAACQ,MAAL,CAAY,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,GAAF,GAAUJ,eAAd,EAAb,CAAD,CAAd,CACD,CAHgB,CAIjBK,gBAAgB,CAAE,0BAACC,MAAD,QAAa,CAC7BC,QAAQ,CAAED,MAAM,CAACE,IAAP,GAAgB,eADG,CAE7B;AACAA,IAAI,CAAEF,MAAM,CAACE,IAHgB,CAAb,EAJD,CAArB,CAWA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,UAAD,CAAaC,OAAb,CAAsBC,MAAtB,CAAiC,CACvD;AACA;AACA;AACA;AACA;AACA;AACH,CAPD,CASA,eAAoC9B,QAAQ,CAAC,EAAD,CAA5C,yCAAO4B,UAAP,eAAmBG,aAAnB,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CACvBA,CAAC,CAACC,cAAF,GACAzB,OAAO,CAAC0B,IAAR,CAAa,kBAAb,EACH,CAHD,CAKApC,SAAS,CAAC,UAAM,CACZgC,aAAa,CAAC,CACVK,OAAO,CAAE,CADC,CAEVC,QAAQ,CAAE,CAFA,CAGVC,KAAK,CAAE,EAHG,CAAD,CAAb,CAKH,CANQ,CAMN,EANM,CAAT,CAQA,mBACI,sCACI,YAAK,KAAK,CAAE,CAACC,SAAS,CAAE,MAAZ,CAAZ,CAAiC,SAAS,CAAC,2CAA3C,uBACI,aAAK,KAAK,CAAE,CAACC,KAAK,CAAE,QAAR,CAAZ,wBACA,KAAC,UAAD,EACI,KAAK,CAAE,KADX,CAEI,MAAM,CAAE,wBAAMC,CAAAA,MAAM,CAAChC,OAAP,CAAeiC,IAAf,EAAN,EAFZ,CAGI,KAAK,CAAC,8BAHV,CAII,KAAK,CAAE,cACH,KAAC,MAAD,EAEI,IAAI,CAAC,SAFT,CAGI,QAAQ,CAAE5B,WAAW,CAAG,KAAH,CAAW,IAHpC,CAII,OAAO,CAAE,iBAAAmB,CAAC,QAAID,CAAAA,WAAW,CAACC,CAAD,CAAf,EAJd,kBACQ,GADR,CADG,CAJX,EADA,cAiBI,KAAC,IAAD,wBACI,KAAC,KAAD,EACI,YAAY,gBACRU,IAAI,CAAE,OADE,EAEL3B,YAFK,CADhB,CAKI,UAAU,CAAEY,UALhB,CAMI,OAAO,CAAElB,OANb,CAOI,UAAU,CAAEE,IAPhB,CAQI,QAAQ,CAAEe,iBARd,EADJ,EAjBJ,GADJ,EADJ,EADJ,CAoCH","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Table, PageHeader, Button} from 'antd';\nimport FAKE_DATA from \"constants/fakeData\";\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport { useHistory } from \"react-router\";\n\n// components\nexport default function ExistingProject() {\n    const history = useHistory();\n    const columns = TableHeadersUtil.projectTable;\n    const data = FAKE_DATA.LIST_OF_PROJECTS;\n\n    const [selectedRow, setSelectedRow] = useState(null);\n\n    const rowSelection = {\n        onChange: (selectedRowKeys, selectedRows) => {\n          setSelectedRow(data.filter(x => x.key === selectedRowKeys));\n        },\n        getCheckboxProps: (record) => ({\n          disabled: record.name === 'Disabled User',\n          // Column configuration not to be checked\n          name: record.name,\n        }),\n    };\n\n    const handleTableChange = (pagination, filters, sorter) => {\n        // this.fetch({\n        //   sortField: sorter.field,\n        //   sortOrder: sorter.order,\n        //   pagination,\n        //   ...filters,\n        // });\n    };\n    \n    const [pagination, setPagination] = useState({});\n\n    const openProject = (e) => {\n        e.preventDefault();\n        history.push('/admin/dashboard');\n    }\n\n    useEffect(() => {\n        setPagination({\n            current: 1,\n            pageSize: 5,\n            total: 10,\n        })\n    }, [])\n\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div style={{width: '1100px'}}>\n                <PageHeader\n                    ghost={false}\n                    onBack={() => window.history.back()}\n                    title=\"Select a project to continue\"\n                    extra={[\n                        <Button\n                            key=\"1\"\n                            type=\"primary\"\n                            disabled={selectedRow ? false : true}\n                            onClick={e => openProject(e)}\n                        >\n                            Next\n                        </Button>,\n                    ]}\n                    >\n                </PageHeader>\n                    <Card>\n                        <Table\n                            rowSelection={{\n                                type: 'radio',\n                                ...rowSelection,\n                            }}\n                            pagination={pagination}\n                            columns={columns}\n                            dataSource={data}\n                            onChange={handleTableChange}\n                        />\n                    </Card>\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}