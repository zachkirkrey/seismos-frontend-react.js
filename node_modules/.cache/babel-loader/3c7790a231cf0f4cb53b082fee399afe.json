{"ast":null,"code":"import moment from \"moment\";\n\nconst defultValueFormSubmitSerializer = formData => {\n  return {\n    \"default_advance_val\": {\n      \"algorithm\": formData.algorithm,\n      \"compresssibility\": formData.compressibility,\n      \"data_sample_rate\": formData.data_sample_rate,\n      \"density\": formData.density,\n      \"f_high_hz\": formData.f_high_hz,\n      \"f_low_hz\": formData.f_low_hz,\n      \"grid_density\": formData.grid_density,\n      \"interation\": formData.iterations,\n      \"layer\": formData.layer,\n      \"loop\": formData.loop,\n      \"method\": formData.method,\n      \"model\": formData.model,\n      \"new_sample_rate\": formData.new_sample_rate,\n      \"response\": formData.response,\n      \"source\": formData.source,\n      \"tolerance\": formData.tolerence,\n      \"total_width\": formData.total_width,\n      \"viscosity\": formData.viscosity,\n      \"weighting\": formData.weighting,\n      \"wlevexp\": formData.wlevexp\n    },\n    \"default_param_val\": {\n      \"c1_max\": formData.c1_max,\n      \"c1_min\": formData.c1_min,\n      \"c2_max\": formData.c2_max,\n      \"c2_min\": formData.c2_min,\n      \"c3_max\": formData.c3_max,\n      \"c3_min\": formData.c3_min,\n      \"k_max\": formData.k_max,\n      \"k_min\": formData.k_min,\n      \"q_max\": formData.q_max,\n      \"q_min\": formData.q_min\n    },\n    \"default_value\": {\n      \"beta_ss\": formData.beta_ss,\n      \"biot\": formData.biot,\n      \"breaker\": formData.breaker,\n      \"diverter_time\": formData.diverter_time,\n      \"eta_cp\": formData.eta_cp,\n      \"ffkw_correction\": formData.ffkw_correction,\n      \"fit_end_point\": formData.fit_end_point,\n      \"fit_iterations\": formData.fit_iterations,\n      \"fuild_density\": formData.fluid_density,\n      \"fuildt\": formData.fluid_t,\n      \"k_mpa\": formData.k_mpa,\n      \"met_res\": formData.met_res,\n      \"ng\": formData.ng,\n      \"nu_lim\": formData.nu_lim,\n      \"overburden\": formData.overburden,\n      \"per_red\": formData.perRed,\n      \"plotraw\": formData.plotraw,\n      \"poisson\": formData.poisson,\n      \"poisson_method\": formData.poisson_method,\n      \"poisson_var\": formData.poisson_var,\n      \"pres\": formData.pres,\n      \"shadow\": formData.shadow,\n      \"skip_losses\": formData.skip_losses,\n      \"st_lim\": formData.st_lim,\n      \"stage_ques\": formData.stage_ques,\n      \"start1\": formData.start1,\n      \"start2\": formData.start2,\n      \"stress_shadow\": formData.stress_shadow,\n      \"tect\": formData.tect,\n      \"use_wncuts\": formData.use_wncuts,\n      \"use_wns\": formData.use_wns,\n      \"young\": formData.young\n    }\n  };\n};\n\nconst trackingSheetSubmitSerializer = (selectedStage, dynamicFormNestItemValues, perforationIntervalInformationValues, stageDataValues, propantFormValues, activeDataFormValues, notesDataFormValues) => {\n  return {\n    stage: Number(selectedStage),\n    stage_tracking: {\n      date: Number(dynamicFormNestItemValues.date.format('x')),\n      customer: dynamicFormNestItemValues.customer,\n      well: dynamicFormNestItemValues.well,\n      stage: dynamicFormNestItemValues.stage,\n      bht_f: dynamicFormNestItemValues.bht_f,\n      bht_psi: dynamicFormNestItemValues.bht_psi,\n      frac_design: dynamicFormNestItemValues.frac_design,\n      field_engineer: {\n        days: dynamicFormNestItemValues.field_engineer_days,\n        nights: dynamicFormNestItemValues.field_engineer_nights\n      },\n      plug_type: dynamicFormNestItemValues.plug_type,\n      plug_seat_technique: dynamicFormNestItemValues.plug_seat_technique,\n      did_an_event_occur: dynamicFormNestItemValues.event_occur,\n      seismos_data_collection: dynamicFormNestItemValues.seismos_data_collection\n    },\n    perforation_interval_information: {\n      top_perf: perforationIntervalInformationValues.top_perf,\n      bottom_perf: perforationIntervalInformationValues.bottom_perf,\n      plug_depth: perforationIntervalInformationValues.plug_depth,\n      n_clusters: Number(perforationIntervalInformationValues.clusters_number),\n      perf_gun_description: perforationIntervalInformationValues.perf_gun_desc,\n      perf_daiameter: perforationIntervalInformationValues.perf_daiameter,\n      spf: perforationIntervalInformationValues.spf,\n      pumped_diverter: perforationIntervalInformationValues.pumped_diverter,\n      diverter_type: perforationIntervalInformationValues.diverter_type,\n      acid: perforationIntervalInformationValues.acid,\n      displacement_volume: {\n        top_perf: perforationIntervalInformationValues.displacement_vol_top,\n        bottom_perf: perforationIntervalInformationValues.displacement_vol_bottom,\n        plug: perforationIntervalInformationValues.displacement_vol_plug\n      }\n    },\n    stage_data: {\n      stage_start_time: Number(stageDataValues.stage_end_time.format('x')),\n      stage_end_time: Number(stageDataValues.stage_end_time.format('x')),\n      opening_well: stageDataValues.opening_well,\n      isip: stageDataValues.isip,\n      fluid_parameters: {\n        base_fluid_type: stageDataValues.base_fluid_type,\n        base_fluid_density: stageDataValues.base_fluid_density,\n        max_conc_density: stageDataValues.max_conc_density\n      },\n      fluid_data: fluidFormValues.fluidData,\n      propant_data: propantFormValues.proppantData,\n      pumping_summary: {\n        max_prop_conc: {\n          design: stageDataValues.max_prop_conc_ppa_design,\n          actual: stageDataValues.max_prop_conc_ppa_actual\n        },\n        total_pad_volume: {\n          design: stageDataValues.total_pad_volume_bbls_design,\n          actual: stageDataValues.total_pad_volume_bbls_actual\n        },\n        total_clean_fluid_volume: {\n          design: stageDataValues.total_clean_fluid_volume_bbls_design,\n          actual: stageDataValues.total_clean_fluid_volume_bbls_actual\n        },\n        total_proppant: {\n          design: stageDataValues.total_proppant_lbs_design,\n          actual: stageDataValues.total_proppant_lbs_actual\n        },\n        acid_volume: {\n          design: stageDataValues.acid_volume_gals_design,\n          actual: stageDataValues.acid_volume_gals_actual\n        },\n        flush_volume: {\n          design: stageDataValues.flush_volume_bbls_design,\n          actual: stageDataValues.flush_volume_bbls_actual\n        },\n        slurry_volume: {\n          design: stageDataValues.slurry_volume_bbls_design,\n          actual: stageDataValues.slurry_volume_bbls_actual\n        }\n      }\n    },\n    active_data: {\n      pulsing_parameters: {\n        wave_type: activeDataFormValues.wave_type,\n        periods: activeDataFormValues.periods,\n        freq: activeDataFormValues.frequency,\n        offset: activeDataFormValues.offset,\n        amplitude: activeDataFormValues.amplitude\n      },\n      pre_frac_pulses: {\n        start_time: Number(activeDataFormValues.pre_start_time.format('x')),\n        end_time: Number(activeDataFormValues.pre_end_time.format('x')),\n        n_pulses: Number(activeDataFormValues.pre_number_of_pulses)\n      },\n      post_frac_pulses: {\n        start_time: Number(activeDataFormValues.post_start_time.format('x')),\n        end_time: Number(activeDataFormValues.post_end_time.format('x')),\n        n_pulses: Number(activeDataFormValues.post_number_of_pulses)\n      }\n    },\n    notes: {\n      pre_frac_pulse: notesDataFormValues.pre_notes,\n      post_frac_pulse: notesDataFormValues.post_notes,\n      other: notesDataFormValues.other_notes\n    }\n  };\n};\n\nconst trackingSheetPopulateDataSerializer = trackingSheetData => {\n  const dynamicFormNestItemValuesData = {\n    bht_f: trackingSheetData.stage_tracking.bht_f,\n    bht_psi: trackingSheetData.stage_tracking.bht_psi,\n    customer: trackingSheetData.stage_tracking.customer,\n    date: moment(trackingSheetData.stage_tracking.date),\n    event_occur: trackingSheetData.stage_tracking.did_an_event_occur,\n    field_engineer_days: trackingSheetData.stage_tracking.field_engineer.days,\n    field_engineer_nights: trackingSheetData.stage_tracking.field_engineer.nights,\n    frac_design: trackingSheetData.stage_tracking.frac_design,\n    plug_seat_technique: trackingSheetData.stage_tracking.plug_seat_technique,\n    plug_type: trackingSheetData.stage_tracking.plug_type,\n    seismos_data_collection: trackingSheetData.stage_tracking.seismos_data_collection,\n    stage: trackingSheetData.stage_tracking.stage,\n    well: trackingSheetData.stage_tracking.well\n  };\n  const perforationIntervalInformationValuesData = {\n    acid: trackingSheetData.perforation_interval_information.acid,\n    bottom_perf: trackingSheetData.perforation_interval_information.bottom_perf,\n    clusters_number: trackingSheetData.perforation_interval_information.n_clusters,\n    displacement_vol_bottom: trackingSheetData.perforation_interval_information.displacement_volume.bottom_perf,\n    displacement_vol_plug: trackingSheetData.perforation_interval_information.displacement_volume.plug,\n    displacement_vol_top: trackingSheetData.perforation_interval_information.displacement_volume.top_perf,\n    diverter_type: trackingSheetData.perforation_interval_information.diverter_type,\n    perf_daiameter: trackingSheetData.perforation_interval_information.perf_daiameter,\n    perf_gun_desc: trackingSheetData.perforation_interval_information.perf_gun_description,\n    plug_depth: trackingSheetData.perforation_interval_information.plug_depth,\n    pumped_diverter: trackingSheetData.perforation_interval_information.pumped_diverter,\n    spf: trackingSheetData.perforation_interval_information.spf,\n    top_perf: trackingSheetData.perforation_interval_information.top_perf\n  };\n  const stageDataValuesData = {\n    stage_start_time: moment(trackingSheetData.stage_data.stage_start_time),\n    stage_end_time: moment(trackingSheetData.stage_data.stage_end_time),\n    opening_well: trackingSheetData.stage_data.opening_well,\n    isip: trackingSheetData.stage_data.isip,\n    base_fluid_type: trackingSheetData.stage_data.fluid_parameters.base_fluid_type,\n    base_fluid_density: trackingSheetData.stage_data.fluid_parameters.base_fluid_density,\n    max_conc_density: trackingSheetData.stage_data.fluid_parameters.max_conc_density,\n    max_prop_conc_ppa_design: trackingSheetData.stage_data.pumping_summary.max_prop_conc.design,\n    max_prop_conc_ppa_actual: trackingSheetData.stage_data.pumping_summary.max_prop_conc.actual,\n    total_pad_volume_bbls_design: trackingSheetData.stage_data.pumping_summary.total_pad_volume.design,\n    total_pad_volume_bbls_actual: trackingSheetData.stage_data.pumping_summary.total_pad_volume.actual,\n    total_clean_fluid_volume_bbls_design: trackingSheetData.stage_data.pumping_summary.total_clean_fluid_volume.design,\n    total_clean_fluid_volume_bbls_actual: trackingSheetData.stage_data.pumping_summary.total_clean_fluid_volume.actual,\n    total_proppant_lbs_design: trackingSheetData.stage_data.pumping_summary.total_proppant.design,\n    total_proppant_lbs_actual: trackingSheetData.stage_data.pumping_summary.total_proppant.actual,\n    acid_volume_gals_design: trackingSheetData.stage_data.pumping_summary.acid_volume.design,\n    acid_volume_gals_actual: trackingSheetData.stage_data.pumping_summary.acid_volume.actual,\n    flush_volume_bbls_design: trackingSheetData.stage_data.pumping_summary.flush_volume.design,\n    flush_volume_bbls_actual: trackingSheetData.stage_data.pumping_summary.flush_volume.actual,\n    slurry_volume_bbls_design: trackingSheetData.stage_data.pumping_summary.slurry_volume.design,\n    slurry_volume_bbls_actual: trackingSheetData.stage_data.pumping_summary.slurry_volume.actual\n  };\n  const propantFormValuesData = {\n    proppantData: trackingSheetData.stage_data.propant_data\n  };\n  const activeDataFormValuesData = {\n    wave_type: trackingSheetData.active_data.pulsing_parameters.wave_type,\n    periods: trackingSheetData.active_data.pulsing_parameters.periods,\n    frequency: trackingSheetData.active_data.pulsing_parameters.freq,\n    offset: trackingSheetData.active_data.pulsing_parameters.offset,\n    amplitude: trackingSheetData.active_data.pulsing_parameters.amplitude,\n    pre_start_time: moment(trackingSheetData.active_data.pre_frac_pulses.start_time),\n    pre_end_time: moment(trackingSheetData.active_data.pre_frac_pulses.end_time),\n    pre_number_of_pulses: trackingSheetData.active_data.pre_number_of_pulses,\n    post_start_time: moment(trackingSheetData.active_data.post_frac_pulses.start_time),\n    post_end_time: moment(trackingSheetData.active_data.post_frac_pulses.end_time),\n    post_number_of_pulses: trackingSheetData.active_data.post_number_of_pulses\n  };\n  const notesDataFormValuesData = {\n    pre_notes: trackingSheetData.notes.pre_frac_pulse,\n    post_notes: trackingSheetData.notes.post_frac_pulse,\n    other_notes: trackingSheetData.notes.other\n  };\n  return {\n    dynamicFormNestItemValuesData,\n    perforationIntervalInformationValuesData,\n    stageDataValuesData,\n    propantFormValuesData,\n    activeDataFormValuesData,\n    notesDataFormValuesData\n  };\n};\n\nconst FormDataSerializer = {\n  defultValueFormSubmitSerializer,\n  trackingSheetSubmitSerializer,\n  trackingSheetPopulateDataSerializer\n};\nexport default FormDataSerializer;","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/util/FormDataSerializer.js"],"names":["moment","defultValueFormSubmitSerializer","formData","algorithm","compressibility","data_sample_rate","density","f_high_hz","f_low_hz","grid_density","iterations","layer","loop","method","model","new_sample_rate","response","source","tolerence","total_width","viscosity","weighting","wlevexp","c1_max","c1_min","c2_max","c2_min","c3_max","c3_min","k_max","k_min","q_max","q_min","beta_ss","biot","breaker","diverter_time","eta_cp","ffkw_correction","fit_end_point","fit_iterations","fluid_density","fluid_t","k_mpa","met_res","ng","nu_lim","overburden","perRed","plotraw","poisson","poisson_method","poisson_var","pres","shadow","skip_losses","st_lim","stage_ques","start1","start2","stress_shadow","tect","use_wncuts","use_wns","young","trackingSheetSubmitSerializer","selectedStage","dynamicFormNestItemValues","perforationIntervalInformationValues","stageDataValues","propantFormValues","activeDataFormValues","notesDataFormValues","stage","Number","stage_tracking","date","format","customer","well","bht_f","bht_psi","frac_design","field_engineer","days","field_engineer_days","nights","field_engineer_nights","plug_type","plug_seat_technique","did_an_event_occur","event_occur","seismos_data_collection","perforation_interval_information","top_perf","bottom_perf","plug_depth","n_clusters","clusters_number","perf_gun_description","perf_gun_desc","perf_daiameter","spf","pumped_diverter","diverter_type","acid","displacement_volume","displacement_vol_top","displacement_vol_bottom","plug","displacement_vol_plug","stage_data","stage_start_time","stage_end_time","opening_well","isip","fluid_parameters","base_fluid_type","base_fluid_density","max_conc_density","fluid_data","fluidFormValues","fluidData","propant_data","proppantData","pumping_summary","max_prop_conc","design","max_prop_conc_ppa_design","actual","max_prop_conc_ppa_actual","total_pad_volume","total_pad_volume_bbls_design","total_pad_volume_bbls_actual","total_clean_fluid_volume","total_clean_fluid_volume_bbls_design","total_clean_fluid_volume_bbls_actual","total_proppant","total_proppant_lbs_design","total_proppant_lbs_actual","acid_volume","acid_volume_gals_design","acid_volume_gals_actual","flush_volume","flush_volume_bbls_design","flush_volume_bbls_actual","slurry_volume","slurry_volume_bbls_design","slurry_volume_bbls_actual","active_data","pulsing_parameters","wave_type","periods","freq","frequency","offset","amplitude","pre_frac_pulses","start_time","pre_start_time","end_time","pre_end_time","n_pulses","pre_number_of_pulses","post_frac_pulses","post_start_time","post_end_time","post_number_of_pulses","notes","pre_frac_pulse","pre_notes","post_frac_pulse","post_notes","other","other_notes","trackingSheetPopulateDataSerializer","trackingSheetData","dynamicFormNestItemValuesData","perforationIntervalInformationValuesData","stageDataValuesData","propantFormValuesData","activeDataFormValuesData","notesDataFormValuesData","FormDataSerializer"],"mappings":"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","sourcesContent":["import moment from \"moment\";\n\nconst defultValueFormSubmitSerializer = (formData) => {\n    return {\n        \"default_advance_val\": {\n        \"algorithm\": formData.algorithm,\n        \"compresssibility\": formData.compressibility,\n        \"data_sample_rate\": formData.data_sample_rate,\n        \"density\": formData.density,\n        \"f_high_hz\": formData.f_high_hz,\n        \"f_low_hz\": formData.f_low_hz,\n        \"grid_density\": formData.grid_density,\n        \"interation\": formData.iterations,\n        \"layer\": formData.layer,\n        \"loop\": formData.loop,\n        \"method\": formData.method,\n        \"model\": formData.model,\n        \"new_sample_rate\": formData.new_sample_rate,\n        \"response\": formData.response,\n        \"source\": formData.source,\n        \"tolerance\": formData.tolerence,\n        \"total_width\": formData.total_width,\n        \"viscosity\": formData.viscosity,\n        \"weighting\": formData.weighting,\n        \"wlevexp\": formData.wlevexp,\n        },\n        \"default_param_val\": {\n        \"c1_max\": formData.c1_max,\n        \"c1_min\": formData.c1_min,\n        \"c2_max\": formData.c2_max,\n        \"c2_min\": formData.c2_min,\n        \"c3_max\": formData.c3_max,\n        \"c3_min\": formData.c3_min,\n        \"k_max\": formData.k_max,\n        \"k_min\": formData.k_min,\n        \"q_max\": formData.q_max,\n        \"q_min\": formData.q_min,\n        },\n        \"default_value\": {\n        \"beta_ss\": formData.beta_ss,\n        \"biot\": formData.biot,\n        \"breaker\": formData.breaker,\n        \"diverter_time\": formData.diverter_time,\n        \"eta_cp\": formData.eta_cp,\n        \"ffkw_correction\": formData.ffkw_correction,\n        \"fit_end_point\": formData.fit_end_point,\n        \"fit_iterations\": formData.fit_iterations,\n        \"fuild_density\": formData.fluid_density,\n        \"fuildt\": formData.fluid_t,\n        \"k_mpa\": formData.k_mpa,\n        \"met_res\": formData.met_res,\n        \"ng\": formData.ng,\n        \"nu_lim\": formData.nu_lim,\n        \"overburden\": formData.overburden,\n        \"per_red\": formData.perRed,\n        \"plotraw\": formData.plotraw,\n        \"poisson\": formData.poisson,\n        \"poisson_method\": formData.poisson_method,\n        \"poisson_var\": formData.poisson_var,\n        \"pres\": formData.pres,\n        \"shadow\": formData.shadow,\n        \"skip_losses\": formData.skip_losses,\n        \"st_lim\": formData.st_lim,\n        \"stage_ques\": formData.stage_ques,\n        \"start1\": formData.start1,\n        \"start2\": formData.start2,\n        \"stress_shadow\": formData.stress_shadow,\n        \"tect\": formData.tect,\n        \"use_wncuts\": formData.use_wncuts,\n        \"use_wns\": formData.use_wns,\n        \"young\": formData.young,\n        }\n    }\n}\n\nconst trackingSheetSubmitSerializer = (\n        selectedStage,\n        dynamicFormNestItemValues,\n        perforationIntervalInformationValues,\n        stageDataValues,\n        propantFormValues,\n        activeDataFormValues,\n        notesDataFormValues\n    ) => {\n    return {\n        stage: Number(selectedStage),\n        stage_tracking: {\n            date: Number(dynamicFormNestItemValues.date.format('x')),\n            customer: dynamicFormNestItemValues.customer,\n            well: dynamicFormNestItemValues.well,\n            stage: dynamicFormNestItemValues.stage,\n            bht_f: dynamicFormNestItemValues.bht_f,\n            bht_psi: dynamicFormNestItemValues.bht_psi,\n            frac_design: dynamicFormNestItemValues.frac_design,\n            field_engineer: {\n                days: dynamicFormNestItemValues.field_engineer_days,\n                nights: dynamicFormNestItemValues.field_engineer_nights,\n            },\n            plug_type: dynamicFormNestItemValues.plug_type,\n            plug_seat_technique: dynamicFormNestItemValues.plug_seat_technique,\n            did_an_event_occur: dynamicFormNestItemValues.event_occur,\n            seismos_data_collection: dynamicFormNestItemValues.seismos_data_collection,\n        },\n        perforation_interval_information: {\n            top_perf: perforationIntervalInformationValues.top_perf,\n            bottom_perf: perforationIntervalInformationValues.bottom_perf,\n            plug_depth: perforationIntervalInformationValues.plug_depth,\n            n_clusters: Number(perforationIntervalInformationValues.clusters_number),\n            perf_gun_description: perforationIntervalInformationValues.perf_gun_desc,\n            perf_daiameter: perforationIntervalInformationValues.perf_daiameter,\n            spf: perforationIntervalInformationValues.spf,\n            pumped_diverter: perforationIntervalInformationValues.pumped_diverter,\n            diverter_type: perforationIntervalInformationValues.diverter_type,\n            acid: perforationIntervalInformationValues.acid,\n            displacement_volume: {\n                top_perf: perforationIntervalInformationValues.displacement_vol_top,\n                bottom_perf: perforationIntervalInformationValues.displacement_vol_bottom,\n                plug: perforationIntervalInformationValues.displacement_vol_plug,\n            }\n        },\n        stage_data: {\n            stage_start_time: Number(stageDataValues.stage_end_time.format('x')),\n            stage_end_time: Number(stageDataValues.stage_end_time.format('x')),\n            opening_well: stageDataValues.opening_well,\n            isip: stageDataValues.isip,\n            fluid_parameters: {\n                base_fluid_type: stageDataValues.base_fluid_type,\n                base_fluid_density: stageDataValues.base_fluid_density,\n                max_conc_density: stageDataValues.max_conc_density,\n            },\n            fluid_data: fluidFormValues.fluidData,\n            propant_data: propantFormValues.proppantData,\n            pumping_summary: {\n                max_prop_conc: {design: stageDataValues.max_prop_conc_ppa_design, actual: stageDataValues.max_prop_conc_ppa_actual},\n                total_pad_volume: {design: stageDataValues.total_pad_volume_bbls_design, actual: stageDataValues.total_pad_volume_bbls_actual},\n                total_clean_fluid_volume: {design: stageDataValues.total_clean_fluid_volume_bbls_design, actual: stageDataValues.total_clean_fluid_volume_bbls_actual},\n                total_proppant: {design: stageDataValues.total_proppant_lbs_design, actual: stageDataValues.total_proppant_lbs_actual},\n                acid_volume: {design: stageDataValues.acid_volume_gals_design, actual: stageDataValues.acid_volume_gals_actual},\n                flush_volume: {design: stageDataValues.flush_volume_bbls_design, actual: stageDataValues.flush_volume_bbls_actual},\n                slurry_volume: {design: stageDataValues.slurry_volume_bbls_design, actual: stageDataValues.slurry_volume_bbls_actual},\n            }\n        \n        },\n        active_data: {\n            pulsing_parameters: {\n                wave_type: activeDataFormValues.wave_type,\n                periods: activeDataFormValues.periods,\n                freq: activeDataFormValues.frequency,\n                offset: activeDataFormValues.offset,\n                amplitude: activeDataFormValues.amplitude,\n            },\n            pre_frac_pulses: {start_time: Number(activeDataFormValues.pre_start_time.format('x')), end_time: Number(activeDataFormValues.pre_end_time.format('x')), n_pulses: Number(activeDataFormValues.pre_number_of_pulses)},\n            post_frac_pulses: {start_time: Number(activeDataFormValues.post_start_time.format('x')), end_time: Number(activeDataFormValues.post_end_time.format('x')), n_pulses: Number(activeDataFormValues.post_number_of_pulses)},\n        },\n        notes: {\n            pre_frac_pulse: notesDataFormValues.pre_notes,\n            post_frac_pulse: notesDataFormValues.post_notes,\n            other: notesDataFormValues.other_notes,\n        }\n    }\n}\n\nconst trackingSheetPopulateDataSerializer = (trackingSheetData) => {\n    const dynamicFormNestItemValuesData = {\n        bht_f: trackingSheetData.stage_tracking.bht_f,\n        bht_psi: trackingSheetData.stage_tracking.bht_psi,\n        customer: trackingSheetData.stage_tracking.customer,\n        date: moment(trackingSheetData.stage_tracking.date),\n        event_occur: trackingSheetData.stage_tracking.did_an_event_occur,\n        field_engineer_days: trackingSheetData.stage_tracking.field_engineer.days,\n        field_engineer_nights: trackingSheetData.stage_tracking.field_engineer.nights,\n        frac_design: trackingSheetData.stage_tracking.frac_design,\n        plug_seat_technique: trackingSheetData.stage_tracking.plug_seat_technique,\n        plug_type: trackingSheetData.stage_tracking.plug_type,\n        seismos_data_collection: trackingSheetData.stage_tracking.seismos_data_collection,\n        stage: trackingSheetData.stage_tracking.stage,\n        well: trackingSheetData.stage_tracking.well,\n    };\n    const perforationIntervalInformationValuesData = {\n        acid: trackingSheetData.perforation_interval_information.acid,\n        bottom_perf: trackingSheetData.perforation_interval_information.bottom_perf,\n        clusters_number: trackingSheetData.perforation_interval_information.n_clusters,\n        displacement_vol_bottom: trackingSheetData.perforation_interval_information.displacement_volume.bottom_perf,\n        displacement_vol_plug: trackingSheetData.perforation_interval_information.displacement_volume.plug,\n        displacement_vol_top: trackingSheetData.perforation_interval_information.displacement_volume.top_perf,\n        diverter_type: trackingSheetData.perforation_interval_information.diverter_type,\n        perf_daiameter: trackingSheetData.perforation_interval_information.perf_daiameter,\n        perf_gun_desc: trackingSheetData.perforation_interval_information.perf_gun_description,\n        plug_depth: trackingSheetData.perforation_interval_information.plug_depth,\n        pumped_diverter: trackingSheetData.perforation_interval_information.pumped_diverter,\n        spf: trackingSheetData.perforation_interval_information.spf,\n        top_perf: trackingSheetData.perforation_interval_information.top_perf\n    };\n    const stageDataValuesData = {\n        stage_start_time: moment(trackingSheetData.stage_data.stage_start_time),\n        stage_end_time: moment(trackingSheetData.stage_data.stage_end_time),\n        opening_well: trackingSheetData.stage_data.opening_well,\n        isip: trackingSheetData.stage_data.isip,\n        base_fluid_type: trackingSheetData.stage_data.fluid_parameters.base_fluid_type,\n        base_fluid_density: trackingSheetData.stage_data.fluid_parameters.base_fluid_density,\n        max_conc_density: trackingSheetData.stage_data.fluid_parameters.max_conc_density,\n        max_prop_conc_ppa_design: trackingSheetData.stage_data.pumping_summary.max_prop_conc.design,\n        max_prop_conc_ppa_actual: trackingSheetData.stage_data.pumping_summary.max_prop_conc.actual,\n        total_pad_volume_bbls_design: trackingSheetData.stage_data.pumping_summary.total_pad_volume.design,\n        total_pad_volume_bbls_actual: trackingSheetData.stage_data.pumping_summary.total_pad_volume.actual,\n        total_clean_fluid_volume_bbls_design: trackingSheetData.stage_data.pumping_summary.total_clean_fluid_volume.design,\n        total_clean_fluid_volume_bbls_actual: trackingSheetData.stage_data.pumping_summary.total_clean_fluid_volume.actual,\n        total_proppant_lbs_design: trackingSheetData.stage_data.pumping_summary.total_proppant.design,\n        total_proppant_lbs_actual: trackingSheetData.stage_data.pumping_summary.total_proppant.actual,\n        acid_volume_gals_design: trackingSheetData.stage_data.pumping_summary.acid_volume.design,\n        acid_volume_gals_actual: trackingSheetData.stage_data.pumping_summary.acid_volume.actual,\n        flush_volume_bbls_design: trackingSheetData.stage_data.pumping_summary.flush_volume.design,\n        flush_volume_bbls_actual: trackingSheetData.stage_data.pumping_summary.flush_volume.actual,\n        slurry_volume_bbls_design: trackingSheetData.stage_data.pumping_summary.slurry_volume.design,\n        slurry_volume_bbls_actual: trackingSheetData.stage_data.pumping_summary.slurry_volume.actual,\n    };\n    const propantFormValuesData = {\n        proppantData: trackingSheetData.stage_data.propant_data\n    };\n    const activeDataFormValuesData = {\n        wave_type: trackingSheetData.active_data.pulsing_parameters.wave_type,\n        periods: trackingSheetData.active_data.pulsing_parameters.periods,\n        frequency: trackingSheetData.active_data.pulsing_parameters.freq,\n        offset: trackingSheetData.active_data.pulsing_parameters.offset,\n        amplitude: trackingSheetData.active_data.pulsing_parameters.amplitude,\n        pre_start_time: moment(trackingSheetData.active_data.pre_frac_pulses.start_time),\n        pre_end_time: moment(trackingSheetData.active_data.pre_frac_pulses.end_time),\n        pre_number_of_pulses: trackingSheetData.active_data.pre_number_of_pulses,\n        post_start_time: moment(trackingSheetData.active_data.post_frac_pulses.start_time),\n        post_end_time: moment(trackingSheetData.active_data.post_frac_pulses.end_time),\n        post_number_of_pulses: trackingSheetData.active_data.post_number_of_pulses, \n    }\n    const notesDataFormValuesData = {\n        pre_notes: trackingSheetData.notes.pre_frac_pulse,\n        post_notes: trackingSheetData.notes.post_frac_pulse,\n        other_notes: trackingSheetData.notes.other,\n    }\n\n    return {\n        dynamicFormNestItemValuesData,\n        perforationIntervalInformationValuesData,\n        stageDataValuesData,\n        propantFormValuesData,\n        activeDataFormValuesData,\n        notesDataFormValuesData,\n    }\n}\nconst FormDataSerializer = {\n    defultValueFormSubmitSerializer,\n    trackingSheetSubmitSerializer,\n    trackingSheetPopulateDataSerializer\n}\n\nexport default FormDataSerializer;"]},"metadata":{},"sourceType":"module"}