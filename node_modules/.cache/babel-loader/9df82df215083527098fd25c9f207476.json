{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/ExistingProject.js\";\nimport React from \"react\";\nimport { Card, Table, Radio, Divider } from 'antd'; // components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ExistingProject() {\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 27\n    }, this)\n  }, {\n    title: 'Age',\n    dataIndex: 'age'\n  }, {\n    title: 'Address',\n    dataIndex: 'address'\n  }];\n  const data = [{\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park'\n  }, {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park'\n  }, {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park'\n  }, {\n    key: '4',\n    name: 'Disabled User',\n    age: 99,\n    address: 'Sidney No. 1 Lake Park'\n  }]; // rowSelection object indicates the need for row selection\n\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    getCheckboxProps: record => ({\n      disabled: record.name === 'Disabled User',\n      // Column configuration not to be checked\n      name: record.name\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"80vh\"\n      },\n      className: \"flex justify-center items-center bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          rowSelection: {\n            type: 'radio',\n            ...rowSelection\n          },\n          columns: columns,\n          dataSource: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = ExistingProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExistingProject\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/ExistingProject.js"],"names":["React","Card","Table","Radio","Divider","ExistingProject","columns","title","dataIndex","render","text","data","key","name","age","address","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","minHeight","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,OAA7B,QAA4C,MAA5C,C,CAEA;;;;AAEA,eAAe,SAASC,eAAT,GAA2B;AACtC,QAAMC,OAAO,GAAG,CAChB;AACIC,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,MAFf;AAGIC,IAAAA,MAAM,EAAGC,IAAD,iBAAU;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAHtB,GADgB,EAMhB;AACIH,IAAAA,KAAK,EAAE,KADX;AAEIC,IAAAA,SAAS,EAAE;AAFf,GANgB,EAUhB;AACID,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,SAAS,EAAE;AAFf,GAVgB,CAAhB;AAeA,QAAMG,IAAI,GAAG,CACb;AACIC,IAAAA,GAAG,EAAE,GADT;AAEIC,IAAAA,IAAI,EAAE,YAFV;AAGIC,IAAAA,GAAG,EAAE,EAHT;AAIIC,IAAAA,OAAO,EAAE;AAJb,GADa,EAOb;AACIH,IAAAA,GAAG,EAAE,GADT;AAEIC,IAAAA,IAAI,EAAE,WAFV;AAGIC,IAAAA,GAAG,EAAE,EAHT;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAPa,EAab;AACIH,IAAAA,GAAG,EAAE,GADT;AAEIC,IAAAA,IAAI,EAAE,WAFV;AAGIC,IAAAA,GAAG,EAAE,EAHT;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAba,EAmBb;AACIH,IAAAA,GAAG,EAAE,GADT;AAEIC,IAAAA,IAAI,EAAE,eAFV;AAGIC,IAAAA,GAAG,EAAE,EAHT;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAnBa,CAAb,CAhBsC,CAyCnC;;AAEH,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,CAACC,eAAD,EAAkBC,YAAlB,KAAmC;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBH,eAAgB,EAAhD,EAAmD,gBAAnD,EAAqEC,YAArE;AACD,KAHgB;AAIjBG,IAAAA,gBAAgB,EAAGC,MAAD,KAAa;AAC7BC,MAAAA,QAAQ,EAAED,MAAM,CAACV,IAAP,KAAgB,eADG;AAE7B;AACAA,MAAAA,IAAI,EAAEU,MAAM,CAACV;AAHgB,KAAb;AAJD,GAArB;AAWA,sBACI;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAACY,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAiC,MAAA,SAAS,EAAC,2CAA3C;AAAA,6BACI;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,YAAY,EAAE;AACVC,YAAAA,IAAI,EAAE,OADI;AAEV,eAAGV;AAFO,WADlB;AAKI,UAAA,OAAO,EAAEV,OALb;AAMI,UAAA,UAAU,EAAEK;AANhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAgBH;KAtEuBN,e","sourcesContent":["import React from \"react\";\nimport { Card, Table, Radio, Divider } from 'antd';\n\n// components\n\nexport default function ExistingProject() {\n    const columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        render: (text) => <a>{text}</a>,\n    },\n    {\n        title: 'Age',\n        dataIndex: 'age',\n    },\n    {\n        title: 'Address',\n        dataIndex: 'address',\n    },\n    ];\n    const data = [\n    {\n        key: '1',\n        name: 'John Brown',\n        age: 32,\n        address: 'New York No. 1 Lake Park',\n    },\n    {\n        key: '2',\n        name: 'Jim Green',\n        age: 42,\n        address: 'London No. 1 Lake Park',\n    },\n    {\n        key: '3',\n        name: 'Joe Black',\n        age: 32,\n        address: 'Sidney No. 1 Lake Park',\n    },\n    {\n        key: '4',\n        name: 'Disabled User',\n        age: 99,\n        address: 'Sidney No. 1 Lake Park',\n    },\n    ]; // rowSelection object indicates the need for row selection\n\n    const rowSelection = {\n        onChange: (selectedRowKeys, selectedRows) => {\n          console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n        },\n        getCheckboxProps: (record) => ({\n          disabled: record.name === 'Disabled User',\n          // Column configuration not to be checked\n          name: record.name,\n        }),\n    };\n\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div>\n                    <Table\n                        rowSelection={{\n                            type: 'radio',\n                            ...rowSelection,\n                        }}\n                        columns={columns}\n                        dataSource={data}\n                    />\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}