{"ast":null,"code":"import _objectSpread from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,DatePicker,Space}from'antd';import TableHeadersUtil from\"util/TableHeaderUtil\";import Grid from\"components/Grid/Grid\";import _ from\"lodash\";import ENUMS from\"constants/appEnums\";import moment from'moment';import NumberInput from\"components/Grid/DataEditor/NumberInput\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function JobInfo(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),jobInfoGrid=_useState2[0],setJobInfoGrid=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),padInfoGrid=_useState4[0],setPadInfoGrid=_useState4[1];var onDateChange=function onDateChange(date,dateString,grid,index,field){var newDate=null;if(date){newDate=date.format('x');}var newJobInfoGrid=_.cloneDeep(grid);newJobInfoGrid[index].find(function(r){return r.field===field;}).value=Number(newDate);handleJobInfoGridChanged(newJobInfoGrid);};var getRow=function getRow(t){return t.rows.map(function(row,index){return[{value:row.label,readOnly:true,disableEvents:true},{value:\"\",field:row.field,required:row.required,datatype:row.datatype,dataEditor:row.field===ENUMS.FORM_FIELDS.PAD_INFO.REP_CONTACT_NUMBER?NumberInput:null}];});};var startDatecomponent=function startDatecomponent(rowIdx,grid){var currentVal=grid[rowIdx].find(function(r){return r.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE;}).value;var momentDate=currentVal?moment(Number(currentVal)):null;return/*#__PURE__*/_jsx(DatePicker,{className:\"w-100\",value:momentDate,onChange:function onChange(date,dateString){return onDateChange(date,dateString,grid,rowIdx,ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE);}});};var endDatecomponent=function endDatecomponent(rowIdx,grid){var currentVal=grid[rowIdx].find(function(r){return r.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE;}).value;var momentDate=currentVal?moment(Number(currentVal)):null;return/*#__PURE__*/_jsx(DatePicker,{className:\"w-100\",value:momentDate,onChange:function onChange(date,dateString){return onDateChange(date,dateString,grid,rowIdx,ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE);}});};var populateJobInfoGrid=function populateJobInfoGrid(){var jobgrid=TableHeadersUtil.jobInfoFormTableData.grid.reduce(function(rows,t,rowIdx){var row=getRow(t);return rows.concat(row);},[]);setJobInfoGrid(jobgrid.map(function(x,index){return x.map(function(y){var componentData=y.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE?startDatecomponent(index,jobgrid):y.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE?endDatecomponent(index,jobgrid):null;return _objectSpread(_objectSpread({},y),{},{component:componentData,forceComponent:y.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE||y.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE?true:false});});}));};var populatePadInfoGrid=function populatePadInfoGrid(){setPadInfoGrid(TableHeadersUtil.padInfoFormTableData.grid.reduce(function(rows,t,rowIdx){var row=getRow(t);return rows.concat(row);},[]));};var handleJobInfoGridChanged=function handleJobInfoGridChanged(updatedGridData){var newGrid=updatedGridData.map(function(x,index){return x.map(function(y){var componentData=y.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE?startDatecomponent(index,updatedGridData):y.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE?endDatecomponent(index,updatedGridData):null;return _objectSpread(_objectSpread({},y),{},{component:componentData,forceComponent:y.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE||y.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE?true:false});});});props.setJobInfoFormValue(newGrid);setJobInfoGrid(newGrid);};var handlePadInfoGridChanged=function handlePadInfoGridChanged(updatedGridData){props.setPadInfoFormValue(updatedGridData);setPadInfoGrid(updatedGridData);};var gotoNextStep=function gotoNextStep(){var isJobInfoValid=true;var isPadInfoValid=true;var validatedJobGrid=_.cloneDeep(jobInfoGrid);validatedJobGrid.map(function(row){row.map(function(cell){if(cell.required&&cell.value===\"\"){isJobInfoValid=false;cell.className='cell-error';}return cell;});return row;});var validatedPadGrid=_.cloneDeep(padInfoGrid);validatedPadGrid.map(function(row){row.map(function(cell){if(cell.required&&cell.value===\"\"){isPadInfoValid=false;cell.className='cell-error';}return cell;});return row;});if(!isJobInfoValid||!isPadInfoValid){handleJobInfoGridChanged(validatedJobGrid);handlePadInfoGridChanged(validatedPadGrid);}else{props.next();}};useState(function(){if(props.jobInfoFormValues!=null){console.log(_.cloneDeep(props.jobInfoFormValues));props.jobInfoFormValues&&setJobInfoGrid(props.jobInfoFormValues.map(function(x,index){return x.map(function(y){var componentData=y.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE?startDatecomponent(index,props.jobInfoFormValues):y.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE?endDatecomponent(index,props.jobInfoFormValues):null;return _objectSpread(_objectSpread({},y),{},{component:componentData,forceComponent:y.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE||y.field===ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE?true:false});});}));}else{populateJobInfoGrid();}if(props.padInfoFormValues!=null){props.padInfoFormValues&&setPadInfoGrid(props.padInfoFormValues);}else{populatePadInfoGrid();}},props);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex\",style:{width:'80%',marginLeft:'auto',marginRight:'auto'},children:/*#__PURE__*/_jsxs(Space,{size:\"large\",children:[/*#__PURE__*/_jsx(Grid,{columns:TableHeadersUtil.jobInfoFormTableData.columns,grid:jobInfoGrid,className:\"no-header-grid mb-8\",gridValueChanged:handleJobInfoGridChanged}),/*#__PURE__*/_jsx(Grid,{columns:TableHeadersUtil.padInfoFormTableData.columns,grid:padInfoGrid,className:\"no-header-grid mb-8\",gridValueChanged:handlePadInfoGridChanged})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:function onClick(e){gotoNextStep();},children:\"Next\"})})]});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/JobInfo.js"],"names":["React","useState","Button","DatePicker","Space","TableHeadersUtil","Grid","_","ENUMS","moment","NumberInput","JobInfo","props","jobInfoGrid","setJobInfoGrid","padInfoGrid","setPadInfoGrid","onDateChange","date","dateString","grid","index","field","newDate","format","newJobInfoGrid","cloneDeep","find","r","value","Number","handleJobInfoGridChanged","getRow","t","rows","map","row","label","readOnly","disableEvents","required","datatype","dataEditor","FORM_FIELDS","PAD_INFO","REP_CONTACT_NUMBER","startDatecomponent","rowIdx","currentVal","JOB_INFO","JOB_START_DATE","momentDate","endDatecomponent","JOB_END_DATE","populateJobInfoGrid","jobgrid","jobInfoFormTableData","reduce","concat","x","y","componentData","component","forceComponent","populatePadInfoGrid","padInfoFormTableData","updatedGridData","newGrid","setJobInfoFormValue","handlePadInfoGridChanged","setPadInfoFormValue","gotoNextStep","isJobInfoValid","isPadInfoValid","validatedJobGrid","cell","className","validatedPadGrid","next","jobInfoFormValues","console","log","padInfoFormValues","width","marginLeft","marginRight","columns","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, DatePicker, Space } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport _ from \"lodash\";\nimport ENUMS from \"constants/appEnums\";\nimport moment from 'moment';\nimport NumberInput from \"components/Grid/DataEditor/NumberInput\";\n\nexport default function JobInfo(props) {\n    \n    const [jobInfoGrid, setJobInfoGrid] = useState([]);\n    const [padInfoGrid, setPadInfoGrid] = useState([]);\n\n    const onDateChange = (date, dateString, grid, index, field) => {\n        let newDate = null;\n        if(date) {\n            newDate = date.format('x');\n        }\n        const newJobInfoGrid = _.cloneDeep(grid);\n        newJobInfoGrid[index].find(r => r.field === field).value = Number(newDate);\n        handleJobInfoGridChanged(newJobInfoGrid);\n    }\n\n    const getRow = (t) => {\n        return t.rows.map((row, index) => {\n            return [\n                { value: row.label, readOnly: true, disableEvents: true },\n                { value: \"\", field: row.field, required: row.required, datatype: row.datatype, dataEditor: row.field === ENUMS.FORM_FIELDS.PAD_INFO.REP_CONTACT_NUMBER ? NumberInput : null },\n            ]\n        })\n    }\n\n    const startDatecomponent = (rowIdx, grid) => {\n        const currentVal = grid[rowIdx].find(r => r.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE).value;\n        const momentDate = currentVal ? moment(Number(currentVal)) : null;\n        return <DatePicker className=\"w-100\" value={momentDate} onChange={(date, dateString) => onDateChange(date, dateString, grid, rowIdx, ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE)} />;\n    }\n\n    const endDatecomponent = (rowIdx, grid) => {\n        const currentVal = grid[rowIdx].find(r => r.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE).value;\n        const momentDate = currentVal ? moment(Number(currentVal)) : null;\n        return <DatePicker className=\"w-100\" value={momentDate} onChange={(date, dateString) => onDateChange(date, dateString, grid, rowIdx, ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE)} />;\n    }\n\n    const populateJobInfoGrid = () => {\n        const jobgrid = TableHeadersUtil.jobInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            const row = getRow(t);\n            return rows.concat(row);\n        }, []);\n        setJobInfoGrid(jobgrid.map((x, index) => {\n            return x.map(y => { \n                const componentData = (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE ? startDatecomponent(index, jobgrid) : (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE ?  endDatecomponent(index, jobgrid) : null));\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE || y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE) ? true : false\n                }\n            })\n        }));\n    }\n\n    const populatePadInfoGrid = () => {\n        setPadInfoGrid(TableHeadersUtil.padInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            const row = getRow(t);\n            return rows.concat(row);\n        }, []))\n    }\n\n    const handleJobInfoGridChanged = (updatedGridData) => {\n        const newGrid = updatedGridData.map((x, index) => {\n            return x.map(y => { \n                const componentData = (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE ? startDatecomponent(index, updatedGridData) : (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE ?  endDatecomponent(index, updatedGridData) : null));\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE || y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE) ? true : false\n                }\n            })\n        });\n        props.setJobInfoFormValue(newGrid);\n        setJobInfoGrid(newGrid);\n    }\n\n    const handlePadInfoGridChanged = (updatedGridData) => {\n        props.setPadInfoFormValue(updatedGridData);\n        setPadInfoGrid(updatedGridData);\n    }\n\n    const gotoNextStep = () => {\n        let isJobInfoValid = true;\n        let isPadInfoValid = true;\n        const validatedJobGrid = _.cloneDeep(jobInfoGrid);\n        validatedJobGrid.map(row => {\n            row.map(cell => {\n                if(cell.required && cell.value === \"\") {\n                    isJobInfoValid = false;\n                    cell.className = 'cell-error';\n                }\n                return cell;\n            });\n            return row;\n        })\n        const validatedPadGrid = _.cloneDeep(padInfoGrid);\n        validatedPadGrid.map(row => {\n            row.map(cell => {\n                if(cell.required && cell.value === \"\") {\n                    isPadInfoValid = false;\n                    cell.className = 'cell-error';\n                }\n                return cell;\n            });\n            return row;\n        })\n        if(!isJobInfoValid || !isPadInfoValid) {\n            handleJobInfoGridChanged(validatedJobGrid)\n            handlePadInfoGridChanged(validatedPadGrid)\n        } else {\n            props.next();\n        }\n    }\n\n    useState(() => {\n        if(props.jobInfoFormValues != null) {\n            console.log(_.cloneDeep(props.jobInfoFormValues))\n            props.jobInfoFormValues && setJobInfoGrid(props.jobInfoFormValues.map((x, index) => {\n                return x.map(y => { \n                    const componentData = (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE ? startDatecomponent(index, props.jobInfoFormValues) : (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE ?  endDatecomponent(index, props.jobInfoFormValues) : null));\n                    return {\n                        ...y,\n                        component: componentData,\n                        forceComponent: (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE || y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE) ? true : false\n                    }\n                })\n            }));\n        } else {\n            populateJobInfoGrid();\n        }\n        if(props.padInfoFormValues != null) {\n            props.padInfoFormValues && setPadInfoGrid(props.padInfoFormValues);\n        } else {\n            populatePadInfoGrid();\n        }\n    }, props);\n\n    return (\n        <>\n            <div className=\"flex\" style={{width: '80%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Space size=\"large\">\n                    <Grid \n                        columns={TableHeadersUtil.jobInfoFormTableData.columns}\n                        grid={jobInfoGrid}\n                        className=\"no-header-grid mb-8\"\n                        gridValueChanged={handleJobInfoGridChanged}\n                    ></Grid>\n                    <Grid \n                        columns={TableHeadersUtil.padInfoFormTableData.columns}\n                        grid={padInfoGrid}\n                        className=\"no-header-grid mb-8\"\n                        gridValueChanged={handlePadInfoGridChanged}\n                    ></Grid>\n                </Space>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {gotoNextStep()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}