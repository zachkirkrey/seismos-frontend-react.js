{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/DataInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card } from 'antd';\nimport APP_CONSTANTS from \"constants/appConstants\"; // component\n\nimport FileUploadModal from \"components/Modal/FileUploadModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DataInput() {\n  _s();\n\n  const cards = APP_CONSTANTS.DATA_INPUT_CARDS;\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [section, setSection] = useState(null);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = (uploadedFile, selectedSection) => {\n    console.log(uploadedFile, selectedSection);\n    DATA_INPUT_CARDS.find(card => card.section === selectedSection).grid[2].label = 'Uploaded';\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleAction = (action, index, section) => {\n    console.log(action, index, section);\n\n    if (action === 'upload') {\n      setSection(section);\n      showModal();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cards.map((card, cardIndex) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        title: card.title,\n        bordered: false,\n        style: {\n          width: '100%',\n          marginBottom: '1.5rem'\n        },\n        className: \"mb-6\",\n        children: card.grid.map((cardGrid, cardGridIndex) => {\n          return /*#__PURE__*/_jsxDEV(Card.Grid, {\n            style: {\n              width: '25%',\n              textAlign: 'center'\n            },\n            className: \"di-card-grid\",\n            onClick: e => handleAction(cardGrid.action, cardGridIndex, card.section),\n            children: cardGrid.action === \"upload\" ? cardGrid.label : cardGrid.label\n          }, cardGridIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 40\n          }, this);\n        })\n      }, cardIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(FileUploadModal, {\n      isModalVisible: isModalVisible,\n      section: section,\n      handleOk: handleOk,\n      handleCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DataInput, \"2ak3XzgfcCR5gcExmeTsYqjBdyo=\");\n\n_c = DataInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataInput\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/DataInput.js"],"names":["React","useState","Card","APP_CONSTANTS","FileUploadModal","DataInput","cards","DATA_INPUT_CARDS","isModalVisible","setIsModalVisible","section","setSection","showModal","handleOk","uploadedFile","selectedSection","console","log","find","card","grid","label","handleCancel","handleAction","action","index","map","cardIndex","title","width","marginBottom","cardGrid","cardGridIndex","textAlign","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,aAAP,MAA0B,wBAA1B,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,kCAA5B;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAMC,KAAK,GAAGH,aAAa,CAACI,gBAA5B;AAEA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMW,SAAS,GAAG,MAAM;AACpBH,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFD;;AAIA,QAAMI,QAAQ,GAAG,CAACC,YAAD,EAAeC,eAAf,KAAmC;AAChDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ,EAA0BC,eAA1B;AACAR,IAAAA,gBAAgB,CAACW,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,CAACT,OAAL,KAAiBK,eAA/C,EAAgEK,IAAhE,CAAqE,CAArE,EAAwEC,KAAxE,GAAgF,UAAhF;AACAZ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAJD;;AAMA,QAAMa,YAAY,GAAG,MAAM;AACvBb,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAIA,QAAMc,YAAY,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBf,OAAhB,KAA4B;AAC7CM,IAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ,EAAoBC,KAApB,EAA2Bf,OAA3B;;AACA,QAAIc,MAAM,KAAK,QAAf,EAAyB;AACrBb,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAE,MAAAA,SAAS;AACZ;AACJ,GAND;;AAQA,sBACI;AAAA,eAEQN,KAAK,CAACoB,GAAN,CAAU,CAACP,IAAD,EAAOQ,SAAP,KAAqB;AAC3B,0BAAO,QAAC,IAAD;AAAsB,QAAA,KAAK,EAAER,IAAI,CAACS,KAAlC;AAAyC,QAAA,QAAQ,EAAE,KAAnD;AAA0D,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,YAAY,EAAE;AAA/B,SAAjE;AAA4G,QAAA,SAAS,EAAC,MAAtH;AAAA,kBAECX,IAAI,CAACC,IAAL,CAAUM,GAAV,CAAc,CAACK,QAAD,EAAWC,aAAX,KAA6B;AACvC,8BAAO,QAAC,IAAD,CAAM,IAAN;AAEH,YAAA,KAAK,EAAE;AAAEH,cAAAA,KAAK,EAAE,KAAT;AAAgBI,cAAAA,SAAS,EAAE;AAA3B,aAFJ;AAGH,YAAA,SAAS,EAAC,cAHP;AAIH,YAAA,OAAO,EAAGC,CAAD,IAAOX,YAAY,CAACQ,QAAQ,CAACP,MAAV,EAAkBQ,aAAlB,EAAiCb,IAAI,CAACT,OAAtC,CAJzB;AAAA,sBAOEqB,QAAQ,CAACP,MAAT,KAAoB,QAArB,GACEO,QAAQ,CAACV,KADX,GAEEU,QAAQ,CAACV;AATZ,aACEW,aADF;AAAA;AAAA;AAAA;AAAA,kBAAP;AAYH,SAbD;AAFD,SAAWL,SAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AA4BH,KA7BD,CAFR,eAiCI,QAAC,eAAD;AAAiB,MAAA,cAAc,EAAEnB,cAAjC;AAAiD,MAAA,OAAO,EAAEE,OAA1D;AAAmE,MAAA,QAAQ,EAAEG,QAA7E;AAAuF,MAAA,YAAY,EAAES;AAArG;AAAA;AAAA;AAAA;AAAA,YAjCJ;AAAA,kBADJ;AAsCH;;GAlEuBjB,S;;KAAAA,S","sourcesContent":["import React, { useState } from \"react\";\nimport { Card } from 'antd';\nimport APP_CONSTANTS from \"constants/appConstants\";\n\n// component\nimport FileUploadModal from \"components/Modal/FileUploadModal\";\n\nexport default function DataInput() {\n    const cards = APP_CONSTANTS.DATA_INPUT_CARDS;\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [section, setSection] = useState(null);\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleOk = (uploadedFile, selectedSection) => {\n        console.log(uploadedFile, selectedSection);\n        DATA_INPUT_CARDS.find(card => card.section === selectedSection).grid[2].label = 'Uploaded';\n        setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n    \n    const handleAction = (action, index, section) => {\n        console.log(action, index, section);\n        if (action === 'upload') {\n            setSection(section);\n            showModal();\n        }\n    }\n\n    return (\n        <>\n            {\n                cards.map((card, cardIndex) => {\n                    return <Card key={cardIndex} title={card.title} bordered={false} style={{ width: '100%', marginBottom: '1.5rem' }} className=\"mb-6\">\n                        {\n                            card.grid.map((cardGrid, cardGridIndex) => {\n                                return <Card.Grid\n                                    key={cardGridIndex} \n                                    style={{ width: '25%', textAlign: 'center'}}\n                                    className=\"di-card-grid\"\n                                    onClick={(e) => handleAction(cardGrid.action, cardGridIndex, card.section)}\n                                >\n                                    {\n                                        (cardGrid.action === \"upload\")\n                                        ? cardGrid.label\n                                        : cardGrid.label\n                                    }\n                                </Card.Grid>\n                            })\n                        }\n                        {/* <Row gutter={16}>\n                            {\n                                card.grid.map((cardGrid, cardGridIndex) => {\n                                    return <Col className=\"gutter-row\" span={6}>\n                                        <Button size={\"large\"} shape=\"round\" className={\"w-full \" + cardGrid.color}>{cardGrid.label}</Button>\n                                    </Col>\n                                })\n                            }\n                        </Row>\n                         */}\n                    </Card>\n                })\n            }\n            <FileUploadModal isModalVisible={isModalVisible} section={section} handleOk={handleOk} handleCancel={handleCancel}\n            ></FileUploadModal>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}