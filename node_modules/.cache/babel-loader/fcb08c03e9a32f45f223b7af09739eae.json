{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/app.js\",\n    _s = $RefreshSig$();\n\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport Auth from \"layouts/Auth.js\";\nimport HttpUtil from \"util/HttpUtil\";\nimport Admin from \"layouts/Admin.js\";\nimport ENUMS from \"constants/appEnums\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index';\nimport { AppContext } from \"util/ContextUtil\";\nimport React, { useState, useEffect } from \"react\";\nimport NotFound from \"components/NotFound/NotFound\";\nimport { useToasts } from 'react-toast-notifications';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Application() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    addToast\n  } = useToasts();\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  useEffect(() => {\n    const onLoad = async () => {\n      if (localStorage.getItem('JWT')) {\n        axios.get(config.API_URL + ENUMS.API_ROUTES.AUTH_STATUS).then(res => {\n          dispatch(allActions.authActions.setUserState(res.data.user));\n          dispatch(allActions.authActions.setUserProjectList(res.data.projectList));\n          userHasAuthenticated(true);\n          setIsAuthenticating(false);\n        }).catch(error => {\n          userHasAuthenticated(false);\n          setIsAuthenticating(false);\n\n          if (error.response) {\n            if (error.response.data && error.response.data.message === 'jwt expired') {\n              localStorage.removeItem('JWT');\n              addToast(\"Your login token has expired. Please login again!\", {\n                appearance: 'info'\n              });\n              console.error(error.response.data.message);\n            } else {// TODO: remove the comments\n              // addToast(\n              //     error.response.data ? \n              //         error.response.data.message : \n              //         \"Failed to fetch user details. Please login again!\", \n              //     { \n              //         appearance: 'error',\n              //         autoDismiss: true\n              //     }\n              // );\n            }\n          }\n        });\n      } else {\n        setIsAuthenticating(false);\n      }\n    };\n\n    onLoad();\n  }, [addToast, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isAuthenticating && /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        isAuthenticated,\n        userHasAuthenticated\n      },\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: ENUMS.ROUTES.ADMIN,\n            render: props => /*#__PURE__*/_jsxDEV(Admin, { ...props,\n              isAuthenticated: isAuthenticated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: ENUMS.ROUTES.AUTH,\n            render: props => /*#__PURE__*/_jsxDEV(Auth, { ...props,\n              isAuthenticated: isAuthenticated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 74\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            from: \"/\",\n            to: \"/auth/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            render: props => /*#__PURE__*/_jsxDEV(NotFound, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Application, \"fmXUlRKp4s0ZpaVC0nsb/tRn6bI=\", false, function () {\n  return [useDispatch, useToasts];\n});\n\n_c = Application;\n\nvar _c;\n\n$RefreshReg$(_c, \"Application\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/app.js"],"names":["config","axios","Auth","HttpUtil","Admin","ENUMS","useDispatch","allActions","AppContext","React","useState","useEffect","NotFound","useToasts","BrowserRouter","Route","Switch","Redirect","Application","dispatch","addToast","isAuthenticated","userHasAuthenticated","isAuthenticating","setIsAuthenticating","onLoad","localStorage","getItem","get","API_URL","API_ROUTES","AUTH_STATUS","then","res","authActions","setUserState","data","user","setUserProjectList","projectList","catch","error","response","message","removeItem","appearance","console","ROUTES","ADMIN","props","AUTH"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;;;AAEA,eAAe,SAASC,WAAT,GAAwB;AAAA;;AACnC,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAeP,SAAS,EAA9B;AAEA,QAAM,CAACQ,eAAD,EAAkBC,oBAAlB,IAA0CZ,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAC,IAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,MAAM,GAAG,YAAY;AACvB,UAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC7B1B,QAAAA,KAAK,CAAC2B,GAAN,CAAU5B,MAAM,CAAC6B,OAAP,GAAiBxB,KAAK,CAACyB,UAAN,CAAiBC,WAA5C,EACCC,IADD,CACMC,GAAG,IAAI;AACTd,UAAAA,QAAQ,CAACZ,UAAU,CAAC2B,WAAX,CAAuBC,YAAvB,CAAoCF,GAAG,CAACG,IAAJ,CAASC,IAA7C,CAAD,CAAR;AACAlB,UAAAA,QAAQ,CAACZ,UAAU,CAAC2B,WAAX,CAAuBI,kBAAvB,CAA0CL,GAAG,CAACG,IAAJ,CAASG,WAAnD,CAAD,CAAR;AACAjB,UAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAE,UAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,SAND,EAOCgB,KAPD,CAOOC,KAAK,IAAI;AACZnB,UAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAE,UAAAA,mBAAmB,CAAC,KAAD,CAAnB;;AACA,cAAIiB,KAAK,CAACC,QAAV,EAAoB;AAChB,gBAAID,KAAK,CAACC,QAAN,CAAeN,IAAf,IAAuBK,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,OAApB,KAAgC,aAA3D,EAA0E;AACtEjB,cAAAA,YAAY,CAACkB,UAAb,CAAwB,KAAxB;AACAxB,cAAAA,QAAQ,CAAC,mDAAD,EAAsD;AAAEyB,gBAAAA,UAAU,EAAE;AAAd,eAAtD,CAAR;AACAC,cAAAA,OAAO,CAACL,KAAR,CAAcA,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,OAAlC;AACH,aAJD,MAKK,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAEJ;AACJ,SA9BD;AA+BH,OAhCD,MAiCK;AACDnB,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH;AACJ,KArCD;;AAsCAC,IAAAA,MAAM;AACT,GAxCQ,EAwCN,CAACL,QAAD,EAAWD,QAAX,CAxCM,CAAT;AA0CA,sBACI;AAAA,cACM,CAACI,gBAAD,iBACF,QAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE;AAAEF,QAAAA,eAAF;AAAmBC,QAAAA;AAAnB,OAA5B;AAAA,6BACI,QAAC,aAAD;AAAA,+BACI,QAAC,MAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEjB,KAAK,CAAC0C,MAAN,CAAaC,KAA1B;AAAiC,YAAA,MAAM,EAAEC,KAAK,iBAAI,QAAC,KAAD,OAAWA,KAAX;AAAkB,cAAA,eAAe,EAAE5B;AAAnC;AAAA;AAAA;AAAA;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEhB,KAAK,CAAC0C,MAAN,CAAaG,IAA1B;AAAgC,YAAA,MAAM,EAAED,KAAK,iBAAI,QAAC,IAAD,OAAUA,KAAV;AAAiB,cAAA,eAAe,EAAE5B;AAAlC;AAAA;AAAA;AAAA;AAAA;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAOI,QAAC,QAAD;AAAU,YAAA,IAAI,EAAC,GAAf;AAAmB,YAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI,QAAC,KAAD;AAAO,YAAA,MAAM,EAAE4B,KAAK,iBAAI,QAAC,QAAD,OAAcA;AAAd;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAoBH;;GArEuB/B,W;UACHZ,W,EACIO,S;;;KAFDK,W","sourcesContent":["import config from \"config\";\nimport axios from \"axiosConfig\";\nimport Auth from \"layouts/Auth.js\";\nimport HttpUtil from \"util/HttpUtil\";\nimport Admin from \"layouts/Admin.js\";\nimport ENUMS from \"constants/appEnums\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index';\nimport { AppContext } from \"util/ContextUtil\";\nimport React, { useState, useEffect } from \"react\";\nimport NotFound from \"components/NotFound/NotFound\";\nimport { useToasts } from 'react-toast-notifications';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nexport default function Application () {\n    const dispatch = useDispatch();\n    const { addToast } = useToasts();\n\n    const [isAuthenticated, userHasAuthenticated] = useState(false);\n    const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n    useEffect(() => {\n        const onLoad = async () => {\n            if (localStorage.getItem('JWT')) {\n                axios.get(config.API_URL + ENUMS.API_ROUTES.AUTH_STATUS)\n                .then(res => {\n                    dispatch(allActions.authActions.setUserState(res.data.user));\n                    dispatch(allActions.authActions.setUserProjectList(res.data.projectList));\n                    userHasAuthenticated(true);\n                    setIsAuthenticating(false);\n                })\n                .catch(error => {\n                    userHasAuthenticated(false);\n                    setIsAuthenticating(false);\n                    if (error.response) {\n                        if (error.response.data && error.response.data.message === 'jwt expired') {\n                            localStorage.removeItem('JWT');\n                            addToast(\"Your login token has expired. Please login again!\", { appearance: 'info' });\n                            console.error(error.response.data.message);\n                        }\n                        else {\n                            // TODO: remove the comments\n                            // addToast(\n                            //     error.response.data ? \n                            //         error.response.data.message : \n                            //         \"Failed to fetch user details. Please login again!\", \n                            //     { \n                            //         appearance: 'error',\n                            //         autoDismiss: true\n                            //     }\n                            // );\n                        }\n                        \n                    }\n                })\n            }\n            else {\n                setIsAuthenticating(false);\n            }\n        }      \n        onLoad();\n    }, [addToast, dispatch]);\n  \n    return (\n        <>\n            { !isAuthenticating &&\n            <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route path={ENUMS.ROUTES.ADMIN} render={props => <Admin {...props} isAuthenticated={isAuthenticated} />} />\n                        <Route path={ENUMS.ROUTES.AUTH} render={props => <Auth {...props} isAuthenticated={isAuthenticated} />} />\n                        {/* \n                        // TODO: remove the comments\n                        <Redirect from=\"/\" to=\"/auth/home\" /> \n                        */} \n                        <Redirect from=\"/\" to=\"/auth/login\" />\n                        <Route render={props => <NotFound {...props} />} />\n                    </Switch>\n                </BrowserRouter>\n            </AppContext.Provider>\n            }\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}