{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/ExistingProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Table, PageHeader, Button } from 'antd';\nimport FAKE_DATA from \"constants/fakeData\";\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index'; // components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ExistingProject() {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const columns = TableHeadersUtil.projectTable;\n  const data = FAKE_DATA.LIST_OF_PROJECTS;\n  const [selectedRow, setSelectedRow] = useState(null);\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setSelectedRow(data.filter(x => x.key === selectedRowKeys));\n    },\n    getCheckboxProps: record => ({\n      disabled: record.name === 'Disabled User',\n      // Column configuration not to be checked\n      name: record.name\n    })\n  };\n\n  const handleTableChange = (pagination, filters, sorter) => {// this.fetch({\n    //   sortField: sorter.field,\n    //   sortOrder: sorter.order,\n    //   pagination,\n    //   ...filters,\n    // });\n  };\n\n  const [pagination, setPagination] = useState({});\n\n  const openProject = e => {\n    e.preventDefault(); // dispatch(allActions.authActions.setUserProject(FAKE_DATA.projectData));\n\n    const projectId = '1';\n    history.push({\n      pathname: '/admin/dashboard',\n      search: '?projectId=' + projectId,\n      state: {\n        passedId: projectId\n      }\n    });\n  };\n\n  useEffect(() => {\n    setPagination({\n      current: 1,\n      pageSize: 5,\n      total: 10\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"80vh\"\n      },\n      className: \"flex justify-center items-center bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '1100px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          ghost: false,\n          onBack: () => window.history.back(),\n          title: \"Select a project to continue\",\n          extra: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            disabled: selectedRow ? false : true,\n            onClick: e => openProject(e),\n            children: \"Next\"\n          }, \"1\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            rowSelection: {\n              type: 'radio',\n              ...rowSelection\n            },\n            pagination: pagination,\n            columns: columns,\n            dataSource: data,\n            onChange: handleTableChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ExistingProject, \"txgehTND/hcby5I8PBOrllvxAeQ=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = ExistingProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExistingProject\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/ExistingProject.js"],"names":["React","useEffect","useState","Card","Table","PageHeader","Button","FAKE_DATA","TableHeadersUtil","useHistory","useDispatch","allActions","ExistingProject","history","dispatch","columns","projectTable","data","LIST_OF_PROJECTS","selectedRow","setSelectedRow","rowSelection","onChange","selectedRowKeys","selectedRows","filter","x","key","getCheckboxProps","record","disabled","name","handleTableChange","pagination","filters","sorter","setPagination","openProject","e","preventDefault","projectId","push","pathname","search","state","passedId","current","pageSize","total","minHeight","width","window","back","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Table, PageHeader, Button} from 'antd';\nimport FAKE_DATA from \"constants/fakeData\";\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index';\n// components\nexport default function ExistingProject() {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const columns = TableHeadersUtil.projectTable;\n    const data = FAKE_DATA.LIST_OF_PROJECTS;\n\n    const [selectedRow, setSelectedRow] = useState(null);\n\n    const rowSelection = {\n        onChange: (selectedRowKeys, selectedRows) => {\n          setSelectedRow(data.filter(x => x.key === selectedRowKeys));\n        },\n        getCheckboxProps: (record) => ({\n          disabled: record.name === 'Disabled User',\n          // Column configuration not to be checked\n          name: record.name,\n        }),\n    };\n\n    const handleTableChange = (pagination, filters, sorter) => {\n        // this.fetch({\n        //   sortField: sorter.field,\n        //   sortOrder: sorter.order,\n        //   pagination,\n        //   ...filters,\n        // });\n    };\n    \n    const [pagination, setPagination] = useState({});\n\n    const openProject = (e) => {\n        e.preventDefault();\n        // dispatch(allActions.authActions.setUserProject(FAKE_DATA.projectData));\n        const projectId = '1';\n        history.push({\n            pathname: '/admin/dashboard',\n            search: '?projectId=' + projectId,\n            state: { passedId: projectId }\n        });\n    }\n\n    useEffect(() => {\n        setPagination({\n            current: 1,\n            pageSize: 5,\n            total: 10,\n        })\n    }, [])\n\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div style={{width: '1100px'}}>\n                <PageHeader\n                    ghost={false}\n                    onBack={() => window.history.back()}\n                    title=\"Select a project to continue\"\n                    extra={[\n                        <Button\n                            key=\"1\"\n                            type=\"primary\"\n                            disabled={selectedRow ? false : true}\n                            onClick={e => openProject(e)}\n                        >\n                            Next\n                        </Button>,\n                    ]}\n                    >\n                </PageHeader>\n                    <Card>\n                        <Table\n                            rowSelection={{\n                                type: 'radio',\n                                ...rowSelection,\n                            }}\n                            pagination={pagination}\n                            columns={columns}\n                            dataSource={data}\n                            onChange={handleTableChange}\n                        />\n                    </Card>\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}