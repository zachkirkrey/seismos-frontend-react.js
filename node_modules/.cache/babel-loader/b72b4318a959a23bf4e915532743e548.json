{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/layouts/Admin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport routes from \"routes/routes.js\"; // components\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport ENUMS from \"constants/appEnums\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Admin(props) {\n  _s();\n\n  const [noSidebarLayout, setNoSidebarLayout] = useState(false);\n\n  const getRoutes = routes => {\n    // if (!props.isAuthenticated) {\n    //   return <Redirect to={{\n    //       pathname: '/auth/login',\n    //       state: { from: props.location }\n    //     }}\n    //   />\n    // }\n    console.log(\"asd\");\n    return routes.map((prop, key) => {\n      if (prop.layout === ENUMS.ROUTES.ADMIN) {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: prop.layout + prop.path,\n          component: prop.component\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this);\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (path.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n\n    return \"Brand\";\n  };\n\n  useEffect(() => {\n    console.log(props.location.pathname);\n    setNoSidebarLayout(true);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative md:ml-64 bg-blueGray-100\",\n      children: [!noSidebarLayout && /*#__PURE__*/_jsxDEV(AdminNavbar, { ...props,\n        brandText: getBrandText(props.location.pathname)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [getRoutes(routes), /*#__PURE__*/_jsxDEV(Redirect, {\n          from: \"*\",\n          to: \"/admin/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Admin, \"2byB7w+rmCXSUe2b02szx9eHH40=\");\n\n_c = Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/layouts/Admin.js"],"names":["React","useEffect","useState","Switch","Route","Redirect","routes","AdminNavbar","Sidebar","ENUMS","Admin","props","noSidebarLayout","setNoSidebarLayout","getRoutes","console","log","map","prop","key","layout","ROUTES","ADMIN","path","component","getBrandText","i","length","indexOf","name","location","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CACA;;AAEA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAEnC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMY,SAAS,GAAIR,MAAD,IAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,WAAOV,MAAM,CAACW,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/B,UAAID,IAAI,CAACE,MAAL,KAAgBX,KAAK,CAACY,MAAN,CAAaC,KAAjC,EAAwC;AACtC,4BACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAEJ,IAAI,CAACE,MAAL,GAAcF,IAAI,CAACK,IAD3B;AAEE,UAAA,SAAS,EAAEL,IAAI,CAACM;AAFlB,WAGOL,GAHP;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARD,MAQO;AACL,eAAO,IAAP;AACD;AACF,KAZM,CAAP;AAaD,GAtBD;;AAwBA,QAAMM,YAAY,GAAIF,IAAD,IAAU;AAC7B,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,MAAM,CAACqB,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,UACEH,IAAI,CAACK,OAAL,CACEtB,MAAM,CAACoB,CAAD,CAAN,CAAUN,MAAV,GAAmBd,MAAM,CAACoB,CAAD,CAAN,CAAUH,IAD/B,MAEM,CAAC,CAHT,EAIE;AACA,eAAOjB,MAAM,CAACoB,CAAD,CAAN,CAAUG,IAAjB;AACD;AACF;;AACD,WAAO,OAAP;AACD,GAXD;;AAaA5B,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACmB,QAAN,CAAeC,QAA3B;AACAlB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAHQ,EAGN,CAACF,KAAD,CAHM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,iBAEI,CAACC,eAAD,iBACG,QAAC,WAAD,OACGD,KADH;AAED,QAAA,SAAS,EAAEc,YAAY,CAACd,KAAK,CAACmB,QAAN,CAAeC,QAAhB;AAFtB;AAAA;AAAA;AAAA;AAAA,cAHP,eASE,QAAC,MAAD;AAAA,mBACGjB,SAAS,CAACR,MAAD,CADZ,eAEE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,GAAf;AAAmB,UAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAmBD;;GAhEuBI,K;;KAAAA,K","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport routes from \"routes/routes.js\";\n// components\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport ENUMS from \"constants/appEnums\";\n\nexport default function Admin(props) {\n\n  const [noSidebarLayout, setNoSidebarLayout] = useState(false);\n\n  const getRoutes = (routes) => {\n    // if (!props.isAuthenticated) {\n    //   return <Redirect to={{\n    //       pathname: '/auth/login',\n    //       state: { from: props.location }\n    //     }}\n    //   />\n    // }\n    console.log(\"asd\")\n    return routes.map((prop, key) => {\n      if (prop.layout === ENUMS.ROUTES.ADMIN) {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        path.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  useEffect(() => {\n    console.log(props.location.pathname)\n    setNoSidebarLayout(true);\n  }, [props])\n  return (\n    <>\n      <Sidebar />\n      <div className=\"relative md:ml-64 bg-blueGray-100\">\n        {\n          !noSidebarLayout\n          && <AdminNavbar \n            {...props}\n            brandText={getBrandText(props.location.pathname)}\n          />\n        }\n        {/* Header */}\n        <Switch>\n          {getRoutes(routes)}\n          <Redirect from=\"*\" to=\"/admin/dashboard\" />\n        </Switch>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}