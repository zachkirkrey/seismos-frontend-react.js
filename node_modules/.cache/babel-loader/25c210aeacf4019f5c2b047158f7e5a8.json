{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Modal/FileUploadModal.js\";\nimport React from 'react';\nimport { Upload, Modal, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileUploadModal(props) {\n  const {\n    Dragger\n  } = Upload;\n  const draggerModalProps = {\n    name: 'file',\n    multiple: true,\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n\n    onChange(info) {\n      const {\n        status\n      } = info.file;\n\n      if (status !== 'uploading') {\n        console.log(info, info.file, info.fileList);\n      }\n\n      if (status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully.`);\n        props.handleOk();\n      } else if (status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    },\n\n    onDrop(e) {\n      console.log('Dropped files', e.dataTransfer.files);\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Upload file\",\n    visible: props.isModalVisible,\n    onOk: props.handleOk,\n    onCancel: props.handleCancel,\n    footer: null,\n    children: /*#__PURE__*/_jsxDEV(Dragger, { ...draggerModalProps,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-text\",\n        children: \"Click or drag file to this area to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-hint\",\n        children: \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = FileUploadModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploadModal\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Modal/FileUploadModal.js"],"names":["React","Upload","Modal","message","InboxOutlined","FileUploadModal","props","Dragger","draggerModalProps","name","multiple","action","onChange","info","status","file","console","log","fileList","success","handleOk","error","onDrop","e","dataTransfer","files","isModalVisible","handleCancel"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,QAAsC,MAAtC;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAcN,MAApB;AACA,QAAMO,iBAAiB,GAAG;AACtBC,IAAAA,IAAI,EAAE,MADgB;AAEtBC,IAAAA,QAAQ,EAAE,IAFY;AAGtBC,IAAAA,MAAM,EAAE,kDAHc;;AAItBC,IAAAA,QAAQ,CAACC,IAAD,EAAO;AACX,YAAM;AAAEC,QAAAA;AAAF,UAAaD,IAAI,CAACE,IAAxB;;AACA,UAAID,MAAM,KAAK,WAAf,EAA4B;AACxBE,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBA,IAAI,CAACE,IAAvB,EAA6BF,IAAI,CAACK,QAAlC;AACH;;AACD,UAAIJ,MAAM,KAAK,MAAf,EAAuB;AACnBX,QAAAA,OAAO,CAACgB,OAAR,CAAiB,GAAEN,IAAI,CAACE,IAAL,CAAUN,IAAK,8BAAlC;AACAH,QAAAA,KAAK,CAACc,QAAN;AACH,OAHD,MAGO,IAAIN,MAAM,KAAK,OAAf,EAAwB;AAC3BX,QAAAA,OAAO,CAACkB,KAAR,CAAe,GAAER,IAAI,CAACE,IAAL,CAAUN,IAAK,sBAAhC;AACH;AACJ,KAfqB;;AAgBtBa,IAAAA,MAAM,CAACC,CAAD,EAAI;AACNP,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BM,CAAC,CAACC,YAAF,CAAeC,KAA5C;AACH;;AAlBqB,GAA1B;AAqBA,sBACI,QAAC,KAAD;AAAO,IAAA,KAAK,EAAC,aAAb;AAA2B,IAAA,OAAO,EAAEnB,KAAK,CAACoB,cAA1C;AAA0D,IAAA,IAAI,EAAEpB,KAAK,CAACc,QAAtE;AAAgF,IAAA,QAAQ,EAAEd,KAAK,CAACqB,YAAhG;AAA8G,IAAA,MAAM,EAAE,IAAtH;AAAA,2BACI,QAAC,OAAD,OAAanB,iBAAb;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA,+BACA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;KArCuBH,e","sourcesContent":["import React from 'react';\nimport { Upload, Modal, message} from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\n\nexport default function FileUploadModal(props) {\n    const { Dragger } = Upload;\n    const draggerModalProps = {\n        name: 'file',\n        multiple: true,\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        onChange(info) {\n            const { status } = info.file;\n            if (status !== 'uploading') {\n                console.log(info, info.file, info.fileList);\n            }\n            if (status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully.`);\n                props.handleOk();\n            } else if (status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        },\n        onDrop(e) {\n            console.log('Dropped files', e.dataTransfer.files);\n        },\n    };\n\n    return (\n        <Modal title=\"Upload file\" visible={props.isModalVisible} onOk={props.handleOk} onCancel={props.handleCancel} footer={null}>\n            <Dragger {...draggerModalProps}>\n                <p className=\"ant-upload-drag-icon\">\n                <InboxOutlined />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                <p className=\"ant-upload-hint\">\n                    Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n                    band files\n                </p>\n            </Dragger>\n        </Modal>\n    );\n}"]},"metadata":{},"sourceType":"module"}