{"ast":null,"code":"const getNewValue = (values, prevValue, fieldIndex, index) => {\n  if (index >= fieldIndex) {\n    return values[index] ? values[index] : prevValue;\n  } else {\n    return prevValue;\n  }\n};\n\nconst setClipboardValues = (fields, values, fieldIndex) => {\n  let i = -1;\n  let newFieldValues = {};\n  Object.keys(fields).map((field_key, index) => {\n    console.log(values, field_key, fields[field_key], fieldIndex, index);\n    newFieldValues = { ...newFieldValues,\n      field_key: getNewValue(values, fields[field_key], fieldIndex, index)\n    };\n    return field_key;\n  });\n  return newFieldValues; // return {\n  //     ...fields,\n  //     job_name: getNewValue(values, ++i, fields['job_name'], index, 1),\n  //     pad_name: getNewValue(values, ++i, fields['pad_name'], index, 2),\n  //     job_type: getNewValue(values, ++i, fields['job_type'], index, 3),\n  //     pad_id: getNewValue(values, ++i, fields['pad_id'], index, 4),\n  //     job_id: getNewValue(values, ++i, fields['job_id'], index, 5),\n  //     client_name: getNewValue(values, ++i, fields['client_name'], index, 6),\n  //     afe_number: getNewValue(values, ++i, fields['afe_number'], index, 7),\n  //     customer_field_rep: getNewValue(values, ++i, fields['customer_field_rep'], index, 8),\n  //     country: getNewValue(values, ++i, fields['country'], index, 9),\n  //     rep_contact: getNewValue(values, ++i, fields['rep_contact'], index, 10),\n  //     basin: getNewValue(values, ++i, fields['basin'], index, 11),\n  //     operator: getNewValue(values, ++i, fields['operator'], index, 12),\n  //     state: getNewValue(values, ++i, fields['state'], index, 13),\n  //     service_company: getNewValue(values, ++i, fields['service_company'], index, 14),\n  //     start_date: getNewValue(values, ++i, fields['start_date'], index, 15),\n  //     wireline_company: getNewValue(values, ++i, fields['wireline_company'], index, 16),\n  // }\n};\n\nconst ProjectUtil = {\n  setClipboardValues\n};\nexport default ProjectUtil;","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/util/ProjectUtil.js"],"names":["getNewValue","values","prevValue","fieldIndex","index","setClipboardValues","fields","i","newFieldValues","Object","keys","map","field_key","console","log","ProjectUtil"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,MAAD,EAASC,SAAT,EAAoBC,UAApB,EAAgCC,KAAhC,KAA0C;AAC1D,MAAGA,KAAK,IAAID,UAAZ,EAAwB;AACpB,WAAOF,MAAM,CAACG,KAAD,CAAN,GAAgBH,MAAM,CAACG,KAAD,CAAtB,GAAgCF,SAAvC;AACH,GAFD,MAEO;AACH,WAAOA,SAAP;AACH;AACJ,CAND;;AAQA,MAAMG,kBAAkB,GAAG,CAACC,MAAD,EAASL,MAAT,EAAiBE,UAAjB,KAAgC;AACvD,MAAII,CAAC,GAAG,CAAC,CAAT;AACA,MAAIC,cAAc,GAAG,EAArB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,GAApB,CAAwB,CAACC,SAAD,EAAYR,KAAZ,KAAsB;AAC1CS,IAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ,EAAoBW,SAApB,EAA+BN,MAAM,CAACM,SAAD,CAArC,EAAkDT,UAAlD,EAA8DC,KAA9D;AACAI,IAAAA,cAAc,GAAG,EACb,GAAGA,cADU;AAEbI,MAAAA,SAAS,EAAEZ,WAAW,CAACC,MAAD,EAASK,MAAM,CAACM,SAAD,CAAf,EAA4BT,UAA5B,EAAwCC,KAAxC;AAFT,KAAjB;AAIA,WAAOQ,SAAP;AACH,GAPD;AAQA,SAAOJ,cAAP,CAXuD,CAYvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA/BD;;AAiCA,MAAMO,WAAW,GAAG;AAChBV,EAAAA;AADgB,CAApB;AAIA,eAAeU,WAAf","sourcesContent":["const getNewValue = (values, prevValue, fieldIndex, index) => {\n    if(index >= fieldIndex) {\n        return values[index] ? values[index] : prevValue;\n    } else {\n        return prevValue;\n    }\n}\n\nconst setClipboardValues = (fields, values, fieldIndex) => {\n    let i = -1;\n    let newFieldValues = {};\n    Object.keys(fields).map((field_key, index) => {\n        console.log(values, field_key, fields[field_key], fieldIndex, index)\n        newFieldValues = {\n            ...newFieldValues,\n            field_key: getNewValue(values, fields[field_key], fieldIndex, index),\n        }\n        return field_key;\n    });\n    return newFieldValues;\n    // return {\n    //     ...fields,\n    //     job_name: getNewValue(values, ++i, fields['job_name'], index, 1),\n    //     pad_name: getNewValue(values, ++i, fields['pad_name'], index, 2),\n    //     job_type: getNewValue(values, ++i, fields['job_type'], index, 3),\n    //     pad_id: getNewValue(values, ++i, fields['pad_id'], index, 4),\n    //     job_id: getNewValue(values, ++i, fields['job_id'], index, 5),\n    //     client_name: getNewValue(values, ++i, fields['client_name'], index, 6),\n    //     afe_number: getNewValue(values, ++i, fields['afe_number'], index, 7),\n    //     customer_field_rep: getNewValue(values, ++i, fields['customer_field_rep'], index, 8),\n    //     country: getNewValue(values, ++i, fields['country'], index, 9),\n    //     rep_contact: getNewValue(values, ++i, fields['rep_contact'], index, 10),\n    //     basin: getNewValue(values, ++i, fields['basin'], index, 11),\n    //     operator: getNewValue(values, ++i, fields['operator'], index, 12),\n    //     state: getNewValue(values, ++i, fields['state'], index, 13),\n    //     service_company: getNewValue(values, ++i, fields['service_company'], index, 14),\n    //     start_date: getNewValue(values, ++i, fields['start_date'], index, 15),\n    //     wireline_company: getNewValue(values, ++i, fields['wireline_company'], index, 16),\n    // }\n}\n\nconst ProjectUtil = {\n    setClipboardValues\n}\n\nexport default ProjectUtil;"]},"metadata":{},"sourceType":"module"}