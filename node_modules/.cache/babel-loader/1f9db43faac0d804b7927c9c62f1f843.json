{"ast":null,"code":"import _objectSpread from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import config from\"config\";import axios from\"axiosConfig\";import Auth from\"layouts/Auth.js\";import Admin from\"layouts/Admin.js\";import ENUMS from\"constants/appEnums\";import{useDispatch}from\"react-redux\";import allActions from'redux/actions/index';import{AppContext}from\"util/ContextUtil\";import React,{useState,useEffect}from\"react\";import NotFound from\"components/NotFound/NotFound\";import{useToasts}from'react-toast-notifications';import{BrowserRouter,Route,Switch,Redirect}from\"react-router-dom\";import FAKE_DATA from\"constants/fakeData\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Application(){var dispatch=useDispatch();var _useToasts=useToasts(),addToast=_useToasts.addToast;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAuthenticated=_useState2[0],userHasAuthenticated=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isAuthenticating=_useState4[0],setIsAuthenticating=_useState4[1];useEffect(function(){var onLoad=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(allActions.authActions.setUserProject(FAKE_DATA.projectData));if(localStorage.getItem('JWT')){axios.get(config.API_URL+ENUMS.API_ROUTES.AUTH_STATUS).then(function(res){dispatch(allActions.authActions.setUserState(res.data.user));dispatch(allActions.authActions.setUserProject(res.data.project));userHasAuthenticated(true);setIsAuthenticating(false);}).catch(function(error){userHasAuthenticated(false);setIsAuthenticating(false);if(error.response){if(error.response.data&&error.response.data.message==='jwt expired'){localStorage.removeItem('JWT');addToast(\"Your login token has expired. Please login again!\",{appearance:'info'});console.error(error.response.data.message);}else{// TODO: remove the comments\n// addToast(\n//     error.response.data ? \n//         error.response.data.message : \n//         \"Failed to fetch user details. Please login again!\", \n//     { \n//         appearance: 'error',\n//         autoDismiss: true\n//     }\n// );\n}}});}else{setIsAuthenticating(false);}case 2:case\"end\":return _context.stop();}}},_callee);}));return function onLoad(){return _ref.apply(this,arguments);};}();onLoad();},[addToast,dispatch]);return/*#__PURE__*/_jsx(_Fragment,{children:!isAuthenticating&&/*#__PURE__*/_jsx(AppContext.Provider,{value:{isAuthenticated:isAuthenticated,userHasAuthenticated:userHasAuthenticated},children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:ENUMS.ROUTES.ADMIN,render:function render(props){return/*#__PURE__*/_jsx(Admin,_objectSpread(_objectSpread({},props),{},{isAuthenticated:isAuthenticated}));}}),/*#__PURE__*/_jsx(Route,{path:ENUMS.ROUTES.AUTH,render:function render(props){return/*#__PURE__*/_jsx(Auth,_objectSpread(_objectSpread({},props),{},{isAuthenticated:isAuthenticated}));}}),/*#__PURE__*/_jsx(Redirect,{from:\"/\",to:\"/auth/login\"}),/*#__PURE__*/_jsx(Route,{render:function render(props){return/*#__PURE__*/_jsx(NotFound,_objectSpread({},props));}})]})})})});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/app.js"],"names":["config","axios","Auth","Admin","ENUMS","useDispatch","allActions","AppContext","React","useState","useEffect","NotFound","useToasts","BrowserRouter","Route","Switch","Redirect","FAKE_DATA","Application","dispatch","addToast","isAuthenticated","userHasAuthenticated","isAuthenticating","setIsAuthenticating","onLoad","authActions","setUserProject","projectData","localStorage","getItem","get","API_URL","API_ROUTES","AUTH_STATUS","then","res","setUserState","data","user","project","catch","error","response","message","removeItem","appearance","console","ROUTES","ADMIN","props","AUTH"],"mappings":"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","sourcesContent":["import config from \"config\";\nimport axios from \"axiosConfig\";\nimport Auth from \"layouts/Auth.js\";\nimport Admin from \"layouts/Admin.js\";\nimport ENUMS from \"constants/appEnums\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index';\nimport { AppContext } from \"util/ContextUtil\";\nimport React, { useState, useEffect } from \"react\";\nimport NotFound from \"components/NotFound/NotFound\";\nimport { useToasts } from 'react-toast-notifications';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport FAKE_DATA from \"constants/fakeData\";\n\nexport default function Application () {\n    const dispatch = useDispatch();\n    const { addToast } = useToasts();\n\n    const [isAuthenticated, userHasAuthenticated] = useState(false);\n    const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n    useEffect(() => {\n        const onLoad = async () => {\n            dispatch(allActions.authActions.setUserProject(FAKE_DATA.projectData));\n            if (localStorage.getItem('JWT')) {\n                axios.get(config.API_URL + ENUMS.API_ROUTES.AUTH_STATUS)\n                .then(res => {\n                    dispatch(allActions.authActions.setUserState(res.data.user));\n                    dispatch(allActions.authActions.setUserProject(res.data.project));\n                    userHasAuthenticated(true);\n                    setIsAuthenticating(false);\n                })\n                .catch(error => {\n                    userHasAuthenticated(false);\n                    setIsAuthenticating(false);\n                    if (error.response) {\n                        if (error.response.data && error.response.data.message === 'jwt expired') {\n                            localStorage.removeItem('JWT');\n                            addToast(\"Your login token has expired. Please login again!\", { appearance: 'info' });\n                            console.error(error.response.data.message);\n                        }\n                        else {\n                            // TODO: remove the comments\n                            // addToast(\n                            //     error.response.data ? \n                            //         error.response.data.message : \n                            //         \"Failed to fetch user details. Please login again!\", \n                            //     { \n                            //         appearance: 'error',\n                            //         autoDismiss: true\n                            //     }\n                            // );\n                        }\n                        \n                    }\n                })\n            }\n            else {\n                setIsAuthenticating(false);\n            }\n        }      \n        onLoad();\n    }, [addToast, dispatch]);\n  \n    return (\n        <>\n            { !isAuthenticating &&\n            <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route path={ENUMS.ROUTES.ADMIN} render={props => <Admin {...props} isAuthenticated={isAuthenticated} />} />\n                        <Route path={ENUMS.ROUTES.AUTH} render={props => <Auth {...props} isAuthenticated={isAuthenticated} />} />\n                        {/* \n                        // TODO: remove the comments\n                        <Redirect from=\"/\" to=\"/auth/home\" /> \n                        */} \n                        <Redirect from=\"/\" to=\"/auth/login\" />\n                        <Route render={props => <NotFound {...props} />} />\n                    </Switch>\n                </BrowserRouter>\n            </AppContext.Provider>\n            }\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}