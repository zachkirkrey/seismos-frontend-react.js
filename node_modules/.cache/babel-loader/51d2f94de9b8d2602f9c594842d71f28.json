{"ast":null,"code":"import _regeneratorRuntime from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import config from\"config\";import axios from\"axiosConfig\";import Auth from\"layouts/Auth.js\";import Admin from\"layouts/Admin.js\";import ENUMS from\"constants/appEnums\";import{useDispatch}from\"react-redux\";import allActions from'redux/actions/index';import{AppContext}from\"util/ContextUtil\";import React,{useState,useEffect}from\"react\";import NotFound from\"components/NotFound/NotFound\";import{useToasts}from'react-toast-notifications';import{BrowserRouter,Route,Switch,Redirect,useHistory}from\"react-router-dom\";import FAKE_DATA from\"constants/fakeData\";import HttpUtil from\"util/HttpUtil\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Application(){var dispatch=useDispatch();var _useToasts=useToasts(),addToast=_useToasts.addToast;var history=useHistory();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAuthenticated=_useState2[0],userHasAuthenticated=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isAuthenticating=_useState4[0],setIsAuthenticating=_useState4[1];var logOutUser=function logOutUser(){userHasAuthenticated(false);dispatch(allActions.authActions.userLoggedOut());localStorage.removeItem('JWT');history.push('/auth/login');};/**\n     * Method to save user data in redux store and set local storage with JWT\n     * @param {Object} data \n     */var saveUserState=function saveUserState(data){console.log(data,'here');userHasAuthenticated(true);dispatch(allActions.authActions.setUserState(data.user));dispatch(allActions.authActions.setUserProjectIds(data.project_ids));};useEffect(function(){var onLoad=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(localStorage.getItem('JWT')){axios.get(config.API_URL+ENUMS.API_ROUTES.AUTH_STATUS,_objectSpread({},HttpUtil.adminHttpHeaders())).then(function(res){saveUserState(res.data.data);userHasAuthenticated(true);setIsAuthenticating(false);}).catch(function(error){setIsAuthenticating(false);if(error.response){// logOutUser();\n}});}else{setIsAuthenticating(false);}case 1:case\"end\":return _context.stop();}}},_callee);}));return function onLoad(){return _ref.apply(this,arguments);};}();onLoad();},[addToast,dispatch]);return/*#__PURE__*/_jsx(_Fragment,{children:!isAuthenticating&&/*#__PURE__*/_jsx(AppContext.Provider,{value:{isAuthenticated:isAuthenticated,userHasAuthenticated:userHasAuthenticated},children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:ENUMS.ROUTES.ADMIN,render:function render(props){return/*#__PURE__*/_jsx(Admin,_objectSpread(_objectSpread({},props),{},{isAuthenticated:isAuthenticated}));}}),/*#__PURE__*/_jsx(Route,{path:ENUMS.ROUTES.AUTH,render:function render(props){return/*#__PURE__*/_jsx(Auth,_objectSpread(_objectSpread({},props),{},{isAuthenticated:isAuthenticated}));}}),/*#__PURE__*/_jsx(Redirect,{from:\"/\",to:\"/auth/login\"}),/*#__PURE__*/_jsx(Route,{render:function render(props){return/*#__PURE__*/_jsx(NotFound,_objectSpread({},props));}})]})})})});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/app.js"],"names":["config","axios","Auth","Admin","ENUMS","useDispatch","allActions","AppContext","React","useState","useEffect","NotFound","useToasts","BrowserRouter","Route","Switch","Redirect","useHistory","FAKE_DATA","HttpUtil","Application","dispatch","addToast","history","isAuthenticated","userHasAuthenticated","isAuthenticating","setIsAuthenticating","logOutUser","authActions","userLoggedOut","localStorage","removeItem","push","saveUserState","data","console","log","setUserState","user","setUserProjectIds","project_ids","onLoad","getItem","get","API_URL","API_ROUTES","AUTH_STATUS","adminHttpHeaders","then","res","catch","error","response","ROUTES","ADMIN","props","AUTH"],"mappings":"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","sourcesContent":["import config from \"config\";\nimport axios from \"axiosConfig\";\nimport Auth from \"layouts/Auth.js\";\nimport Admin from \"layouts/Admin.js\";\nimport ENUMS from \"constants/appEnums\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index';\nimport { AppContext } from \"util/ContextUtil\";\nimport React, { useState, useEffect } from \"react\";\nimport NotFound from \"components/NotFound/NotFound\";\nimport { useToasts } from 'react-toast-notifications';\nimport { BrowserRouter, Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport FAKE_DATA from \"constants/fakeData\";\nimport HttpUtil from \"util/HttpUtil\";\n\nexport default function Application () {\n    const dispatch = useDispatch();\n    const { addToast } = useToasts();\n    const history = useHistory();\n\n    const [isAuthenticated, userHasAuthenticated] = useState(false);\n    const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n    const logOutUser = () => {\n        userHasAuthenticated(false);\n        dispatch(allActions.authActions.userLoggedOut());\n        localStorage.removeItem('JWT');\n        history.push('/auth/login');\n    }\n\n    /**\n     * Method to save user data in redux store and set local storage with JWT\n     * @param {Object} data \n     */\n     const saveUserState = (data) => {\n        console.log(data, 'here');\n        userHasAuthenticated(true);\n        dispatch(allActions.authActions.setUserState(data.user));\n        dispatch(allActions.authActions.setUserProjectIds(data.project_ids));\n    }\n\n\n    useEffect(() => {\n        const onLoad = async () => {\n            if (localStorage.getItem('JWT')) {\n                axios.get(config.API_URL + ENUMS.API_ROUTES.AUTH_STATUS,\n                {\n                    ...HttpUtil.adminHttpHeaders()\n                })\n                .then(res => {\n                    saveUserState(res.data.data);\n                    userHasAuthenticated(true);\n                    setIsAuthenticating(false);\n                })\n                .catch(error => {\n                    setIsAuthenticating(false);\n                    if (error.response) {\n                        // logOutUser();\n                    }\n                })\n            }\n            else {\n                setIsAuthenticating(false);\n            }\n        }      \n        onLoad();\n    }, [addToast, dispatch]);\n  \n    return (\n        <>\n            { !isAuthenticating &&\n            <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route path={ENUMS.ROUTES.ADMIN} render={props => <Admin {...props} isAuthenticated={isAuthenticated} />} />\n                        <Route path={ENUMS.ROUTES.AUTH} render={props => <Auth {...props} isAuthenticated={isAuthenticated} />} />\n                        {/* \n                        // TODO: remove the comments\n                        <Redirect from=\"/\" to=\"/auth/home\" /> \n                        */} \n                        <Redirect from=\"/\" to=\"/auth/login\" />\n                        <Route render={props => <NotFound {...props} />} />\n                    </Switch>\n                </BrowserRouter>\n            </AppContext.Provider>\n            }\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}