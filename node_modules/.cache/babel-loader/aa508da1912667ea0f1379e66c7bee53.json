{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Navbars/AdminNavbar.js\",\n    _s = $RefreshSig$();\n\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport { Layout, Menu } from 'antd';\nimport ENUMS from \"constants/appEnums\";\nimport allActions from \"redux/actions\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { createPopper } from \"@popperjs/core\";\nimport { useAppContext } from \"util/ContextUtil\";\nimport React, { createRef, useState } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Header\n} = Layout;\nexport default function Navbar(props) {\n  _s();\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    addToast\n  } = useToasts();\n  const {\n    userHasAuthenticated\n  } = useAppContext();\n\n  const logOutUser = data => {\n    userHasAuthenticated(false);\n    dispatch(allActions.authActions.userLoggedOut());\n    localStorage.removeItem('JWT');\n    history.push('/auth/login');\n    addToast(data.message, {\n      appearance: 'success',\n      autoDismiss: true\n    });\n  };\n\n  const handleLogout = () => {\n    logOutUser({\n      message: 'Logged out successfully.'\n    });\n    axios.get(config.API_URL + ENUMS.API_ROUTES.AUTH_LOGOUT).then(res => {\n      if (res.status === 200) {\n        logOutUser(res.data);\n      } else {\n        console.error(\"User is not logged out successfully\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const handleMenuClick = e => {\n    if (e.key == \"logout\") {\n      handleLogout();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      children: [props.withLogo ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-wo-sidebar\",\n        children: \"Seismos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this) : '', /*#__PURE__*/_jsxDEV(Menu, {\n        theme: \"dark\",\n        mode: \"horizontal\",\n        className: \"justify-end\",\n        onClick: e => handleMenuClick(e),\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: `Account Settings`\n        }, 'account_settings', false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: `Log out`\n        }, 'logout', false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Navbar, \"jDoV7aKNft6frxcamwRBx4gJJhY=\", false, function () {\n  return [useHistory, useDispatch, useToasts, useAppContext];\n});\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Navbars/AdminNavbar.js"],"names":["config","axios","Layout","Menu","ENUMS","allActions","useHistory","useDispatch","createPopper","useAppContext","React","createRef","useState","useToasts","Header","Navbar","props","history","dispatch","addToast","userHasAuthenticated","logOutUser","data","authActions","userLoggedOut","localStorage","removeItem","push","message","appearance","autoDismiss","handleLogout","get","API_URL","API_ROUTES","AUTH_LOGOUT","then","res","status","console","error","catch","handleMenuClick","e","key","withLogo"],"mappings":"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","sourcesContent":["import config from \"config\";\nimport axios from \"axiosConfig\";\nimport { Layout, Menu } from 'antd';\nimport ENUMS from \"constants/appEnums\";\nimport allActions from \"redux/actions\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { createPopper } from \"@popperjs/core\";\nimport { useAppContext } from \"util/ContextUtil\";\nimport React, { createRef, useState } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\n\nconst { Header} = Layout;\n\nexport default function Navbar(props) {\n    let history = useHistory();\n        const dispatch = useDispatch();\n        const { addToast } = useToasts();\n        const { userHasAuthenticated } = useAppContext();\n\n        const logOutUser = (data) => {\n            userHasAuthenticated(false);\n            dispatch(allActions.authActions.userLoggedOut());\n            localStorage.removeItem('JWT');\n            history.push('/auth/login');\n            \n            addToast(data.message, { \n                appearance: 'success',\n                autoDismiss: true\n            });\n        }\n        const handleLogout = () => {\n            logOutUser({\n                message: 'Logged out successfully.'\n            });\n            axios.get(config.API_URL + ENUMS.API_ROUTES.AUTH_LOGOUT)\n            .then(res => {\n                if (res.status === 200) {\n                    logOutUser(res.data);\n                }\n                else {\n                    console.error(\"User is not logged out successfully\");\n                }\n            })\n            .catch(error => {\n                console.error(error);\n            })\n        }\n\n        const handleMenuClick = (e) => {\n            if(e.key == \"logout\") {\n                handleLogout();\n            }\n        }\n        \n    return (\n        <>\n        {/* Navbar */}\n        <Header>\n            {\n                props.withLogo \n                ? <div className=\"logo-wo-sidebar\">\n                Seismos\n                </div>\n                : ''\n            }\n            <Menu theme=\"dark\" mode=\"horizontal\" className=\"justify-end\" onClick={(e) => handleMenuClick(e)}>\n                <Menu.Item key={'account_settings'}>{`Account Settings`}</Menu.Item>\n                <Menu.Item key={'logout'}>{`Log out`}</Menu.Item>\n            </Menu>\n        </Header>\n        {/* End Navbar */}\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}