{"ast":null,"code":"import _slicedToArray from\"/Users/subodhkalika/test-projects/projects/seismos_application/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axiosConfig\";import config from\"config\";import ENUMS from\"constants/appEnums\";import React,{useState}from\"react\";import{useForm}from\"react-hook-form\";import allActions from'redux/actions/index';import{useAppContext}from\"util/ContextUtil\";import{Link,useHistory,useLocation}from\"react-router-dom\";import{useDispatch}from\"react-redux\";import{Form,Input,Card,Divider,Button,Checkbox,Row,Col}from'antd';import{UserOutlined,LockOutlined}from'@ant-design/icons';import{useToasts}from\"react-toast-notifications\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Login(){var history=useHistory();var location=useLocation();var _useToasts=useToasts(),addToast=_useToasts.addToast;var dispatch=useDispatch();var _useForm=useForm({}),handleSubmit=_useForm.handleSubmit;var _useAppContext=useAppContext(),userHasAuthenticated=_useAppContext.userHasAuthenticated;// state variables\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];/**\n     * Method to make API call for user login\n     */var handleLogin=function handleLogin(data){axios.post(config.API_URL+ENUMS.API_ROUTES.AUTH_LOGIN,{username:data.username,password:data.password}).then(function(res){console.log(res);if(res.status===200&&res.data){saveUserState(res.data.data);}}).catch(function(e){if(data.username==\"bobo\"&&data.password==\"1234\"){saveUserState({token:'test-token',user:{first_name:'Test',last_name:'user'},project:null});}else{addToast(\"Incorrect username or password!\",{appearance:'error'});}console.log(e);});};/**\n     * Method to save user data in redux store and set local storage with JWT\n     * @param {Object} data \n     */var saveUserState=function saveUserState(data){localStorage.setItem('JWT',data.access_token);userHasAuthenticated(true);dispatch(allActions.authActions.setUserState(data.user));dispatch(allActions.authActions.setUserProject(data.project_ids));if(location&&location.state&&location.state.from){console.log('x');history.push({pathname:location.state.from.pathname,search:location.state.from.search,state:location.state.from.state});}else{console.log('y');history.push(ENUMS.ROUTES.ADMIN+ENUMS.ROUTES.PROJECT);}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"container mx-auto px-4 h-full login-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex content-center items-center justify-center h-full\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"w-full lg:w-4/12 px-4\",children:[/*#__PURE__*/_jsx(Card,{className:\"text-center login-header-card\",children:/*#__PURE__*/_jsx(\"img\",{alt:\"seismos logo\",className:\"mx-auto\",src:require(\"assets/img/seismos/seismos_logo_animated.gif\").default})}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"h6\",{className:\"text-blueGray-500 text-sm text-center\",children:\"Log in to Seismos\"}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Form,{name:\"normal_login\",className:\"login-form\",initialValues:{remember:true},onFinish:handleLogin,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"username\",rules:[{required:true,message:'Please input your Username!'}],children:/*#__PURE__*/_jsx(Input,{prefix:/*#__PURE__*/_jsx(UserOutlined,{className:\"site-form-item-icon\"}),placeholder:\"Username\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"password\",rules:[{required:true,message:'Please input your Password!'}],children:/*#__PURE__*/_jsx(Input,{prefix:/*#__PURE__*/_jsx(LockOutlined,{className:\"site-form-item-icon\"}),type:\"password\",placeholder:\"Password\"})}),/*#__PURE__*/_jsx(Row,{gutter:24,className:\"mb-6\",children:/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Form.Item,{name:\"remember\",noStyle:true,children:/*#__PURE__*/_jsx(Checkbox,{children:\"Remember me\"})})})}),/*#__PURE__*/_jsx(Form.Item,{className:\"text-center\",children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",className:\"w-full login-form-button\",children:\"Log in\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap mt-2 relative justify-between\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-1/2\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#pablo\",onClick:function onClick(e){return e.preventDefault();},className:\"text-seismos-primary\",children:\"Forgot password?\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-1/2 text-right\",children:/*#__PURE__*/_jsx(Link,{to:\"/auth/register\",className:\"block text-seismos-primary\",children:\"Create new account\"})})]})]})})})});}","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/auth/Login.js"],"names":["axios","config","ENUMS","React","useState","useForm","allActions","useAppContext","Link","useHistory","useLocation","useDispatch","Form","Input","Card","Divider","Button","Checkbox","Row","Col","UserOutlined","LockOutlined","useToasts","Login","history","location","addToast","dispatch","handleSubmit","userHasAuthenticated","email","setEmail","password","setPassword","handleLogin","data","post","API_URL","API_ROUTES","AUTH_LOGIN","username","then","res","console","log","status","saveUserState","catch","e","token","user","first_name","last_name","project","appearance","localStorage","setItem","access_token","authActions","setUserState","setUserProject","project_ids","state","from","push","pathname","search","ROUTES","ADMIN","PROJECT","require","default","remember","required","message","preventDefault"],"mappings":"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","sourcesContent":["import axios from \"axiosConfig\";\nimport config from \"config\";\nimport ENUMS from \"constants/appEnums\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport allActions from 'redux/actions/index';\nimport { useAppContext } from \"util/ContextUtil\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Input, Card, Divider, Button, Checkbox, Row, Col } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useToasts } from \"react-toast-notifications\";\n\nexport default function Login() {\n    let history = useHistory();\n    let location = useLocation();\n    const { addToast } = useToasts();\n    const dispatch = useDispatch();\n    const { handleSubmit } = useForm({});\n    const { userHasAuthenticated } = useAppContext();\n\n    // state variables\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    /**\n     * Method to make API call for user login\n     */\n    const handleLogin = (data) => {\n        \n        \n        axios.post(config.API_URL + ENUMS.API_ROUTES.AUTH_LOGIN,\n            {\n                username: data.username,\n                password: data.password\n            })\n            .then(res => {\n                console.log(res);\n                if (res.status === 200 && res.data) {\n                    saveUserState(res.data.data);\n                }\n            })\n            .catch(e => {\n                if(data.username == \"bobo\" && data.password == \"1234\") {\n                    saveUserState({\n                        token: 'test-token',\n                        user: {\n                            first_name: 'Test',\n                            last_name: 'user'\n                        },\n                        project: null\n                    })\n                } else {\n                    addToast(\"Incorrect username or password!\", { appearance: 'error' });\n                }\n                console.log(e)\n            });\n    }\n\n    /**\n     * Method to save user data in redux store and set local storage with JWT\n     * @param {Object} data \n     */\n    const saveUserState = (data) => {\n        localStorage.setItem('JWT', data.access_token);\n        userHasAuthenticated(true);\n        dispatch(allActions.authActions.setUserState(data.user));\n        dispatch(allActions.authActions.setUserProject(data.project_ids));\n\n        if (location && location.state && location.state.from) {\n            console.log('x');\n            history.push({\n                pathname: location.state.from.pathname,\n                search: location.state.from.search,\n                state: location.state.from.state\n            });\n        } else {\n            console.log('y');\n            history.push(ENUMS.ROUTES.ADMIN + ENUMS.ROUTES.PROJECT);\n        }\n    }\n\n    return (\n        <>\n            <div className=\"container mx-auto px-4 h-full login-container\">\n                <div className=\"flex content-center items-center justify-center h-full\">\n                    <div className=\"w-full lg:w-4/12 px-4\">\n                        <Card className=\"text-center login-header-card\">\n                            <img alt=\"seismos logo\" className=\"mx-auto\" src={require(\"assets/img/seismos/seismos_logo_animated.gif\").default}></img>\n                        </Card>\n                        <Card>\n                            <h6 className=\"text-blueGray-500 text-sm text-center\">\n                                Log in to Seismos\n                            </h6>\n                            <Divider></Divider>\n                            <Form\n                                name=\"normal_login\"\n                                className=\"login-form\"\n                                initialValues={{\n                                    remember: true,\n                                }}\n                                onFinish={handleLogin}\n                                >\n                                <Form.Item\n                                    name=\"username\"\n                                    rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your Username!',\n                                    },\n                                    ]}\n                                >\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"password\"\n                                    rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your Password!',\n                                    },\n                                    ]}\n                                >\n                                    <Input\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    />\n                                </Form.Item>\n                                <Row gutter={24} className=\"mb-6\">\n                                    <Col span={12}>\n                                        <Form.Item name=\"remember\" noStyle>\n                                            <Checkbox>Remember me</Checkbox>\n                                        </Form.Item>\n                                    </Col>\n                                    \n                                </Row>\n\n                                <Form.Item className=\"text-center\">\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"w-full login-form-button\">\n                                    Log in\n                                    </Button>\n                                    \n                                    \n                                </Form.Item>\n                            </Form>\n                        </Card>\n                        <div className=\"flex flex-wrap mt-2 relative justify-between\">\n                            <div className=\"w-1/2\">\n                                <a\n                                    href=\"#pablo\"\n                                    onClick={(e) => e.preventDefault()}\n                                    className=\"text-seismos-primary\"\n                                >\n                                    Forgot password?\n                                </a>\n                            </div>\n                            <div className=\"w-1/2 text-right\">\n                                <Link to=\"/auth/register\" className=\"block text-seismos-primary\">\n                                    Create new account\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}