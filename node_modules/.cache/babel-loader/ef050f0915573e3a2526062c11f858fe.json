{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/ClientInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ClientInfo(props) {\n  _s();\n\n  const [form] = Form.useForm();\n  const [clientInfoGrid, setClientInfoGrid] = useState([]);\n\n  const getClientInfoGridRow = t => {\n    return t.rows.map(label => {\n      return [{\n        value: label\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }];\n    });\n  };\n\n  const populateClientInfoGrid = () => {\n    setClientInfoGrid(TableHeadersUtil.clientInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n      return rows.concat(getClientInfoGridRow(t));\n    }, []));\n  };\n\n  useState(() => {\n    props.formValues && form.setFieldsValue(props.formValues);\n    populateClientInfoGrid();\n  }, props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"well-volume-grid mb-8\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          columns: TableHeadersUtil.clientInfoFormTableData.columns,\n          grid: clientInfoGrid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"well-volume-estimation-grid mb-8\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          columns: TableHeadersUtil.clientInfoEstimationsFormTableData.columns,\n          grid: clientInfoEstimationsGrid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: e => {\n          props.next();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClientInfo, \"cqAYtYG8N7BokqTREQ43VdLExTA=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = ClientInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientInfo\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/components/Forms/ProjectCreate/ClientInfo.js"],"names":["React","useState","Form","Button","TableHeadersUtil","Grid","ClientInfo","props","form","useForm","clientInfoGrid","setClientInfoGrid","getClientInfoGridRow","t","rows","map","label","value","populateClientInfoGrid","clientInfoFormTableData","grid","reduce","rowIdx","concat","formValues","setFieldsValue","columns","clientInfoEstimationsFormTableData","clientInfoEstimationsGrid","e","next"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAM,CAACC,IAAD,IAASN,IAAI,CAACO,OAAL,EAAf;AAEA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMW,oBAAoB,GAAIC,CAAD,IAAO;AAChC,WAAOA,CAAC,CAACC,IAAF,CAAOC,GAAP,CAAWC,KAAK,IAAI;AACvB,aAAO,CACH;AAAEC,QAAAA,KAAK,EAAED;AAAT,OADG,EAEH;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAFG,EAGH;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAHG,EAIH;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAJG,EAKH;AAAEA,QAAAA,KAAK,EAAE;AAAT,OALG,EAMH;AAAEA,QAAAA,KAAK,EAAE;AAAT,OANG,CAAP;AAQH,KATM,CAAP;AAUH,GAXD;;AAaA,QAAMC,sBAAsB,GAAG,MAAM;AACjCP,IAAAA,iBAAiB,CAACP,gBAAgB,CAACe,uBAAjB,CAAyCC,IAAzC,CAA8CC,MAA9C,CAAqD,CAACP,IAAD,EAAOD,CAAP,EAAUS,MAAV,KAAqB;AACxF,aAAOR,IAAI,CAACS,MAAL,CAAYX,oBAAoB,CAACC,CAAD,CAAhC,CAAP;AACH,KAFiB,EAEf,EAFe,CAAD,CAAjB;AAGH,GAJD;;AAMAZ,EAAAA,QAAQ,CAAC,MAAM;AACXM,IAAAA,KAAK,CAACiB,UAAN,IAAoBhB,IAAI,CAACiB,cAAL,CAAoBlB,KAAK,CAACiB,UAA1B,CAApB;AACAN,IAAAA,sBAAsB;AACzB,GAHO,EAGLX,KAHK,CAAR;AAKA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACI,QAAC,IAAD;AACI,UAAA,OAAO,EAAEH,gBAAgB,CAACe,uBAAjB,CAAyCO,OADtD;AAEI,UAAA,IAAI,EAAEhB;AAFV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,+BACI,QAAC,IAAD;AACI,UAAA,OAAO,EAAEN,gBAAgB,CAACuB,kCAAjB,CAAoDD,OADjE;AAEI,UAAA,IAAI,EAAEE;AAFV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAGC,CAAD,IAAO;AAACtB,UAAAA,KAAK,CAACuB,IAAN;AAAa,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA,kBADJ;AAwBH;;GArDuBxB,U;UACLJ,IAAI,CAACO,O;;;KADAH,U","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\n\nexport default function ClientInfo(props) {\n    const [form] = Form.useForm();\n    \n    const [clientInfoGrid, setClientInfoGrid] = useState([]);\n\n    const getClientInfoGridRow = (t) => {\n        return t.rows.map(label => {\n            return [\n                { value: label },\n                { value: \"\" },\n                { value: \"\" },\n                { value: \"\" },\n                { value: \"\" },\n                { value: \"\" },\n            ]\n        })\n    }\n\n    const populateClientInfoGrid = () => {\n        setClientInfoGrid(TableHeadersUtil.clientInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            return rows.concat(getClientInfoGridRow(t));\n        }, []))\n    }\n\n    useState(() => {\n        props.formValues && form.setFieldsValue(props.formValues)\n        populateClientInfoGrid();\n    }, props);\n\n    return (\n        <>\n            <div className=\"flex\">\n                <div className=\"well-volume-grid mb-8\">\n                    <Grid \n                        columns={TableHeadersUtil.clientInfoFormTableData.columns}\n                        grid={clientInfoGrid}\n                    ></Grid>\n                </div>\n                <div className=\"p-4\"></div>\n                <div className=\"well-volume-estimation-grid mb-8\">\n                    <Grid\n                        columns={TableHeadersUtil.clientInfoEstimationsFormTableData.columns}\n                        grid={clientInfoEstimationsGrid}\n                    ></Grid>\n                </div>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {props.next()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}