{"ast":null,"code":"var _jsxFileName = \"/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/NewProject.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axiosConfig\";\nimport config from \"config\";\nimport ENUMS from \"constants/appEnums\";\nimport React, { useState } from \"react\";\nimport ProjectUtil from \"util/ProjectUtil\";\nimport { Card, PageHeader, Button, Steps } from 'antd';\nimport JobInfo from \"components/Forms/ProjectCreate/JobInfo\";\nimport WellInfo from \"components/Forms/ProjectCreate/WellInfo\";\nimport WellVolume from \"components/Forms/ProjectCreate/WellVolume\";\nimport ClientInfo from \"components/Forms/ProjectCreate/ClientInfo\";\nimport CrewInfo from \"components/Forms/ProjectCreate/CrewInfo\";\nimport Equipment from \"components/Forms/ProjectCreate/Equipment\"; // components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Step\n} = Steps;\nexport default function NewProject() {\n  _s();\n\n  const [current, setCurrent] = useState(0);\n  const [jobInfoValues, setJobInfoValues] = useState(null);\n  const [padInfoValues, setPadInfoValues] = useState(null);\n  const [wellInfoValues, setWellInfoValues] = useState(null);\n  const [wellVolumeValues, setWellVolumeValues] = useState(null);\n  const [wellVolumeEstimationsValues, setWellVolumeEstimationsValues] = useState(null);\n  const [clientInfoValues, setClientInfoValues] = useState(null);\n  const [crewInfoValues, setCrewInfoValues] = useState(null);\n  const [equipmentValues, setEquipmentValues] = useState(null);\n\n  const next = () => {\n    setCurrent(current + 1);\n  };\n\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n\n  const handleCreateProjectFormSubmit = () => {\n    const wellVolumeData = wellVolumeValues ? wellVolumeValues.map(wellVol => {\n      return ProjectUtil.formatFormValuesFromColumnGridData(wellVol);\n    }) : [];\n    const wellVolumeEstimationsData = wellVolumeEstimationsValues ? wellVolumeEstimationsValues.map(wellVolEst => {\n      return ProjectUtil.formatFormValuesFromRowGridData(wellVolEst);\n    }) : [];\n    axios.post(config.API_URL + ENUMS.API_ROUTES.PROJECT_CREATE, {\n      jobInfoValues: ProjectUtil.formatFormValuesFromRowGridData(jobInfoValues),\n      padInfoValues: ProjectUtil.formatFormValuesFromRowGridData(padInfoValues),\n      wellInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(wellInfoValues),\n      wellVolumeValues: wellVolumeData,\n      wellVolumeEstimationsValues: wellVolumeEstimationsData,\n      clientInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(clientInfoValues),\n      crewInfoValues: ProjectUtil.formatFormValuesFromRowGridData(crewInfoValues),\n      equipmentValues: ProjectUtil.formatFormValuesFromRowGridData(equipmentValues)\n    }).then(res => {\n      console.log(res);\n\n      if (res.status === 200 && res.data.success) {// saveUserState(res.data);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const steps = [{\n    title: 'Job Info',\n    content: /*#__PURE__*/_jsxDEV(JobInfo, {\n      next: next,\n      setJobInfoFormValue: setJobInfoValues,\n      setPadInfoFormValue: setPadInfoValues,\n      jobInfoFormValues: jobInfoValues,\n      padInfoFormValues: padInfoValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Well Info',\n    content: /*#__PURE__*/_jsxDEV(WellInfo, {\n      next: next,\n      setFormValue: setWellInfoValues,\n      formValues: wellInfoValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Well Volume',\n    content: /*#__PURE__*/_jsxDEV(WellVolume, {\n      next: next,\n      setWellVolumeFormValue: setWellVolumeValues,\n      setWellVolumeEstimationsFormValue: setWellVolumeEstimationsValues,\n      wellInfoValues: wellInfoValues,\n      wellVolumeFormValues: wellVolumeValues,\n      wellVolumeEstimationsFormValues: wellVolumeEstimationsValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Client Info',\n    content: /*#__PURE__*/_jsxDEV(ClientInfo, {\n      next: next,\n      setFormValue: setClientInfoValues,\n      formValues: clientInfoValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Crew Info',\n    content: /*#__PURE__*/_jsxDEV(CrewInfo, {\n      next: next,\n      setFormValue: setCrewInfoValues,\n      formValues: crewInfoValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 22\n    }, this)\n  }, {\n    title: 'Equipment',\n    content: /*#__PURE__*/_jsxDEV(Equipment, {\n      next: next,\n      setFormValue: setEquipmentValues,\n      formValues: equipmentValues,\n      createProjectSubmit: handleCreateProjectFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 22\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"80vh\"\n      },\n      className: \"flex justify-center items-center bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"1100px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          ghost: false,\n          onBack: () => window.history.back(),\n          title: \"Fill in the information below to create a new project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Steps, {\n            progressDot: true,\n            current: current,\n            children: steps.map(item => /*#__PURE__*/_jsxDEV(Step, {\n              title: item.title,\n              className: \"mb-6\"\n            }, item.title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"steps-content mb-6\",\n            children: steps[current].content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"steps-action flex justify-between\",\n            style: {\n              position: 'absolute',\n              bottom: '48px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: '0 8px'\n              },\n              disabled: current < 1,\n              onClick: () => prev(),\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(NewProject, \"cj41YvOXOS1keJOjqRh6TyW/HBo=\");\n\n_c = NewProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"sources":["/Users/subodhkalika/test-projects/projects/seismos_application/client/src/views/admin/NewProject.js"],"names":["axios","config","ENUMS","React","useState","ProjectUtil","Card","PageHeader","Button","Steps","JobInfo","WellInfo","WellVolume","ClientInfo","CrewInfo","Equipment","Step","NewProject","current","setCurrent","jobInfoValues","setJobInfoValues","padInfoValues","setPadInfoValues","wellInfoValues","setWellInfoValues","wellVolumeValues","setWellVolumeValues","wellVolumeEstimationsValues","setWellVolumeEstimationsValues","clientInfoValues","setClientInfoValues","crewInfoValues","setCrewInfoValues","equipmentValues","setEquipmentValues","next","prev","handleCreateProjectFormSubmit","wellVolumeData","map","wellVol","formatFormValuesFromColumnGridData","wellVolumeEstimationsData","wellVolEst","formatFormValuesFromRowGridData","post","API_URL","API_ROUTES","PROJECT_CREATE","then","res","console","log","status","data","success","catch","e","steps","title","content","minHeight","width","window","history","back","item","position","bottom","margin"],"mappings":"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","sourcesContent":["import axios from \"axiosConfig\";\nimport config from \"config\";\nimport ENUMS from \"constants/appEnums\";\nimport React, { useState } from \"react\";\nimport ProjectUtil from \"util/ProjectUtil\";\nimport { Card, PageHeader, Button, Steps } from 'antd';\nimport JobInfo from \"components/Forms/ProjectCreate/JobInfo\";\nimport WellInfo from \"components/Forms/ProjectCreate/WellInfo\";\nimport WellVolume from \"components/Forms/ProjectCreate/WellVolume\";\nimport ClientInfo from \"components/Forms/ProjectCreate/ClientInfo\";\nimport CrewInfo from \"components/Forms/ProjectCreate/CrewInfo\";\nimport Equipment from \"components/Forms/ProjectCreate/Equipment\";\n\n// components\nconst { Step } = Steps;\n\nexport default function NewProject() {\n    const [current, setCurrent] = useState(0);\n    const [jobInfoValues, setJobInfoValues] = useState(null);\n    const [padInfoValues, setPadInfoValues] = useState(null);\n    const [wellInfoValues, setWellInfoValues] = useState(null);\n    const [wellVolumeValues, setWellVolumeValues] = useState(null);\n    const [wellVolumeEstimationsValues, setWellVolumeEstimationsValues] = useState(null);\n    const [clientInfoValues, setClientInfoValues] = useState(null);\n    const [crewInfoValues, setCrewInfoValues] = useState(null);\n    const [equipmentValues, setEquipmentValues] = useState(null);\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const handleCreateProjectFormSubmit = () => {\n        const wellVolumeData = wellVolumeValues ? wellVolumeValues.map(wellVol => {\n            return ProjectUtil.formatFormValuesFromColumnGridData(wellVol);\n        }) : [];\n        const wellVolumeEstimationsData = wellVolumeEstimationsValues ? wellVolumeEstimationsValues.map(wellVolEst => {\n            return ProjectUtil.formatFormValuesFromRowGridData(wellVolEst);\n        }) : [];\n        axios.post(config.API_URL + ENUMS.API_ROUTES.PROJECT_CREATE,\n            {\n                jobInfoValues: ProjectUtil.formatFormValuesFromRowGridData(jobInfoValues),\n                padInfoValues: ProjectUtil.formatFormValuesFromRowGridData(padInfoValues),\n                wellInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(wellInfoValues),\n                wellVolumeValues: wellVolumeData,\n                wellVolumeEstimationsValues: wellVolumeEstimationsData,\n                clientInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(clientInfoValues),\n                crewInfoValues: ProjectUtil.formatFormValuesFromRowGridData(crewInfoValues),\n                equipmentValues: ProjectUtil.formatFormValuesFromRowGridData(equipmentValues),\n            })\n            .then(res => {\n                console.log(res);\n                if (res.status === 200 && res.data.success) {\n                    // saveUserState(res.data);\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            });\n    }\n\n    const steps = [\n        {\n            title: 'Job Info',\n            content: <JobInfo\n                next={next}\n                setJobInfoFormValue={setJobInfoValues}\n                setPadInfoFormValue={setPadInfoValues}\n                jobInfoFormValues={jobInfoValues} padInfoFormValues={padInfoValues}></JobInfo>\n        },\n        {\n            title: 'Well Info',\n            content: <WellInfo\n                next={next}\n                setFormValue={setWellInfoValues}\n                formValues={wellInfoValues}></WellInfo>\n        },\n        {\n            title: 'Well Volume',\n            content: <WellVolume\n                next={next}\n                setWellVolumeFormValue={setWellVolumeValues}\n                setWellVolumeEstimationsFormValue={setWellVolumeEstimationsValues}\n                wellInfoValues={wellInfoValues}\n                wellVolumeFormValues={wellVolumeValues} wellVolumeEstimationsFormValues={wellVolumeEstimationsValues}></WellVolume>\n        },\n        {\n            title: 'Client Info',\n            content: <ClientInfo\n                next={next}\n                setFormValue={setClientInfoValues}\n                formValues={clientInfoValues}></ClientInfo>\n        },\n        {\n            title: 'Crew Info',\n            content: <CrewInfo\n                next={next}\n                setFormValue={setCrewInfoValues}\n                formValues={crewInfoValues}></CrewInfo>\n        },\n        {\n            title: 'Equipment',\n            content: <Equipment\n                next={next}\n                setFormValue={setEquipmentValues}\n                formValues={equipmentValues}\n                createProjectSubmit={handleCreateProjectFormSubmit}></Equipment>\n        }\n    ];\n\n\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div style={{width: \"1100px\"}}>\n                    <PageHeader\n                        ghost={false}\n                        onBack={() => window.history.back()}\n                        title=\"Fill in the information below to create a new project\"\n                    >\n                    </PageHeader>\n                        <Card>\n                            <Steps progressDot current={current}>\n                                {\n                                    steps.map(item => (\n                                        <Step key={item.title} title={item.title} className=\"mb-6\"/>\n                                    ))\n                                }\n                            </Steps>\n                            <div className=\"steps-content mb-6\">\n                                {steps[current].content}\n                            </div>\n                            <div className=\"steps-action flex justify-between\" style={{position: 'absolute', bottom: '48px'}}>\n                                {\n                                    <Button style={{ margin: '0 8px' }} disabled={current < 1} onClick={() => prev()}>\n                                        Previous\n                                    </Button>\n                                }\n                                {/* {current < steps.length - 1 && (\n                                <Button type=\"primary\" onClick={() => next()}>\n                                    Next\n                                </Button>\n                                )} */}\n                            </div>\n                        </Card>\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}