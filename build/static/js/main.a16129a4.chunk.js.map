{"version":3,"sources":["assets/img/seismos/seismos_logo_animated.gif","redux/actionsTypes.js","redux/reducers/authReducer.js","redux/reducers/rootReducer.js","redux/store.js","config.js","axiosConfig.js","components/NotFound/NotFound.js","constants/appEnums.js","util/HttpUtil.js","constants/appConstants.js","components/Modal/FileUploadModal.js","components/Modal/ConfirmationModal.js","constants/formInitialValues.js","views/admin/DefaultValues.js","util/TableHeaderUtil.js","util/ProjectUtil.js","components/Grid/Grid.js","components/Grid/DataEditor/NumberInput.js","components/Forms/ProjectCreate/JobInfo.js","components/Forms/ProjectCreate/WellInfo.js","components/Forms/ProjectCreate/WellVolume.js","components/Grid/DataEditor/PasswordInput.js","components/Forms/ProjectCreate/ClientInfo.js","components/Grid/DataEditor/SelectEditor.js","components/Forms/ProjectCreate/CrewInfo.js","components/Forms/ProjectCreate/Equipment.js","components/Forms/ProjectCreate/ProjectInfo.js","views/admin/NewProject.js","constants/fakeData.js","redux/actions/authActions.js","redux/actions/index.js","util/ContextUtil.js","routes/routes.js","views/admin/Dashboard.js","views/admin/Project.js","views/admin/ExistingProject.js","views/admin/DataInput.js","views/admin/DailyLog.js","views/admin/TrackingSheet.js","views/admin/OcReport.js","views/auth/Login.js","views/auth/Register.js","views/admin/Acccount.js","components/Navbars/AuthNavbar.js","layouts/Auth.js","components/Navbars/AdminNavbar.js","layouts/Admin.js","app.js","index.js"],"names":["SET_USER_STATE","USER_LOGGED_OUT","SET_USER_PROJECT","SET_USER_C_PROJECT","initialState","user","userProjectIds","project","combineReducers","authReducer","state","action","type","payload","projectIds","store","createStore","rootReducer","composeWithDevTools","config","API_URL","instance","Axios","create","timeout","headers","withCredentials","responseType","maxRedirects","NotFound","className","ENUMS","ROUTES","AUTH","ADMIN","DASHBOARD","PROJECT","LOGIN","REGISTER","PROJECT_EXISTING","PROJECT_NEW","DATA_INPUT","DAILY_LOG","DEFAULT_VALUES","TRACKING_SHEET","OC_REPORT","NOTFOUND","ACCOUNT","API_ROUTES","AUTH_STATUS","AUTH_LOGIN","AUTH_LOGOUT","PROJECT_CREATE","PROJECT_GET","PROJECT_LIST","DATA_INPUT_FILE_UPLOAD","DATA_VIEW_DATA","DAILY_LOG_GET","DEFAULT_VALUE","DEFAULT_VALUE_GET","DEFAULT_VALUE_UPDATE","TRACKING_SHEET_LIST","TRACKING_SHEET_GET","TRACKING_SHEET_STAGE_CREATE","TRACKING_SHEET_CREATE","TRACKING_SHEET_UPDATE","AWS","API_NAME","FORM_FIELDS","PROJECT_NAME","PROJECT_UUID","JOB_INFO","JOB_NAME","JOB_TYPE","JOB_ID","AFE_ID","COUNTRY_NAME","BASIN_NAME","STATE","JOB_START_DATE","JOB_END_DATE","PAD_INFO","PAD_NAME","PAD_ID","CLIENT_NAME","CUSTOMER_FIELD_REP","REP_CONTACT_NUMBER","OPERATOR","SERVICE_COMPANY","WIRELINE_COMPANY","WELL_INFO","WELL_NAME","NO_OF_STAGES","WELL_API","FORMATION","LAT","LONG","EASTING","NORTHING","WELL_VOLUME","TYPE","OD","WT","ID","DEPTH_MD","TOL","WELL_VOLUME_ESTIMATIONS","SURFACE_VOL","BBLS","GALLONS","CLIENT_INFO","CLIENT_USERNAME","TITLE","PASSWORD","ACTION","CREW_INFO","ROLE","NAME","PHONE_NUMBER","EQUIPMENT","TRAILERS_ID","POWERPACK_ID","SOURCE_ID","ACCUMULATOR_ID","HYDROPHONES_ID","PSI_TRANSDUCER_ID","HOTSPOT_ID","HttpUtil","authHttpHeaders","adminHttpHeaders","accessString","localStorage","getItem","response","APP_CONSTANTS","LOGIN_TO_APP_ROUTES","ROUTES_WITHOUT_SIDEBAR","DATA_INPUT_CARDS","title","section","grid","label","focus","color","ROLE_OPTIONS","value","FileUploadModal","props","Dragger","Upload","draggerModalProps","name","multiple","onChange","info","status","file","console","log","fileList","handleOk","message","error","onDrop","e","dataTransfer","files","centered","visible","isModalVisible","onOk","onCancel","handleCancel","footer","InboxOutlined","ConfirmationModal","modalTitle","onClick","footerButtons","cancel_text","data","confirm_text","modalText","FormInitialValues","dynamicFormNestItemValues","bht_f","bht_psi","customer","date","event_occur","field_engineer_days","field_engineer_nights","frac_design","plug_seat_technique","plug_type","seismos_data_collection","stage","perforationIntervalInformationValues","acid","bottom_perf","clusters_number","displacement_vol_bottom","displacement_vol_plug","displacement_vol_top","diverter_type","perf_daiameter","perf_gun_desc","plug_depth","pumped_diverter","spf","top_perf","stageDataValues","Acid_volume_gals","Flush_volume_bbls","Max_prop_Conc_ppa","Slurry_volume_bbls","Total_lbs","Total_clean_fluid_volume_bbls","Total_pad_volume_bbls","Total_sand_lbs","base_fluid_density","base_fluid_type","isip","last_bbls","last_description","last_ppg","max_conc_density","opening_well","second_bbls","second_description","second_ppg","stage_end_time","stage_start_time","third_bbls","third_description","propantFormValues","proppantData","bulk_density","description","specific_gravity","activeDataFormValues","amplitude","frequency","number_of_pulses","offset","periods","post_end_time","post_start_time","pre_end_time","pre_start_time","notesFataFormValues","other_notes","pre_notes","post_notes","defaultValueForm","c1_min","c1_max","q1_min","q1_max","k_min","k_max","model","source","layer","viscosity","desnsity","compressibility","f_low","f_high","new_sample_rate","data_sample_rate","algorithm","grid_density","weighting","wlevexp","loop","method","total_width","tolerence","iterations","company","well","pres","young","overburden","poisson","eta_cp","fluid_t","tect","fluid_density","Diverter_time","met_res","ffkw_correction","k_mpa","nu_lim","perRed","start1","beta_ss","st_lim","biot","shadow","fit_end_point","start2","ng","stage_ques","breaker","poisson_var","poisson_method","stress_shadow","plotraw","skip_losses","use_wns","use_wncuts","fit_iterations","Option","Select","TabPane","Tabs","jobInfoFormTableData","columns","key","width","rows","field","required","padInfoFormTableData","datatype","wellInfoFormTableData","defaultValue","actionColumn","row","wellVolumeFormTableData","wellVolumeEstimationsFormTableData","wellName","colSpan","TableHeadersUtil","clientInfoFormTableData","crewInfoFormTableData","projectTable","dataIndex","render","text","equipmentFormTableData","projectInfoFormTableData","getNumberValue","val","parseFloat","replace","ProjectUtil","setClipboardValues","fields","values","fieldIndex","newFieldValues","counter","Object","keys","map","field_key","index","prevValue","getNewValue","formatFormValuesFromRowGridData","gridValues","fieldVlaues","gridRow","obj","find","fieldValuePair","extend","formatFormValuesFromColumnGridData","fieldValues","col","SheetRenderer","style","background","padding","children","Grid","useState","setColumns","setGrid","useEffect","valueRenderer","cell","sheetRenderer","sheetProps","isCellNavigable","disableEvents","onCellsChanged","changes","gridData","forEach","hasOwnProperty","gridValueChanged","NumberInput","handleChange","bind","this","_input","target","onKeyDown","ref","input","PureComponent","JobInfo","jobInfoGrid","setJobInfoGrid","padInfoGrid","setPadInfoGrid","onDateChange","dateString","newDate","format","newJobInfoGrid","_","cloneDeep","r","Number","handleJobInfoGridChanged","getRow","t","readOnly","dataEditor","startDatecomponent","rowIdx","currentVal","momentDate","moment","endDatecomponent","updatedGridData","newGrid","x","y","componentData","component","forceComponent","setJobInfoFormValue","handlePadInfoGridChanged","setPadInfoFormValue","jobInfoFormValues","jobgrid","reduce","concat","populateJobInfoGrid","padInfoFormValues","marginLeft","marginRight","size","isJobInfoValid","isPadInfoValid","validatedJobGrid","validatedPadGrid","next","gotoNextStep","WellInfo","wellInfoGrid","setWellInfoGrid","showConfirmationModal","setShowConfirmationModal","modalData","setModalData","MinusCircleOutlined","event","remove","isForcedComponent","column","handleWellInfoGridChanged","setFormValue","formValues","push","populateWillInfoGrid","preventDefault","newWellInfoGrid","addNewWell","isWellInfoValid","validatedWellGrid","splice","WellVolume","Panel","Collapse","wellVolumeGrids","setWellVolumeGrids","wellVolumeEstimationsGrids","setWellVolumeEstimationsGrids","populateWellVolumeGrid","defaultVal","getWellVolumeGridRow","populateWellVolumeEstimationsGrid","getWellVolumeEstimationsGridRow","formatNumber","numString","calculateHValue","gridDetail","depthThisRow","g","tolThisRow","idThisRow","tolPreviousRow","diff","tolNextRow","calculateWellVolumeEstimations","wellVolGridData","wellVolEstGridData","totalHValue","newWellVolEstimationsGrid","surfaveVol","wvG","bbls","gallons","k","toFixed","setWellVolumeEstimationsFormValue","handleWellVolumeGridChanged","newWellVolGrid","setWellVolumeFormValue","handleWellVolumeEstimationsGridChanged","wellInfoValues","wellVolumeGridData","wellVolumeEstimationsGridData","wellInfoValue","wellVolumeFormValues","wellVolumeEstimationsFormValues","defaultActiveKey","header","extra","formValid","checkWellVolumeGrids","validatedWellVolumeGrids","isWellVolumeValid","validatedGrid","PasswordInput","ClientInfo","clientInfoGrid","setClientInfoGrid","populateClientInfoGrid","getClientInfoGridRow","handleClientInfoGridChanged","newClientInfoGrid","addNewClient","isClientInfoValid","validatedClientGrid","SelectEditor","handleKeyDown","opt","onCommit","onRevert","which","ENTER_KEY","TAB_KEY","persist","setState","autoFocus","openOnFocus","closeOnSelect","onInputKeyDown","options","classNamePrefix","CrewInfo","crewInfoGrid","setCrewInfoGrid","FillViewer","foundOption","op","populateCrewInfoGrid","valueViewer","getCrewInfoGridRow","handleCrewInfoGridChanged","newCrewInfoGrid","addNewCrewInfo","isCrewInfoValid","validatedCrewGrid","Equipment","equipmentGrid","setEquipmentGrid","populateEquipmentGrid","getEquipmentGridRow","handleEquipmentGridChanged","isEquipmentInfoValid","validatedEquipmentGrid","createProjectSubmit","createProject","ProjectInfo","projectInfoGrid","setProjectInfoGrid","populateProjectInfoGrid","getProjectInfoGridRow","handleProjectInfoGridChanged","isProjectInfoValid","validatedProjectInfoGrid","Step","Steps","FAKE_DATA","LIST_OF_PROJECTS","job_number","project_name","created_by","created_at_date","created_time","WELL_INFO_FORM","well_name","well_api","Item","rules","placeholder","formation","lat","easting","northing","projectData","id","STAGE_REPORT","pre_frac","post_frac","nf","ff","half_length","height","reserve_potential","pore_pressure","allActions","authActions","setUserState","userLoggedOut","setUserProjectIds","setCurrentProject","AppContext","createContext","useAppContext","useContext","routes","path","icon","layout","menuItem","history","useHistory","newProjectFocus","setNewProjectFocus","existingProjectFocus","setExistingProjectFocus","gridStyle","textAlign","minHeight","onMouseEnter","onMouseLeave","setData","selectedProject","setSelectedProject","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","record","disabled","setPagination","axios","get","then","res","projects","job_id","job_name","created_date","catch","current","pageSize","total","ghost","onBack","window","back","projectId","pathname","search","openProject","pagination","dataSource","filters","sorter","addToast","useToasts","setCurrent","projectInfoValues","setProjectInfoValues","jobInfoValues","setJobInfoValues","padInfoValues","setPadInfoValues","setWellInfoValues","wellVolumeValues","setWellVolumeValues","wellVolumeEstimationsValues","setWellVolumeEstimationsValues","clientInfoValues","setClientInfoValues","crewInfoValues","setCrewInfoValues","equipmentValues","setEquipmentValues","steps","content","wellVolumeData","wellVol","wellVolumeEstimationsData","wellVolEst","projectValues","post","appearance","autoDismiss","passedId","progressDot","item","position","bottom","margin","cards","setIsModalVisible","setSection","handleAction","selectedSection","card","cardIndex","bordered","marginBottom","cardGrid","cardGridIndex","uploadedFile","RedoOutlined","location","useLocation","Form","useForm","form","dailyLogs","setDailyLogs","setProjectId","wellId","setWellId","resetForm","resetFields","fetchDailyLog","well_id","logs","time","setParams","locationData","params","URLSearchParams","projectIdSearch","wellIdSearch","listen","listStyle","gutter","span","onFinish","dailyLogData","length","set","hours","minutes","seconds","project_id","autoComplete","initialValues","List","add","fieldKey","restField","block","PlusOutlined","htmlType","fetchDefaultValues","labelAlign","onFinishFailed","errorInfo","tab","orientation","plain","QuestionCircleOutlined","TextArea","Input","dynamicFormNestItemForm","perforationIntervalInformationForm","stageDataForm","propantFormForm","activeDataFormForm","notesFataFormForm","useSelector","items","setItems","stageSheetList","setStageSheetList","selectedStage","setSelectedStage","setDynamicFormNestItemValues","setPerforationIntervalInformationValues","setStageDataValues","setPropantFormValues","setActiveDataFormValues","setNotesFataFormValues","fetchTrackingSheet","sheet_id","fetchStagesSubmitted","stages","numOfStages","step","populateStageDropdown","wells","num_stages","stageTrackingPresent","s","sheetData","l","handeSelectStage","dropdownRender","menu","display","flexWrap","flex","cursor","onValuesChange","changedValue","newFormValues","labelCol","trackingSheet","stage_tracking","field_engineer","days","nights","did_an_event_occur","perforation_interval_information","n_clusters","perf_gun_description","displacement_volume","plug","stage_data","fluid_parameters","fluids_injected_into_formation","last","ppg","second_to_last","third_to_last","third_ppg","propant_data","pumping_summary","max_prop_conc","design","max_prop_conc_ppa_design","actual","max_prop_conc_ppa_actual","total_pad_volume","total_pad_volume_bbls_design","total_pad_volume_bbls_actual","total_clean_fluid_volume","total_clean_fluid_volume_bbls_design","total_clean_fluid_volume_bbls_actual","total_forty_seventy","total_lbs_design","total_lbs_actual","total_sand","total_sand_lbs_design","total_sand_lbs_actual","acid_volume","acid_volume_gals_design","acid_volume_gals_actual","flush_volume","flush_volume_bbls_design","flush_volume_bbls_actual","slurry_volume","slurry_volume_bbls_design","slurry_volume_bbls_actual","active_data","pilsing_parameters","wave_type","freq","pre_frac_pulses","start_time","end_time","n_pulses","pre_number_of_pulses","post_frac_pulses","post_number_of_pulses","notes","pre_frac_pulse","post_frac_pulse","other","handleTrackingSheetSubmit","approved","findIndex","d","newData","approveStage","components","body","idx","hidden","renderBody","filter","dispatch","useDispatch","userHasAuthenticated","isLoading","setIsLoading","saveUserState","setItem","access_token","project_ids","from","alt","src","require","default","remember","username","password","prefix","UserOutlined","LockOutlined","href","to","htmlFor","email","Navbar","React","navbarOpen","setNavbarOpen","Auth","transparent","isAuthenticated","indexOf","prop","Header","Layout","handleMenuClick","removeItem","withLogo","theme","mode","Content","Sider","SubMenu","Menu","Admin","noSidebarLayout","setNoSidebarLayout","sidebarMenu","setSidebarMenu","defaultSelectedMenuKey","setDefaultSelectedMenuKey","defaultOpenMenu","setDefaultOpenMenu","getRoutes","menuChange","fetchProjectById","sortBy","w","notFoundUrl","subMenu","split","mainMenu","overflow","left","defaultSelectedKeys","defaultOpenKeys","spinning","Application","isAuthenticating","setIsAuthenticating","a","onLoad","Provider","App","ReactDOM","document","getElementById"],"mappings":"kHAAA,OAAe,cAA0B,mD,wNCA5BA,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAmB,mBACnBC,EAAqB,qBCD5BC,EAAe,CACjBC,KAAM,GACNC,eAAgB,KAChBC,QAAS,MCFEC,gCAAgB,CAAEC,YDKlB,WAAoD,IAA/BC,EAA8B,uDAAtBN,EAAcO,EAAQ,uCAChE,OAAQA,EAAOC,MACb,KAAKZ,EACD,IAAMK,EAAOM,EAAOE,QAAQR,KAC5B,OAAO,2BACAK,GADP,IAEIL,KAAK,eAAMA,KAGnB,KAAKJ,EACD,OAAO,2BACAS,GADP,IAEIL,KAAM,GACNC,eAAgB,OAGxB,KAAKJ,EACD,IAAMY,EAAaH,EAAOE,QAAQC,WAClC,OAAO,2BACAJ,GADP,IAEIJ,eAAe,YAAKQ,KAG5B,KAAKX,EACD,IAAMI,EAAUI,EAAOE,QAAQN,QAC/B,OAAO,2BACAG,GADP,IAEIH,QAAQ,eAAKA,KAGrB,QACE,OAAOG,M,SElCEK,EADDC,sBAAYC,EAAaC,iC,mCCDxBC,EAHA,CACXC,QAAS,kC,SCWEC,E,OAVEC,EAAMC,OAAO,CAC1BC,QAAS,IACTC,QAAS,CACL,8BAA+B,yBAEnCC,iBAAiB,EACjBC,aAAc,OACdC,aAAc,K,gBCNH,SAASC,IACtB,OACE,qBAAKC,UAAU,wBAAf,SACE,0DCNN,IA2HeC,EAPD,CACVC,OArHW,CACXC,KAAM,QACNC,MAAO,SACPC,UAAW,aACXC,QAAS,WACTC,MAAO,SACPC,SAAU,YACVC,iBAAkB,kBAClBC,YAAa,eACbC,WAAY,cACZC,UAAW,aACXC,eAAgB,kBAChBC,eAAgB,kBAChBC,UAAW,aACXC,SAAU,OACVC,QAAS,YAuGTC,WApGe,CACfC,YAAa,YACbC,WAAY,YACZC,YAAa,wBACbC,eAAgB,eAChBC,YAAa,eACbC,aAAc,oBACdC,uBAAwB,uBACxBC,eAAgB,uBAChBd,UAAW,iBACXe,cAAe,qBACfC,cAAe,uBACfC,kBAAmB,yBACnBC,qBAAsB,4BACtBhB,eAAgB,sBAChBiB,oBAAqB,iCACrBC,mBAAoB,0BACpBC,4BAA6B,mCAC7BC,sBAAuB,6BACvBC,sBAAuB,8BAkFvBC,IA/EQ,CACRC,SAAU,mBA+EVC,YA5EgB,CAChBhC,QAAS,CACLiC,aAAc,eACdC,aAAc,gBAElBC,SAAU,CACNC,SAAU,WACVC,SAAU,WACVC,OAAQ,SACRC,OAAQ,SACRC,aAAc,eACdC,WAAY,aACZC,MAAO,QACPC,eAAgB,iBAChBC,aAAc,gBAElBC,SAAU,CACNC,SAAU,WACVC,OAAQ,WACRC,YAAa,cACbC,mBAAoB,qBACpBC,mBAAoB,qBACpBC,SAAU,gBACVC,gBAAiB,uBACjBC,iBAAkB,oBAEtBC,UAAW,CACPC,UAAW,YACXC,aAAc,aACdC,SAAU,WACVC,UAAW,YACXC,IAAK,MACLC,KAAM,OACNC,QAAS,UACTC,SAAU,YAEdC,YAAa,CACTC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,IAAK,OAETC,wBAAyB,CACrBC,YAAa,cACbC,KAAM,OACNC,QAAS,WAEbC,YAAa,CACTC,gBAAiB,iBACjBC,MAAO,QACPC,SAAU,WACVC,OAAQ,UAEZC,UAAW,CACPC,KAAM,OACNC,KAAM,OACNC,aAAc,eACdJ,OAAQ,UAEZK,UAAW,CACPC,YAAa,cACbC,aAAc,eACdC,UAAW,YACXC,eAAgB,iBAChBC,eAAgB,iBAChBC,kBAAmB,gBACnBC,WAAY,gB,uICzFLC,EALE,CACbC,gBAnBoB,CACpBvG,QAAS,CACL,8BAA+B,0BAkBnCwG,iBAdqB,WACrB,IAAMC,EAAeC,aAAaC,QAAQ,OAASD,aAAaC,QAAQ,OAAS,GACjF,MAAO,CACH3G,QAAS,CACL,8BAA+B,wBAC/B,cAAgB,UAAhB,OAA2ByG,IAE/BG,UAAU,EACV3G,iBAAiB,K,qDCdzB,IA0Fe4G,EAPO,CAClBC,oBApFwB,CACxB,cACA,iBACA,4BACA,uBACA,gCAgFAC,uBA7E2B,CAC3B,iBACA,wBACA,qBACA,kBA0EAC,iBAvEqB,CACrB,CACIC,MAAO,aACPC,QAAS,aACTC,KAAM,CACF,CAACC,MAAO,WAAYC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,WAC5D,CAACkI,MAAO,WAAYC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,YAC5D,CAACkI,MAAO,cAAeC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,UAC/D,CAACkI,MAAO,YAAaC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,UAGrE,CACI+H,MAAO,WACPC,QAAS,WACTC,KAAM,CACF,CAACC,MAAO,WAAYC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,WAC5D,CAACkI,MAAO,WAAYC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,YAC5D,CAACkI,MAAO,cAAeC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,UAC/D,CAACkI,MAAO,YAAaC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,UAGrE,CACI+H,MAAO,eACPC,QAAS,eACTC,KAAM,CACF,CAACC,MAAO,WAAYC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,WAC5D,CAACkI,MAAO,WAAYC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,YAC5D,CAACkI,MAAO,cAAeC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,UAC/D,CAACkI,MAAO,YAAaC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,UAGrE,CACI+H,MAAO,SACPC,QAAS,SACTC,KAAM,CACF,CAACC,MAAO,WAAYC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,WAC5D,CAACkI,MAAO,WAAYC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,YAC5D,CAACkI,MAAO,cAAeC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,UAC/D,CAACkI,MAAO,YAAaC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,UAGrE,CACI+H,MAAO,YACPC,QAAS,YACTC,KAAM,CACF,CAACC,MAAO,WAAYC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,WAC5D,CAACkI,MAAO,WAAYC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,YAC5D,CAACkI,MAAO,cAAeC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,UAC/D,CAACkI,MAAO,YAAaC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,UAGrE,CACI+H,MAAO,UACPC,QAAS,UACTC,KAAM,CACF,CAACC,MAAO,WAAYC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,WAC5D,CAACkI,MAAO,WAAYC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,YAC5D,CAACkI,MAAO,cAAeC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,UAC/D,CAACkI,MAAO,YAAaC,OAAO,EAAOC,MAAO,UAAWpI,OAAQ,WAcrEqI,aATiB,CACjB,CAACH,MAAO,sBAAuBI,MAAO,uBACtC,CAACJ,MAAO,iBAAkBI,MAAO,oB,6CC5EtB,SAASC,EAAgBC,GACpC,IAAQC,EAAYC,IAAZD,QACFE,EAAoB,CACtBC,KAAM,OACNC,UAAU,EACV7I,OAAQ,mDACR8I,SAJsB,SAIbC,GACL,IAAQC,EAAWD,EAAKE,KAAhBD,OACO,cAAXA,GACAE,QAAQC,IAAIJ,EAAMA,EAAKE,KAAMF,EAAKK,UAEvB,SAAXJ,EACAR,EAAMa,SAASN,EAAMP,EAAMR,SACT,UAAXgB,GACPM,IAAQC,MAAR,UAAiBR,EAAKE,KAAKL,KAA3B,0BAGRY,OAfsB,SAefC,GACHP,QAAQC,IAAI,gBAAiBM,EAAEC,aAAaC,SAIpD,OACI,cAAC,IAAD,CAAOC,UAAQ,EAAC7B,MAAM,cAAc8B,QAASrB,EAAMsB,eAAgBC,KAAMvB,EAAMa,SAAUW,SAAUxB,EAAMyB,aAAcC,OAAQ,KAA/H,SACI,eAACzB,EAAD,2BAAaE,GAAb,cACI,mBAAGxH,UAAU,uBAAb,SACA,cAACgJ,EAAA,EAAD,MAEA,mBAAGhJ,UAAU,kBAAb,uDACA,mBAAGA,UAAU,0B,0DC9Bd,SAASiJ,GAAkB5B,GAEtC,OACI,cAAC,IAAD,CACIoB,UAAQ,EACR7B,MAAOS,EAAM6B,WACbR,QAASrB,EAAMsB,eACfE,SAAUxB,EAAMyB,aAChBC,OAAQ,CACJ,cAAC,IAAD,CAAmBI,QAAS,SAACb,GAAD,OAAOjB,EAAMyB,aAAaR,IAAtD,SACMjB,EAAM+B,cAAcC,aADd,QAGZ,cAAC,IAAD,CAAqBvK,KAAK,UAAUqK,QAAS,SAACb,GAAD,OAAOjB,EAAMa,SAASb,EAAMiC,OAAzE,SACMjC,EAAM+B,cAAcG,cADd,WATpB,SAcKlC,EAAMmC,YCnBnB,IA6JeC,GAVW,CACtBC,0BApJ8B,CAC9BC,MAAO,KACPC,QAAS,KACTC,SAAU,KACVC,KAAM,KACNC,YAAa,KACbC,oBAAqB,KACrBC,sBAAuB,KACvBC,YAAa,KACbC,oBAAqB,KACrBC,UAAW,KACXC,wBAAyB,KACzBC,MAAO,MAyIPC,qCAtIyC,CACzCC,KAAM,KACNC,YAAa,KACbC,gBAAiB,KACjBC,wBAAyB,KACzBC,sBAAuB,KACvBC,qBAAsB,KACtBC,cAAe,KACfC,eAAgB,KAChBC,cAAe,KACfC,WAAY,KACZC,gBAAiB,KACjBC,IAAK,KACLC,SAAU,MA0HVC,gBAvHoB,CACpBC,iBAAkB,KAClBC,kBAAmB,KACnBC,kBAAmB,KACnBC,mBAAoB,KACpBC,UAAW,KACXC,8BAA+B,KAC/BC,sBAAuB,KACvBC,eAAgB,KAChBC,mBAAoB,KACpBC,gBAAiB,KACjBC,KAAM,KACNC,UAAW,KACXC,iBAAkB,KAClBC,SAAU,KACVC,iBAAkB,KAClBC,aAAc,KACdC,YAAa,KACbC,mBAAoB,KACpBC,WAAY,KACZC,eAAgB,KAChBC,iBAAkB,KAClBC,WAAY,KACZC,kBAAmB,MAiGnBC,kBA9FsB,CACtBC,aAAc,CACV,CACIC,aAAc,KACdC,YAAa,KACbC,iBAAkB,QA0F1BC,qBArFyB,CACzBC,UAAW,KACXC,UAAW,KACXC,iBAAkB,KAClBC,OAAQ,KACRC,QAAS,KACTC,cAAe,KACfC,gBAAiB,KACjBC,aAAc,KACdC,eAAgB,MA6EhBC,oBA1EwB,CACxBC,YAAa,KACbC,UAAW,KACXC,WAAY,MAwEZC,iBArEqB,CACrBC,OAAQ,KACRC,OAAQ,KACRC,OAAQ,EACRC,OAAQ,IACRC,MAAO,KACPC,MAAO,IACPC,MAAO,aACPhI,SAAU,OACViI,OAAQ,aACRC,MAAO,EACPC,UAAW,GACXC,SAAU,IACVC,gBAAiB,QACjBC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,GACjBC,iBAAkB,GAClBC,UAAW,YACXC,aAAc,EACdC,UAAW,KACXC,QAAS,KACTC,KAAM,KACNC,OAAQ,QACRC,YAAa,SACbC,UAAW,IACXC,WAAY,GACZC,QAAS,QACTC,KAAM,IACNC,KAAM,IACNC,MAAO,KACPC,WAAY,KACZC,QAAS,IACTC,OAAQ,GACRC,QAAS,EACTC,KAAM,KACNC,cAAe,KACfC,cAAe,EACfC,QAAS,EACTC,gBAAiB,IACjBC,MAAO,IACPC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,IACRC,QAAS,IACTC,OAAQ,EACRC,KAAM,EACNC,OAAQ,IACRC,cAAe,EACfC,OAAQ,EACRC,GAAI,KACJC,WAAY,KACZC,QAAS,IACTC,YAAa,IACbC,eAAgB,EAChBC,cAAe,IACfC,QAAS,IACTC,YAAa,IACbC,QAAS,IACTC,WAAY,IACZC,eAAgB,KCrIZC,GAAWC,IAAXD,OACAE,GAAYC,KAAZD,Q,cCgBFE,GAAuB,CACzBC,QAAS,CACL,CAAEC,IAAK,IAAKnL,MAAO,GAAIoL,MAAO,OAC9B,CAAED,IAAK,IAAKnL,MAAO,GAAIoL,MAAO,QAElCrL,KAAM,CACF,CACEsL,KAAM,CACJ,CAAErL,MAAO,WAAYsL,MAAOpS,EAAMqC,YAAYG,SAASC,SAAU4P,UAAU,GAC3E,CAAEvL,MAAO,WAAYsL,MAAOpS,EAAMqC,YAAYG,SAASE,SAAU2P,UAAU,GAC3E,CAAEvL,MAAO,SAAUsL,MAAOpS,EAAMqC,YAAYG,SAASG,OAAQ0P,UAAU,GACvE,CAAEvL,MAAO,QAASsL,MAAOpS,EAAMqC,YAAYG,SAASI,OAAQyP,UAAU,GACtE,CAAEvL,MAAO,UAAWsL,MAAOpS,EAAMqC,YAAYG,SAASK,aAAcwP,UAAU,GAC9E,CAAEvL,MAAO,QAASsL,MAAOpS,EAAMqC,YAAYG,SAASM,WAAYuP,UAAU,GAC1E,CAAEvL,MAAO,QAASsL,MAAOpS,EAAMqC,YAAYG,SAASO,MAAOsP,UAAU,GACrE,CAAEvL,MAAO,aAAcsL,MAAOpS,EAAMqC,YAAYG,SAASQ,eAAgBqP,UAAU,GACnF,CAAEvL,MAAO,WAAYsL,MAAOpS,EAAMqC,YAAYG,SAASS,aAAcoP,UAAU,OAMrFC,GAAuB,CACzBN,QAAS,CACL,CAAEC,IAAK,IAAKnL,MAAO,GAAIoL,MAAO,OAC9B,CAAED,IAAK,IAAKnL,MAAO,GAAIoL,MAAO,QAElCrL,KAAM,CACF,CACEsL,KAAM,CACJ,CAAErL,MAAO,WAAYsL,MAAOpS,EAAMqC,YAAYa,SAASC,SAAUkP,UAAU,GAC3E,CAAEvL,MAAO,SAAUsL,MAAOpS,EAAMqC,YAAYa,SAASE,OAAQiP,UAAU,GACvE,CAAEvL,MAAO,cAAesL,MAAOpS,EAAMqC,YAAYa,SAASG,YAAagP,UAAU,GACjF,CAAEvL,MAAO,qBAAsBsL,MAAOpS,EAAMqC,YAAYa,SAASI,mBAAoB+O,UAAU,GAC/F,CAAEvL,MAAO,gBAAiBsL,MAAOpS,EAAMqC,YAAYa,SAASK,mBAAoB8O,UAAU,EAAME,SAAU,WAC1G,CAAEzL,MAAO,WAAYsL,MAAOpS,EAAMqC,YAAYa,SAASM,SAAU6O,UAAU,GAC3E,CAAEvL,MAAO,kBAAmBsL,MAAOpS,EAAMqC,YAAYa,SAASO,gBAAiB4O,UAAU,GACzF,CAAEvL,MAAO,mBAAoBsL,MAAOpS,EAAMqC,YAAYa,SAASQ,iBAAkB2O,UAAU,OAMjGG,GAAwB,CAC1BR,QAAS,CACL,CAAEC,IAAK,IAAKnL,MAAO,YAAaoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAYsB,UAAUC,UAAW6O,aAAc,GAAIJ,UAAU,GACxH,CAAEJ,IAAK,IAAKnL,MAAO,cAAeoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAYsB,UAAUE,aAAc4O,aAAc,GAAIJ,UAAU,EAAME,SAAU,WAC7I,CAAEN,IAAK,IAAKnL,MAAO,WAAYoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAYsB,UAAUG,SAAU2O,aAAc,GAAIJ,UAAU,GACtH,CAAEJ,IAAK,IAAKnL,MAAO,YAAaoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAYsB,UAAUI,UAAW0O,aAAc,GAAIJ,UAAU,GACxH,CAAEJ,IAAK,IAAKnL,MAAO,MAAOoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAYsB,UAAUK,IAAKyO,aAAc,GAAIJ,UAAU,GAC5G,CAAEJ,IAAK,IAAKnL,MAAO,OAAQoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAYsB,UAAUM,KAAMwO,aAAc,GAAIJ,UAAU,GAC9G,CAAEJ,IAAK,IAAKnL,MAAO,UAAWoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAYsB,UAAUO,QAASuO,aAAc,GAAIJ,UAAU,GACpH,CAAEJ,IAAK,IAAKnL,MAAO,WAAYoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAYsB,UAAUQ,SAAUsO,aAAc,GAAIJ,UAAU,GACtH,CAAEJ,IAAK,IAAKnL,MAAO,GAAIoL,MAAO,KAAME,MAAO,SAAUK,aAAc,GAAIC,cAAc,EAAM3S,UAAW,aAE1G8G,KAAM,CACF,CACE8L,IAAK,UAKTC,GAA0B,CAC5BZ,QAAS,CACL,CAAEC,IAAK,IAAKnL,MAAO,OAAQoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAY+B,YAAYC,KAAMgO,UAAU,GAC9F,CAAEJ,IAAK,IAAKnL,MAAO,KAAMoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAY+B,YAAYE,GAAI+N,UAAU,EAAME,SAAU,WAC1G,CAAEN,IAAK,IAAKnL,MAAO,KAAMoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAY+B,YAAYG,GAAI8N,UAAU,EAAME,SAAU,WAC1G,CAAEN,IAAK,IAAKnL,MAAO,KAAMoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAY+B,YAAYI,GAAI6N,UAAU,EAAME,SAAU,WAC1G,CAAEN,IAAK,IAAKnL,MAAO,aAAcoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAY+B,YAAYK,SAAU4N,UAAU,EAAME,SAAU,WACxH,CAAEN,IAAK,IAAKnL,MAAO,MAAOoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAY+B,YAAYM,IAAK2N,UAAU,EAAME,SAAU,YAEhH1L,KAAM,CACF,CACEsL,KAAM,CACJ,SACA,QACA,gBAMNU,GAAqC,CACvCb,QAAS,SAAUc,GACf,MAAO,CACH,CAAEb,IAAK,IAAKnL,MAAOgM,EAAUC,QAAS,OAG9ClM,KAAM,CACF,CACEsL,KAAM,CACJ,CAAErL,MAAO,sBAAuBsL,MAAOpS,EAAMqC,YAAYsC,wBAAwBC,YAAa2N,SAAU,WACxG,CAAEzL,MAAO,OAAQsL,MAAOpS,EAAMqC,YAAYsC,wBAAwBE,KAAM0N,SAAU,WAClF,CAAEzL,MAAO,UAAWsL,MAAOpS,EAAMqC,YAAYsC,wBAAwBG,QAASyN,SAAU,eAsFrFS,GAbU,CACrBC,wBApE4B,CAC5BjB,QAAS,CACL,CAAEC,IAAK,IAAKnL,MAAO,kBAAmBoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAY0C,YAAYC,gBAAiBqN,UAAU,GACpH,CAAEJ,IAAK,IAAKnL,MAAO,QAASoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAY0C,YAAYE,MAAOoN,UAAU,GAChG,CAAEJ,IAAK,IAAKnL,MAAO,WAAYoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAY0C,YAAYG,SAAUmN,UAAU,GACtG,CAAEJ,IAAK,IAAKnL,MAAO,GAAIoL,MAAO,KAAME,MAAOpS,EAAMqC,YAAY0C,YAAYI,OAAQsN,aAAc,GAAI1S,UAAW,aAElH8G,KAAM,CACF,CACEsL,KAAM,CACJ,OA2DRe,sBArD0B,CAC1BlB,QAAS,CACL,CAAEC,IAAK,IAAKnL,MAAO,OAAQoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAY+C,UAAUC,KAAMgN,UAAU,GAC5F,CAAEJ,IAAK,IAAKnL,MAAO,OAAQoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAY+C,UAAUE,KAAM+M,UAAU,GAC5F,CAAEJ,IAAK,IAAKnL,MAAO,UAAWoL,MAAO,MAAOE,MAAOpS,EAAMqC,YAAY+C,UAAUG,aAAc8M,UAAU,GACvG,CAAEJ,IAAK,IAAKnL,MAAO,GAAIoL,MAAO,KAAME,MAAOpS,EAAMqC,YAAY+C,UAAUD,OAAQsN,aAAc,GAAI1S,UAAW,aAEhH8G,KAAM,CACF,CACEsL,KAAM,CACJ,OA4CRJ,wBACAO,wBACAa,aAvMiB,CACjB,CACIxM,MAAO,QACPyM,UAAW,aACXC,OAAQ,SAACC,GAAD,OAAUA,IAEtB,CACI3M,MAAO,WACPyM,UAAW,YAEf,CACIzM,MAAO,eACPyM,UAAW,gBAEf,CACIzM,MAAO,aACPyM,UAAW,cAEf,CACIzM,MAAO,eACPyM,UAAW,mBAEf,CACIzM,MAAO,eACPyM,UAAW,iBAgLfZ,yBACAI,2BACAC,sCACAU,uBA5C2B,CAC3BvB,QAAS,CACL,CAAEC,IAAK,IAAKnL,MAAO,YAAaoL,MAAO,OACvC,CAAED,IAAK,IAAKnL,MAAO,OAAQoL,MAAO,QAEtCrL,KAAM,CACF,CACEsL,KAAM,CACJ,CAAErL,MAAO,WAAYsL,MAAOpS,EAAMqC,YAAYmD,UAAUC,YAAa4M,UAAU,EAAME,SAAU,WAC/F,CAAEzL,MAAO,YAAasL,MAAOpS,EAAMqC,YAAYmD,UAAUE,aAAc2M,UAAU,EAAME,SAAU,WACjG,CAAEzL,MAAO,SAAUsL,MAAOpS,EAAMqC,YAAYmD,UAAUG,UAAW0M,UAAU,EAAME,SAAU,WAC3F,CAAEzL,MAAO,cAAesL,MAAOpS,EAAMqC,YAAYmD,UAAUI,eAAgByM,UAAU,EAAME,SAAU,WACrG,CAAEzL,MAAO,cAAesL,MAAOpS,EAAMqC,YAAYmD,UAAUK,eAAgBwM,UAAU,EAAME,SAAU,WACrG,CAAEzL,MAAO,iBAAkBsL,MAAOpS,EAAMqC,YAAYmD,UAAUM,kBAAmBuM,UAAU,EAAME,SAAU,WAC3G,CAAEzL,MAAO,UAAWsL,MAAOpS,EAAMqC,YAAYmD,UAAUO,WAAYsM,UAAU,EAAME,SAAU,eA+BrGiB,yBAzB6B,CAC7BxB,QAAS,CACL,CAAEC,IAAK,IAAKnL,MAAO,GAAIoL,MAAO,OAC9B,CAAED,IAAK,IAAKnL,MAAO,GAAIoL,MAAO,QAElCrL,KAAM,CACF,CACEsL,KAAM,CACJ,CAAErL,MAAO,eAAgBsL,MAAOpS,EAAMqC,YAAYhC,QAAQiC,aAAc+P,UAAU,GAClF,CAAEvL,MAAO,eAAgBsL,MAAOpS,EAAMqC,YAAYhC,QAAQkC,aAAc8P,UAAU,Q,wBCvKxFoB,GAAiB,SAACC,GACpB,OAAIA,EACOC,WAAWD,EAAIE,QAAQ,KAAM,KAE7B,GA2CAC,GANK,CAChBC,mBAvDuB,SAACC,EAAQC,EAAQC,GACxC,IAAIC,EAAiB,GACjBC,GAAW,EAQf,OAPAC,OAAOC,KAAKN,GAAQO,KAAI,SAACC,EAAWC,GAKhC,OAJAN,EAAc,2BACPA,GADO,mBAETK,EAAaC,GAASP,EAdf,SAACD,EAAQS,EAAWR,EAAYO,EAAOL,GACvD,OAAGK,GAASP,GACDD,EAAOG,GAAWH,EAAOG,GAEzBM,EAUkCC,CAAYV,EAAQD,EAAOQ,GAAYN,EAAYO,IAASL,GAAWJ,EAAOQ,KAEhHA,KAEJL,GA8CPS,gCAnCoC,SAACC,GACrC,IAAIC,EAAc,GAClB,OAAKD,GAELA,EAAWN,KAAI,SAAAQ,GACX,IAAMC,EAAMD,EAAQE,MAAK,SAAAtB,GAAG,OAAIA,EAAItB,SAC9B6C,EAAc,gBAAKF,EAAI3C,MAAyB,YAAjB2C,EAAIxC,SAAyBkB,GAAesB,EAAI7N,OAAS6N,EAAI7N,OAIlG,MAHiB,WAAd6N,EAAI3C,QACHyC,EAAcK,aAAOL,EAAaI,IAE/BA,KAGJJ,GAVIA,GAiCXM,mCApBuC,SAACP,GACxC,OAAKA,EAEaA,EAAWN,KAAI,SAAA3B,GAC7B,IAAIyC,EAAc,GAOlB,OANAzC,EAAI2B,KAAI,SAAAe,GAIJ,MAHiB,WAAdA,EAAIjD,QACHgD,EAAcF,aAAOE,EAAD,gBAAgBC,EAAIjD,MAAyB,YAAjBiD,EAAI9C,SAAyBkB,GAAe4B,EAAInO,OAASmO,EAAInO,SAE1GmO,KAEJD,KATA,K,yCC5CTE,I,cAAgB,SAAAlO,GAClB,IAAQrH,EAAuBqH,EAAvBrH,UAAWiS,EAAY5K,EAAZ4K,QACnB,OACI,wBAAOjS,UAAWA,EAAY,4BAA9B,UACI,gCACI,6BACCiS,EAAQsC,KAAI,SAACe,EAAKb,GAAN,OACT,oBAEIzU,UAAS,eAAUA,EAAV,YAAuBsV,EAAItV,WACpCwV,MAAO,CACHrD,MAAOmD,EAAInD,MACXsD,WAAY,UACZC,QAAS,aAEb1C,QAASsC,EAAItC,QAAUsC,EAAItC,QAAU,EARzC,SAUKsC,EAAIvO,OATA0N,UAcjB,gCAAQpN,EAAMsO,gBAgBX,SAASC,GAAKvO,GAEzB,MAA8BwO,qBAA9B,mBAAO5D,EAAP,KAAgB6D,EAAhB,KACA,EAAwBD,qBAAxB,mBAAO/O,EAAP,KAAaiP,EAAb,KAiBA,OALAC,qBAAU,WACNF,EAAWzO,EAAM4K,SACjB8D,EAAQ1O,EAAMP,QACf,CAACO,IAGA,qBAAKmO,MAAO,CAAErD,MAAO9K,EAAM8K,MAAQ9K,EAAM8K,MAAQ,QAAjD,SACKrL,GAAQ,cAAC,KAAD,CACLwC,KAAMxC,EACNmP,cAAe,SAAAC,GAAI,OAAIA,EAAK/O,OAC5BgP,cApBQ,SAACC,GACjB,OAAO,cAAC,GAAD,aAAenE,QAASA,GAAamE,KAoBpCpW,UAAWqH,EAAMrH,UACjBqW,gBAAiB,SAACH,EAAMtD,EAAK0C,GAAS,OAAQY,EAAKI,eAEnDC,eAAgB,SAAAC,GACZ,IAAMC,EAAW3P,EAAKyN,KAAI,SAAA3B,GAAG,mBAAQA,MACrC4D,EAAQE,SAAQ,YAAgC,IAA7BR,EAA4B,EAA5BA,KAAMtD,EAAsB,EAAtBA,IAAK0C,EAAiB,EAAjBA,IAAKnO,EAAY,EAAZA,MAC/BY,QAAQC,IAAI,CAAEkO,OAAMtD,MAAK0C,MAAKnO,UAC9B,IAAIiB,GAAQ,EACRpI,EAAYkW,EAAKlW,UAClByW,EAAS7D,GAAK0C,GAAd,UAA4C,KAAVnO,GACjCiB,GAAQ,EACRpI,GAAwB,cAExBA,EAAYA,EAAYA,EAAU6T,QAAQ,aAAa,IAAM,OAEjE4C,EAAS7D,GAAK0C,GAAd,2BAA0BmB,EAAS7D,GAAK0C,IAAxC,IAA8CnO,QAAOiB,MAAOA,EAAOpI,iBAEvE+V,EAAQU,GACRpP,EAAMsP,eAAe,qBAAuBtP,EAAMuP,iBAAiBH,EAAUpP,EAAMoN,Y,yECxDxFoC,G,oDA5BX,WAAaxP,GAAQ,IAAD,+BAClB,cAAMA,IACDyP,aAAe,EAAKA,aAAaC,KAAlB,iBAFF,E,sDAKpB,WACEC,KAAKC,OAAOjQ,U,0BAGd,SAAcsB,GACZ0O,KAAK3P,MAAMM,SAASW,EAAE4O,OAAO/P,S,oBAG/B,WAAW,IAAD,OACR,EAA2B6P,KAAK3P,MAAzBF,EAAP,EAAOA,MAAOgQ,EAAd,EAAcA,UACd,OACE,uBACEC,IAAK,SAAAC,GAAW,EAAKJ,OAASI,GAC9BvY,KAAK,SACLkB,UAAU,gCACVmH,MAAOA,EACPQ,SAAUqP,KAAKF,aACfK,UAAWA,Q,GAvBKG,iBCOX,SAASC,GAAQlQ,GAE5B,MAAsCwO,mBAAS,IAA/C,mBAAO2B,EAAP,KAAoBC,EAApB,KACA,EAAsC5B,mBAAS,IAA/C,mBAAO6B,EAAP,KAAoBC,EAApB,KAEMC,EAAe,SAAC9N,EAAM+N,EAAY/Q,EAAM2N,EAAOpC,GACjD,IAAIyF,EAAU,KACXhO,IACCgO,EAAUhO,EAAKiO,OAAO,MAE1B,IAAMC,EAAiBC,KAAEC,UAAUpR,GACnCkR,EAAevD,GAAOQ,MAAK,SAAAkD,GAAC,OAAIA,EAAE9F,QAAUA,KAAOlL,MAAQiR,OAAON,GAClEO,EAAyBL,IAGvBM,EAAS,SAACC,GACZ,OAAOA,EAAEnG,KAAKmC,KAAI,SAAC3B,EAAK6B,GACpB,MAAO,CACH,CAAEtN,MAAOyL,EAAI7L,MAAOyR,UAAU,EAAMlC,eAAe,GACnD,CAAEnP,MAAO,GAAIkL,MAAOO,EAAIP,MAAOC,SAAUM,EAAIN,SAAUE,SAAUI,EAAIJ,SAAUiG,WAAY7F,EAAIP,QAAUpS,EAAMqC,YAAYa,SAASK,mBAAqBqT,GAAc,WAK7K6B,EAAqB,SAACC,EAAQ7R,GAChC,IAAM8R,EAAa9R,EAAK6R,GAAQ1D,MAAK,SAAAkD,GAAC,OAAIA,EAAE9F,QAAUpS,EAAMqC,YAAYG,SAASQ,kBAAgBkE,MAC3F0R,EAAaD,EAAaE,IAAOV,OAAOQ,IAAe,KAC7D,OAAO,cAAC,IAAD,CAAY5Y,UAAU,QAAQmH,MAAO0R,EAAYlR,SAAU,SAACmC,EAAM+N,GAAP,OAAsBD,EAAa9N,EAAM+N,EAAY/Q,EAAM6R,EAAQ1Y,EAAMqC,YAAYG,SAASQ,oBAG9J8V,EAAmB,SAACJ,EAAQ7R,GAC9B,IAAM8R,EAAa9R,EAAK6R,GAAQ1D,MAAK,SAAAkD,GAAC,OAAIA,EAAE9F,QAAUpS,EAAMqC,YAAYG,SAASS,gBAAciE,MACzF0R,EAAaD,EAAaE,IAAOV,OAAOQ,IAAe,KAC7D,OAAO,cAAC,IAAD,CAAY5Y,UAAU,QAAQmH,MAAO0R,EAAYlR,SAAU,SAACmC,EAAM+N,GAAP,OAAsBD,EAAa9N,EAAM+N,EAAY/Q,EAAM6R,EAAQ1Y,EAAMqC,YAAYG,SAASS,kBA2B9JmV,EAA2B,SAACW,GAC9B,IAAMC,EAAUD,EAAgBzE,KAAI,SAAC2E,EAAGzE,GACpC,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAiBD,EAAE9G,QAAUpS,EAAMqC,YAAYG,SAASQ,eAAiByV,EAAmBjE,EAAOuE,GAAoBG,EAAE9G,QAAUpS,EAAMqC,YAAYG,SAASS,aAAgB6V,EAAiBtE,EAAOuE,GAAmB,KAC/N,OAAO,2BACAG,GADP,IAEIE,UAAWD,EACXE,eAAiBH,EAAE9G,QAAUpS,EAAMqC,YAAYG,SAASQ,gBAAkBkW,EAAE9G,QAAUpS,EAAMqC,YAAYG,SAASS,qBAI7HmE,EAAMkS,oBAAoBN,GAC1BxB,EAAewB,IAGbO,EAA2B,SAACR,GAC9B3R,EAAMoS,oBAAoBT,GAC1BrB,EAAeqB,IA2DnB,OAvBAnD,oBAAS,WACyB,MAA3BxO,EAAMqS,mBACL3R,QAAQC,IAAIiQ,KAAEC,UAAU7Q,EAAMqS,oBAC9BrS,EAAMqS,mBAAqBjC,EAAepQ,EAAMqS,kBAAkBnF,KAAI,SAAC2E,EAAGzE,GACtE,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAiBD,EAAE9G,QAAUpS,EAAMqC,YAAYG,SAASQ,eAAiByV,EAAmBjE,EAAOpN,EAAMqS,mBAAsBP,EAAE9G,QAAUpS,EAAMqC,YAAYG,SAASS,aAAgB6V,EAAiBtE,EAAOpN,EAAMqS,mBAAqB,KAC/O,OAAO,2BACAP,GADP,IAEIE,UAAWD,EACXE,eAAiBH,EAAE9G,QAAUpS,EAAMqC,YAAYG,SAASQ,gBAAkBkW,EAAE9G,QAAUpS,EAAMqC,YAAYG,SAASS,uBAtFzG,WACxB,IAAMyW,EAAU1G,GAAiBjB,qBAAqBlL,KAAK8S,QAAO,SAACxH,EAAMmG,EAAGI,GACxE,IAAM/F,EAAM0F,EAAOC,GACnB,OAAOnG,EAAKyH,OAAOjH,KACpB,IACH6E,EAAekC,EAAQpF,KAAI,SAAC2E,EAAGzE,GAC3B,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAiBD,EAAE9G,QAAUpS,EAAMqC,YAAYG,SAASQ,eAAiByV,EAAmBjE,EAAOkF,GAAYR,EAAE9G,QAAUpS,EAAMqC,YAAYG,SAASS,aAAgB6V,EAAiBtE,EAAOkF,GAAW,KAC/M,OAAO,2BACAR,GADP,IAEIE,UAAWD,EACXE,eAAiBH,EAAE9G,QAAUpS,EAAMqC,YAAYG,SAASQ,gBAAkBkW,EAAE9G,QAAUpS,EAAMqC,YAAYG,SAASS,sBAgFzH4W,GAE0B,MAA3BzS,EAAM0S,kBACL1S,EAAM0S,mBAAqBpC,EAAetQ,EAAM0S,mBA5EpDpC,EAAe1E,GAAiBV,qBAAqBzL,KAAK8S,QAAO,SAACxH,EAAMmG,EAAGI,GACvE,IAAM/F,EAAM0F,EAAOC,GACnB,OAAOnG,EAAKyH,OAAOjH,KACpB,OA6EJvL,GAGC,qCACI,qBAAKrH,UAAU,OAAOwV,MAAO,CAACrD,MAAO,MAAO6H,WAAY,OAAQC,YAAa,QAA7E,SACI,eAAC,KAAD,CAAOC,KAAK,QAAZ,UACI,cAAC,GAAD,CACIjI,QAASgB,GAAiBjB,qBAAqBC,QAC/CnL,KAAM0Q,EACNxX,UAAU,sBACV4W,iBAAkByB,IAEtB,cAAC,GAAD,CACIpG,QAASgB,GAAiBV,qBAAqBN,QAC/CnL,KAAM4Q,EACN1X,UAAU,sBACV4W,iBAAkB4C,SAI9B,qBAAKxZ,UAAU,aAAf,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUqK,QAAS,SAACb,IA3ExB,WACjB,IAAI6R,GAAiB,EACjBC,GAAiB,EACfC,EAAmBpC,KAAEC,UAAUV,GACrC6C,EAAiB9F,KAAI,SAAA3B,GAQjB,OAPAA,EAAI2B,KAAI,SAAA2B,GAKJ,OAJGA,EAAK5D,UAA2B,KAAf4D,EAAK/O,QACrBgT,GAAiB,EACjBjE,EAAKlW,UAAY,cAEdkW,KAEJtD,KAEX,IAAM0H,EAAmBrC,KAAEC,UAAUR,GACrC4C,EAAiB/F,KAAI,SAAA3B,GAQjB,OAPAA,EAAI2B,KAAI,SAAA2B,GAKJ,OAJGA,EAAK5D,UAA2B,KAAf4D,EAAK/O,QACrBiT,GAAiB,EACjBlE,EAAKlW,UAAY,cAEdkW,KAEJtD,KAEPuH,GAAmBC,EAInB/S,EAAMkT,QAHNlC,EAAyBgC,GACzBb,EAAyBc,IAgDmBE,IAAxC,uBC1JD,SAASC,GAASpT,GAE7B,MAAwCwO,mBAAS,IAAjD,mBAAO6E,EAAP,KAAqBC,EAArB,KACA,EAA0D9E,qBAA1D,mBAAO+E,EAAP,KAA8BC,EAA9B,KACA,EAAkChF,qBAAlC,mBAAOiF,EAAP,KAAkBC,EAAlB,KA8BM1B,EAAY,SAACV,EAAQ7R,GACvB,OAAO,cAACkU,EAAA,EAAD,CAAqB7R,QAAS,SAAC8R,GAAD,OA7B1B,SAACtC,EAAQ7R,GACpB+T,GAAyB,GACzBE,EAAa,CACTpC,SACA7R,SAyB4CoU,CAAOvC,EAAQ7R,OAG7DqU,EAAoB,SAACC,GACvB,OAAOA,EAAOzI,cAiEZ0I,EAA4B,SAACrC,GAC/B3R,EAAMiU,aAAatC,GACnB2B,EAAgB3B,EAAgBzE,KAAI,SAAC2E,EAAGzE,GACpC,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAA4B,WAAZD,EAAE9G,MAAqBgH,EAAU5E,EAAOuE,GAAmB,KACjF,OAAO,2BACAG,GADP,IAEIE,UAAWD,YA4C3B,OAhBAvD,oBAAS,WACkB,MAApBxO,EAAMkU,WACLlU,EAAMkU,YAAcZ,EAAgBtT,EAAMkU,WAAWhH,KAAI,SAAC2E,EAAGzE,GACzD,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAA4B,WAAZD,EAAE9G,MAAqBgH,EAAU5E,EAAOpN,EAAMkU,YAAc,KAClF,OAAO,2BACApC,GADP,IAEIE,UAAWD,WAxGF,WACzB,IAAMtS,EAAOmM,GAAiBR,sBAAsB3L,KAAK8S,QAAO,SAACxH,EAAMmG,EAAGI,GACtE,IAAM1G,EAAU,GAehB,OAdAgB,GAAiBR,sBAAsBR,QAAQsC,KAAI,SAAA6G,GAC/C,IAAMpb,EAAYob,EAAOzI,aAAe,WAAa,GAWrD,OAVAV,EAAQuJ,KAAK,CACTrU,MAAOiU,EAAO1I,aACdL,MAAO+I,EAAO/I,MACdC,SAAU8I,EAAO9I,SACjB+G,UAAW,KACXC,eAAgB6B,EAAkBC,GAClCpb,UAAWA,EACXwS,SAAU4I,EAAO5I,SACjBiG,WAAY2C,EAAO/I,QAAUpS,EAAMqC,YAAYsB,UAAUE,aAAe+S,GAAc,OAEnFuE,KAEJhJ,EAAKyH,OAAO,CAAC5H,MACrB,IACH0I,EAAgB7T,EAAKyN,KAAI,SAAC2E,EAAGzE,GACzB,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAA4B,WAAZD,EAAE9G,MAAqBgH,EAAU5E,EAAO3N,GAAQ,KACtE,OAAO,2BACAqS,GADP,IAEIE,UAAWD,WAqFnBqC,KAELpU,GAGC,qCACI,sBAAKrH,UAAU,OAAf,UACI,cAAC,GAAD,CACIiS,QAASgB,GAAiBR,sBAAsBR,QAChDnL,KAAM4T,EACN9D,iBAAkByE,IAEtB,qBAAKrb,UAAU,sDAAsDmJ,QAAS,SAACb,GAAD,OA3FvE,SAACA,GAChBA,EAAEoT,iBACF,IAAMzJ,EAAU,GAChBgB,GAAiBR,sBAAsBR,QAAQsC,KAAI,SAAA6G,GAC/C,IAAMpb,EAAYob,EAAOzI,aAAe,WAAa,GAWrD,OAVAV,EAAQuJ,KAAK,CACTrU,MAAOiU,EAAO1I,aACdL,MAAO+I,EAAO/I,MACdC,SAAU8I,EAAO9I,SACjB+G,UAAW,KACXC,eAAgB6B,EAAkBC,GAClCpb,UAAWA,EACXwS,SAAU4I,EAAO5I,SACjBiG,WAAY2C,EAAO/I,QAAUpS,EAAMqC,YAAYsB,UAAUE,aAAe+S,GAAc,OAEnFuE,KAEX,IAAMO,EAAe,sBACdjB,GADc,CAEjBzI,IAEJ0I,EAAgBgB,EAAgBpH,KAAI,SAAC2E,EAAGzE,GACpC,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAA4B,WAAZD,EAAE9G,MAAqBgH,EAAU5E,EAAOkH,GAAmB,KACjF,OAAO,2BACAxC,GADP,IAEIE,UAAWD,WAiEsEwC,CAAWtT,IAAhG,iCAEJ,qBAAKtI,UAAU,aAAf,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUqK,QAAS,SAACb,IAjDxB,WACjB,IAAIuT,GAAkB,EAChBC,EAAoB7D,KAAEC,UAAUwC,GACtCoB,EAAkBvH,KAAI,SAAA3B,GAQlB,OAPAA,EAAI2B,KAAI,SAAA2B,GAKJ,OAJGA,EAAK5D,UAA2B,KAAf4D,EAAK/O,QACrB0U,GAAkB,EAClB3F,EAAKlW,UAAY,cAEdkW,KAEJtD,KAGPiJ,GAGA9T,QAAQC,IAAI,eAAgB0S,GAC5BrT,EAAMkT,QAHNc,EAA0BS,GAkCkBtB,IAAxC,oBAKAI,GAAyB,cAAC3R,GAAD,CACrBN,eAAgBiS,EAChB9R,aA/JK,WACjB+R,GAAyB,GACzBE,EAAa,OA8JD7S,SA3Jc,SAACoB,GAC3BA,EAAKxC,KAAKiV,OAAOzS,EAAKqP,OAAQ,GAC9BgC,EAAgBrR,EAAKxC,KAAKyN,KAAI,SAAC2E,EAAGzE,GAC9B,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAA4B,WAAZD,EAAE9G,MAAqBgH,EAAU5E,EAAOnL,EAAKxC,MAAQ,KAC3E,OAAO,2BACAqS,GADP,IAEIE,UAAWD,WAIvByB,GAAyB,GACzBE,EAAa,OAgJD7R,WAAY,aACZM,UAAW,4CACXJ,cAAe,CAACC,YAAa,SAAUE,aAAc,OACrDD,KAAMwR,O,cClLX,SAASkB,GAAW3U,GAC/B,IAAQ4U,EAAUC,KAAVD,MACR,EAA8CpG,mBAAS,IAAvD,mBAAOsG,EAAP,KAAwBC,EAAxB,KACA,EAAoEvG,mBAAS,IAA7E,mBAAOwG,EAAP,KAAmCC,EAAnC,KA2CMC,EAAyB,SAAC9H,GAI5B,OAHuBxB,GAAiBJ,wBAAwB/L,KAAK8S,QAAO,SAACxH,EAAMmG,EAAGI,GAClF,OAAOvG,EAAKyH,OA3CS,SAACtB,GAC1B,OAAOA,EAAEnG,KAAKmC,KAAI,SAAAxN,GACd,IAAMkL,EAAU,GAuBhB,OAtBAgB,GAAiBJ,wBAAwBZ,QAAQsC,KAAI,SAAA6G,GACjD,IAAMoB,EAA8B,SAAjBpB,EAAO/I,MAAmBtL,EAAQ,GACjDuO,EAAM,KAkBV,OAhBIA,EADiB,SAAjB8F,EAAO/I,MACD,CACFlL,MAAOqV,EACPnK,MAAO+I,EAAO/I,MACdmG,UAAU,EACVlC,eAAe,GAGb,CACFnP,MAAOqV,EACPnK,MAAO+I,EAAO/I,MACdC,SAAU8I,EAAO9I,SACjBmG,WAAY5B,GACZrE,SAAU4I,EAAO5I,UAGzBP,EAAQuJ,KAAKlG,GACN8F,KAEJnJ,KAkBYwK,CAAqBlE,MACzC,KAIDmE,EAAoC,SAACjI,GAIvC,OAHkCxB,GAAiBH,mCAAmChM,KAAK8S,QAAO,SAACxH,EAAMmG,EAAGI,GACxG,OAAOvG,EAAKyH,OAlBoB,SAACtB,GACrC,OAAOA,EAAEnG,KAAKmC,KAAI,SAAA3B,GACd,MAAO,CACH,CAAEzL,MAAO,GAAIkL,MAAOO,EAAIP,MAAOG,SAAUI,EAAIJ,SAAUiG,WAAY5B,GAAa2B,SAAW5F,EAAIP,QAAUpS,EAAMqC,YAAYsC,wBAAwBC,aACnJ,CAAEsC,MAAOyL,EAAI7L,MAAOyR,UAAU,EAAMlC,eAAe,OAcpCqG,CAAgCpE,MACpD,KAIDqE,EAAe,SAACC,GAClB,MAAyB,kBAAdA,EACAjJ,WAAWiJ,EAAUhJ,QAAQ,KAAM,KAEnCgJ,GAITC,EAAkB,SAACC,EAAYtI,GACjC,IAAMuI,EAAeD,EAAWtI,GAAOQ,MAAK,SAAAgI,GAAC,MAAgB,aAAZA,EAAE5K,SAAsBlL,OAAS,EAC5E+V,EAAaH,EAAWtI,GAAOQ,MAAK,SAAAgI,GAAC,MAAgB,QAAZA,EAAE5K,SAAiBlL,OAAS,EACrEgW,EAAYJ,EAAWtI,GAAOQ,MAAK,SAAAgI,GAAC,MAAgB,OAAZA,EAAE5K,SAAgBlL,OAAS,EACzE,GAAI6V,EAAc,CACd,GAAa,GAATvI,EAAY,CACZ,IAAM2I,EAAiBL,EAAWtI,EAAQ,GAAGQ,MAAK,SAAAgI,GAAC,MAAgB,QAAZA,EAAE5K,SAAiBlL,OAAS,EAC7EkW,EAAOT,EAAaI,GAAgBJ,EAAaQ,GACvD,OAAsC,QAA/B,SAAAR,EAAaO,GAAc,GAAgBE,EAElD,IAAMC,EAAaP,EAAWtI,EAAQ,GAAGQ,MAAK,SAAAgI,GAAC,MAAgB,QAAZA,EAAE5K,SAAiBlL,OAAS,EAC/E,OAAImW,EACsC,QAA/B,SAAAV,EAAaO,GAAc,IAA0B,GAAT1I,EAAamI,EAAaU,GAAeV,EAAaU,GAAcV,EAAaM,IAE9F,QAA/B,SAAAN,EAAaO,GAAc,IAA0B,GAAT1I,EAAamI,EAAaI,GAAiBJ,EAAaI,GAAgBJ,EAAaM,MAMlJK,EAAiC,SAACC,EAAiBC,EAAoBhJ,GACzE,IAGMiJ,GAHeZ,EAAgBU,EAAiB,IAGjB,IAFfV,EAAgBU,EAAiB,IAEK,IADtCV,EAAgBU,EAAiB,IAC4B,GAC7EG,EAA4B1F,KAAEC,UAAUuF,GAA0CpB,GAClFuB,EAAaD,EAA0BlJ,GAAO,GAAGQ,MAAK,SAAA4I,GAAG,MAAkB,gBAAdA,EAAIxL,SAAyBlL,OAAS,EACnG2W,EAAOlB,EAAac,GAAed,EAAagB,GAChDG,EAAiB,GAAPD,EAChBH,EAA0BlJ,GAAO,GAAGQ,MAAK,SAAA+I,GAAC,MAAgB,SAAZA,EAAE3L,SAAkBlL,MAAQ2W,EAAKG,UAC/EN,EAA0BlJ,GAAO,GAAGQ,MAAK,SAAA+I,GAAC,MAAgB,YAAZA,EAAE3L,SAAqBlL,MAAQ4W,EAAQE,UACrF5W,EAAM6W,kCAAkCP,GACxCrB,EAA8BqB,IAG5BQ,EAA8B,SAACnF,EAAiBvE,GAClD,IAAM2J,EAAiBnG,KAAEC,UAAUiE,GACnCoB,EAA+BvE,EAAiB,KAAMvE,GACtD2J,EAAe3J,GAASuE,EACxB3R,EAAMgX,uBAAuBD,GAC7BhC,EAAmBgC,IAGjBE,EAAyC,SAACtF,EAAiBvE,GAC7D,IAAMkJ,EAA4B1F,KAAEC,UAAUmE,GAC9CsB,EAA0BlJ,GAASuE,EACnCuE,EAA+BpB,EAAgB1H,GAAQkJ,EAA2BlJ,IAkEtF,OAtBAoB,oBAAS,WACL,GAAGxO,EAAMkX,eAAgB,CACrB,IAAIC,EAAqB,GACrBC,EAAgC,GACpCpX,EAAMkX,eAAehK,KAAI,SAACmK,EAAejK,GAWrC,OAViC,MAA9BpN,EAAMsX,sBAAgCtX,EAAMsX,qBAAqBlK,GAChE+J,EAAmBhD,KAAKnU,EAAMsX,qBAAqBlK,IAEnD+J,EAAmBhD,KAAKe,KAEgB,MAAzClV,EAAMuX,iCAA2CvX,EAAMuX,gCAAgCnK,GACtFgK,EAA8BjD,KAAKnU,EAAMuX,gCAAgCnK,IAEzEgK,EAA8BjD,KAAKkB,KAEhCgC,KAEXtC,EAAmBoC,GACnBlC,EAA8BmC,MAEnCpX,GAGC,qCACI,cAAC,KAAD,CAAUwX,iBAAkB,CAAC,KAAMlX,SApJ1B,SAACuK,KAoJV,SAEI7K,EAAMkX,gBAAkBlX,EAAMkX,eAAehK,KAAI,SAAC5E,EAAM8E,GACpD,OAAO,cAACwH,EAAD,CACH6C,OAAQnP,EAAK,GAAGxI,MAEhB4X,MACI5C,EAAgB1H,IAAU0H,EAAgB1H,GAAOQ,MAAK,SAAArC,GAAG,QAAIA,EAAIqC,MAAK,SAAAiB,GAAI,OAAIA,EAAK9N,YACjF,cAAC,KAAD,CAASxB,MAAM,6BAAf,SAA4C,mBAAG5G,UAAU,6CACzD,GANH,SASH,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,cAAC,GAAD,CACIiS,QAASgB,GAAiBJ,wBAAwBZ,QAClDnL,KAAMqV,EAAgB1H,GACtBmC,iBAAkBuH,EAClB1J,MAAOA,MAGf,qBAAKzU,UAAU,QACf,qBAAKA,UAAU,8BAAf,SACI,cAAC,GAAD,CACIiS,QAASgB,GAAiBH,mCAAmCb,QAAQtC,EAAK,GAAGxI,OAC7EL,KAAMuV,EAA2B5H,GACjCmC,iBAAkB0H,EAClB7J,MAAOA,QAfQA,IAPtBA,EAAM,QA8BvB,qBAAKzU,UAAU,kBAAf,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUqK,QAAS,SAACb,IArGxB,WACjB,IAAI0W,GAAY,EACVC,EAAuBhH,KAAEC,UAAUiE,GACrC+C,EAA2B,GAuB/B,GAtBAD,EAAqB1K,KAAI,SAACzN,EAAM2N,GAC5B,IAAI0K,GAAoB,EAClBC,EAAgBtY,EAAKyN,KAAI,SAAA3B,GAU3B,OATqBA,EAAI2B,KAAI,SAAA2B,GAOzB,OANGA,EAAK5D,UAA2B,KAAf4D,EAAK/O,QACrBgY,GAAoB,EACpBH,GAAY,EACZ9I,EAAKlW,UAAY,aACjBkW,EAAK9N,OAAQ,GAEV8N,QASf,OAJIiJ,GACAD,EAAyB1D,KAAK,CAAC1U,KAAMsY,EAAe3K,MAAOA,IAGxD3N,KAGRkY,EACCjX,QAAQC,IAAI,kBAAmBmU,GAC/BpU,QAAQC,IAAI,6BAA8BqU,GAC1ChV,EAAMkT,WACH,CACH,IAAM6D,EAAiBnG,KAAEC,UAAUiE,GACnC+C,EAAyB3K,KAAI,SAAAkC,GAEzB,OADA2H,EAAe3H,EAAShC,OAASgC,EAAS3P,KACnC2P,KAEXpP,EAAMgX,uBAAuBD,GAC7BhC,EAAmBgC,IAgEyB5D,IAAxC,uB,ICrMD6E,G,oDA5BX,WAAahY,GAAQ,IAAD,+BAClB,cAAMA,IACDyP,aAAe,EAAKA,aAAaC,KAAlB,iBAFF,E,sDAKpB,WACEC,KAAKC,OAAOjQ,U,0BAGd,SAAcsB,GACZ0O,KAAK3P,MAAMM,SAASW,EAAE4O,OAAO/P,S,oBAG/B,WAAW,IAAD,OACR,EAA2B6P,KAAK3P,MAAzBF,EAAP,EAAOA,MAAOgQ,EAAd,EAAcA,UACd,OACE,uBACEC,IAAK,SAAAC,GAAW,EAAKJ,OAASI,GAC9BvY,KAAK,WACLkB,UAAU,gCACVmH,MAAOA,EACPQ,SAAUqP,KAAKF,aACfK,UAAWA,Q,GAvBOG,iBCQb,SAASgI,GAAWjY,GAE/B,MAA4CwO,mBAAS,IAArD,mBAAO0J,EAAP,KAAuBC,EAAvB,KACA,EAA0D3J,qBAA1D,mBAAO+E,EAAP,KAA8BC,EAA9B,KACA,EAAkChF,qBAAlC,mBAAOiF,EAAP,KAAkBC,EAAlB,KA+BM1B,EAAY,SAACV,EAAQ7R,GACvB,OAAO,cAACkU,EAAA,EAAD,CAAqB7R,QAAS,SAAC8R,GAAD,OA9B1B,SAACtC,EAAQ7R,GACpB+T,GAAyB,GACzBE,EAAa,CACTpC,SACA7R,SA0B4CoU,CAAOvC,EAAQ7R,OAoB7D2Y,EAAyB,WAC3B,IAAM3Y,EAAOmM,GAAiBC,wBAAwBpM,KAAK8S,QAAO,SAACxH,EAAMmG,EAAGI,GACxE,OAAOvG,EAAKyH,OAnBS,SAACtB,GAC1B,OAAOA,EAAEnG,KAAKmC,KAAI,SAAAxN,GACd,IAAMkL,EAAU,GAWhB,OAVAgB,GAAiBC,wBAAwBjB,QAAQsC,KAAI,SAAA6G,GAQjD,OAPAnJ,EAAQuJ,KAAK,CACTrU,MAAO,GACPkL,MAAO+I,EAAO/I,MACdC,SAAU8I,EAAO9I,SACjBmG,WAAY2C,EAAO/I,QAAUpS,EAAMqC,YAAY0C,YAAYG,SAAWka,GAAgB,KACtFrf,UAAWob,EAAO/I,QAAUpS,EAAMqC,YAAY0C,YAAYG,SAAW,gBAAiBiW,EAAOpb,YAE1Fob,KAEJnJ,KAMYyN,CAAqBnH,MACzC,IACHiH,EAAkB1Y,EAAKyN,KAAI,SAAC2E,EAAGzE,GAC3B,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAgBD,EAAE9G,QAAUpS,EAAMqC,YAAY0C,YAAYI,OAASiU,EAAU5E,EAAO3N,GAAQ,KAClG,OAAO,2BACAqS,GADP,IAEIE,UAAWD,EACXE,eAAgBH,EAAE9G,QAAUpS,EAAMqC,YAAY0C,YAAYI,iBAmCpEua,EAA8B,SAAC3G,GACjC3R,EAAMiU,aAAatC,GACnBwG,EAAkBxG,EAAgBzE,KAAI,SAAC2E,EAAGzE,GACtC,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAgBD,EAAE9G,QAAUpS,EAAMqC,YAAY0C,YAAYI,OAASiU,EAAU5E,EAAOuE,GAAmB,KAC7G,OAAO,2BACAG,GADP,IAEIE,UAAWD,EACXE,eAAgBH,EAAE9G,QAAUpS,EAAMqC,YAAY0C,YAAYI,iBA4C1E,OAjBAyQ,oBAAS,WACkB,MAApBxO,EAAMkU,WACLlU,EAAMkU,YAAciE,EAAkBnY,EAAMkU,WAAWhH,KAAI,SAAC2E,EAAGzE,GAC3D,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAgBD,EAAE9G,QAAUpS,EAAMqC,YAAY0C,YAAYI,OAASiU,EAAU5E,EAAOpN,EAAMkU,YAAc,KAC9G,OAAO,2BACApC,GADP,IAEIE,UAAWD,EACXE,eAAgBH,EAAE9G,QAAUpS,EAAMqC,YAAY0C,YAAYI,gBAKtEqa,MAELpY,GAGC,qCACI,sBAAKrH,UAAU,OAAOwV,MAAO,CAACrD,MAAO,MAAO6H,WAAY,OAAQC,YAAa,QAA7E,UACI,cAAC,GAAD,CACIhI,QAASgB,GAAiBC,wBAAwBjB,QAClDnL,KAAMyY,EACN3I,iBAAkB+I,IAEtB,qBAAK3f,UAAU,sDAAsDmJ,QAAS,SAACb,GAAD,OAzFrE,SAACA,GAClBA,EAAEoT,iBACF,IAAMzJ,EAAU,GAChBgB,GAAiBC,wBAAwBjB,QAAQsC,KAAI,SAAA6G,GAQjD,OAPAnJ,EAAQuJ,KAAK,CACTrU,MAAO,GACPkL,MAAO+I,EAAO/I,MACdC,SAAU8I,EAAO9I,SACjBmG,WAAY2C,EAAO/I,QAAUpS,EAAMqC,YAAY0C,YAAYG,SAAWka,GAAgB,KACtFrf,UAAWob,EAAO/I,QAAUpS,EAAMqC,YAAY0C,YAAYG,SAAW,gBAAkBiW,EAAOpb,YAE3Fob,KAEX,IAAMwE,EAAiB,sBAChBL,GADgB,CAEnBtN,IAEJuN,EAAkBI,EAAkBrL,KAAI,SAAC2E,EAAGzE,GACxC,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAgBD,EAAE9G,QAAUpS,EAAMqC,YAAY0C,YAAYI,OAASiU,EAAU5E,EAAOmL,GAAqB,KAC/G,OAAO,2BACAzG,GADP,IAEIE,UAAWD,EACXE,eAAgBH,EAAE9G,QAAUpS,EAAMqC,YAAY0C,YAAYI,gBAkEuBya,CAAavX,IAAlG,mCAEJ,qBAAKtI,UAAU,aAAf,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUqK,QAAS,SAACb,IAjDxB,WACjB,IAAIwX,GAAoB,EAClBC,EAAsB9H,KAAEC,UAAUqH,GACxCQ,EAAoBxL,KAAI,SAAA3B,GAQpB,OAPAA,EAAI2B,KAAI,SAAA2B,GAKJ,OAJGA,EAAK5D,UAA2B,KAAf4D,EAAK/O,QACrB2Y,GAAoB,EACpB5J,EAAKlW,UAAY,cAEdkW,KAEJtD,KAGPkN,EAGAzY,EAAMkT,OAFNoF,EAA4BI,GAkCgBvF,IAAxC,oBAKAI,GAAyB,cAAC3R,GAAD,CACrBN,eAAgBiS,EAChB9R,aA7JK,WACjB+R,GAAyB,GACzBE,EAAa,OA4JD7S,SAzJc,SAACoB,GAC3BA,EAAKxC,KAAKiV,OAAOzS,EAAKqP,OAAQ,GAC9B6G,EAAkBlW,EAAKxC,KAAKyN,KAAI,SAAC2E,EAAGzE,GAChC,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAgBD,EAAE9G,QAAUpS,EAAMqC,YAAY0C,YAAYI,OAASiU,EAAU5E,EAAOnL,EAAKxC,MAAQ,KACvG,OAAO,2BACAqS,GADP,IAEIE,UAAWD,EACXE,eAAgBH,EAAE9G,QAAUpS,EAAMqC,YAAY0C,YAAYI,gBAItEyV,GAAyB,GACzBE,EAAa,OA6ID7R,WAAY,aACZM,UAAW,4CACXJ,cAAe,CAACC,YAAa,SAAUE,aAAc,OACrDD,KAAMwR,O,wBCvIXkF,G,oDA9Cb,WAAa3Y,GAAQ,IAAD,+BAClB,cAAMA,IACDyP,aAAe,EAAKA,aAAaC,KAAlB,iBACpB,EAAKkJ,cAAgB,EAAKA,cAAclJ,KAAnB,iBACrB,EAAKnY,MAAQ,GAJK,E,iDAOpB,SAAcshB,GACZ,MAA6BlJ,KAAK3P,MAA3B8Y,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,SACjB,IAAKF,EACH,OAAOE,IAET,IAAQ9X,EAAM0O,KAAKpY,MAAX0J,EACR6X,EAASD,EAAI/Y,MAAOmB,GACpBP,QAAQC,IAAI,YAAakY,EAAI/Y,S,2BAG/B,SAAemB,GAETA,EAAE+X,QAAUC,cAAahY,EAAE+X,QAAUE,YACvCjY,EAAEkY,UACFxJ,KAAKyJ,SAAS,CAAEnY,OAEhB0O,KAAKyJ,SAAS,CAAEnY,EAAG,S,oBAIvB,WACE,OACE,cAAC,KAAD,CACEoY,WAAS,EACTC,aAAW,EACXC,eAAa,EACbzZ,MAAO6P,KAAK3P,MAAMF,MAClBQ,SAAUqP,KAAKF,aACf+J,eAAgB7J,KAAKiJ,cACrBa,QAAS,CACP,CAAC/Z,MAAO,sBAAuBI,MAAO,uBACtC,CAACJ,MAAO,iBAAkBI,MAAO,mBAEnC4Z,gBAAgB,0B,GAzCGzJ,iBCOZ,SAAS0J,GAAS3Z,GAE7B,MAAwCwO,mBAAS,IAAjD,mBAAOoL,EAAP,KAAqBC,EAArB,KACA,EAA0DrL,qBAA1D,mBAAO+E,EAAP,KAA8BC,EAA9B,KACA,EAAkChF,qBAAlC,mBAAOiF,EAAP,KAAkBC,EAAlB,KA+BM1B,EAAY,SAACV,EAAQ7R,GACvB,OAAO,cAACkU,EAAA,EAAD,CAAqB7R,QAAS,SAAC8R,GAAD,OA9B1B,SAACtC,EAAQ7R,GACpB+T,GAAyB,GACzBE,EAAa,CACTpC,SACA7R,SA0B4CoU,CAAOvC,EAAQ7R,OAG7Dqa,EAAa,SAAA9Z,GACf,IAAQF,EAAUE,EAAVF,MACFia,EAAc5a,EAAcU,aAAa+N,MAAK,SAAAoM,GAAE,OAAIA,EAAGla,QAAUA,KACvE,OACI,qBAAKnH,UAAU,iBAAf,SACKohB,EAAcA,EAAYra,MAAQ,MAsBzCua,EAAuB,WACzB,IAAMxa,EAAOmM,GAAiBE,sBAAsBrM,KAAK8S,QAAO,SAACxH,EAAMmG,EAAGI,GACtE,OAAOvG,EAAKyH,OAnBO,SAACtB,GACxB,OAAOA,EAAEnG,KAAKmC,KAAI,SAAA3B,GACd,IAAMX,EAAU,GAWhB,OAVAgB,GAAiBE,sBAAsBlB,QAAQsC,KAAI,SAAA6G,GAC/C,IAAI9F,EAAM,GAOV,OALIA,EADgB,SAAjB8F,EAAO/I,MACA,CAAElL,MAAOyL,EAAI7L,MAAOsL,MAAO+I,EAAO/I,MAAOoG,WAAYuH,GAAcuB,YAAaJ,EAAYnhB,UAAW,eAEvG,CAAEmH,MAAO,GAAIkL,MAAO+I,EAAO/I,MAAOC,SAAU8I,EAAO9I,SAAUtS,UAAWob,EAAOpb,WAEzFiS,EAAQuJ,KAAKlG,GACN8F,KAEJnJ,KAMYuP,CAAmBjJ,MACvC,IACH2I,EAAgBpa,EAAKyN,KAAI,SAAC2E,EAAGzE,GACzB,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAgBD,EAAE9G,QAAUpS,EAAMqC,YAAY+C,UAAUD,OAASiU,EAAU5E,EAAO3N,GAAQ,KAChG,OAAO,2BACAqS,GADP,IAEIE,UAAWD,EACXE,eAAgBH,EAAE9G,QAAUpS,EAAMqC,YAAY+C,UAAUD,iBAgDlEqc,EAA4B,SAACzI,GAC/B3R,EAAMiU,aAAatC,GACnBkI,EAAgBlI,EAAgBzE,KAAI,SAAC2E,EAAGzE,GACpC,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAgBD,EAAE9G,QAAUpS,EAAMqC,YAAY+C,UAAUD,OAASiU,EAAU5E,EAAOuE,GAAmB,KAC3G,OAAO,2BACAG,GADP,IAEIE,UAAWD,EACXE,eAAgBH,EAAE9G,QAAUpS,EAAMqC,YAAY+C,UAAUD,iBA4CxE,OAjBAyQ,oBAAS,WACkB,MAApBxO,EAAMkU,WACLlU,EAAMkU,YAAc2F,EAAgB7Z,EAAMkU,WAAWhH,KAAI,SAAC2E,EAAGzE,GACzD,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAgBD,EAAE9G,QAAUpS,EAAMqC,YAAY+C,UAAUD,OAASiU,EAAU5E,EAAOpN,EAAMkU,YAAc,KAC5G,OAAO,2BACApC,GADP,IAEIE,UAAWD,EACXE,eAAgBH,EAAE9G,QAAUpS,EAAMqC,YAAY+C,UAAUD,gBAKpEkc,MAELja,GAGC,qCACI,sBAAKrH,UAAU,OAAOwV,MAAO,CAACrD,MAAO,MAAO6H,WAAY,OAAQC,YAAa,QAA7E,UACI,cAAC,GAAD,CACIhI,QAASgB,GAAiBE,sBAAsBlB,QAChDnL,KAAMma,EACNrK,iBAAkB6K,IAEtB,qBAAKzhB,UAAU,sDAAsDmJ,QAAS,SAACb,GAAD,OAtGnE,SAACA,GACpBA,EAAEoT,iBACF,IAAMzJ,EAAU,GAChBgB,GAAiBE,sBAAsBlB,QAAQsC,KAAI,SAAA6G,GAC/C,IAAI9F,EAAM,GAOV,OALIA,EADgB,SAAjB8F,EAAO/I,MACA,CAAElL,MAAO,GAAIkL,MAAO+I,EAAO/I,MAAOoG,WAAYuH,GAAcuB,YAAaJ,EAAYnhB,UAAW,eAEhG,CAAEmH,MAAO,GAAIkL,MAAO+I,EAAO/I,MAAOC,SAAU8I,EAAO9I,SAAUtS,UAAWob,EAAOpb,WAEzFiS,EAAQuJ,KAAKlG,GACN8F,KAEX,IAAMsG,EAAe,sBACdT,GADc,CAEjBhP,IAEJiP,EAAgBQ,EAAgBnN,KAAI,SAAC2E,EAAGzE,GACpC,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAgBD,EAAE9G,QAAUpS,EAAMqC,YAAY+C,UAAUD,OAASiU,EAAU5E,EAAOiN,GAAmB,KAC3G,OAAO,2BACAvI,GADP,IAEIE,UAAWD,EACXE,eAAgBH,EAAE9G,QAAUpS,EAAMqC,YAAY+C,UAAUD,gBA+EyBuc,CAAerZ,IAApG,wCAGJ,qBAAKtI,UAAU,aAAf,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUqK,QAAS,SAACb,IAlDxB,WACjB,IAAIsZ,GAAkB,EAChBC,EAAoB5J,KAAEC,UAAU+I,GACtCY,EAAkBtN,KAAI,SAAA3B,GAQlB,OAPAA,EAAI2B,KAAI,SAAA2B,GAKJ,OAJGA,EAAK5D,UAA2B,KAAf4D,EAAK/O,QACrBya,GAAkB,EAClB1L,EAAKlW,UAAY,cAEdkW,KAEJtD,KAGPgP,EAGAva,EAAMkT,OAFNkH,EAA0BI,GAmCkBrH,IAAxC,oBAKAI,GAAyB,cAAC3R,GAAD,CACrBN,eAAgBiS,EAChB9R,aArLK,WACjB+R,GAAyB,GACzBE,EAAa,OAoLD7S,SAjLc,SAACoB,GAC3BA,EAAKxC,KAAKiV,OAAOzS,EAAKqP,OAAQ,GAC9BuI,EAAgB5X,EAAKxC,KAAKyN,KAAI,SAAC2E,EAAGzE,GAC9B,OAAOyE,EAAE3E,KAAI,SAAA4E,GACT,IAAMC,EAAgBD,EAAE9G,QAAUpS,EAAMqC,YAAY+C,UAAUD,OAASiU,EAAU5E,EAAOnL,EAAKxC,MAAQ,KACrG,OAAO,2BACAqS,GADP,IAEIE,UAAWD,EACXE,eAAgBH,EAAE9G,QAAUpS,EAAMqC,YAAY+C,UAAUD,gBAIpEyV,GAAyB,GACzBE,EAAa,OAqKD7R,WAAY,aACZM,UAAW,4CACXJ,cAAe,CAACC,YAAa,SAAUE,aAAc,OACrDD,KAAMwR,OC5MX,SAASgH,GAAUza,GAE9B,MAA0CwO,mBAAS,IAAnD,mBAAOkM,EAAP,KAAsBC,EAAtB,KAYMC,EAAwB,WAC1BD,EAAiB/O,GAAiBO,uBAAuB1M,KAAK8S,QAAO,SAACxH,EAAMmG,EAAGI,GAC3E,OAAOvG,EAAKyH,OAZQ,SAACtB,GACzB,OAAOA,EAAEnG,KAAKmC,KAAI,SAAA3B,GAEd,OADA7K,QAAQC,IAAI4K,EAAIP,OACT,CACH,CAAElL,MAAOyL,EAAI7L,MAAOyR,UAAU,EAAMlC,eAAe,GACnD,CAAEnP,MAAO,GAAIkL,MAAOO,EAAIP,MAAOoG,WAAY5B,GAAavE,SAAUM,EAAIN,SAAUE,SAAUI,EAAIJ,cAO/E0P,CAAoB3J,MACxC,MAGD4J,EAA6B,SAACnJ,GAChCjR,QAAQC,IAAIgR,GACZ3R,EAAMiU,aAAatC,GACnBgJ,EAAiBhJ,IA+BrB,OARAnD,oBAAS,WACkB,MAApBxO,EAAMkU,WACLlU,EAAMkU,YAAcyG,EAAiB3a,EAAMkU,YAE3C0G,MAEL5a,GAGC,qCACI,qBAAKrH,UAAU,OAAOwV,MAAO,CAACrD,MAAO,MAAO6H,WAAY,OAAQC,YAAa,QAA7E,SACI,cAAC,GAAD,CACIhI,QAASgB,GAAiBO,uBAAuBvB,QACjDnL,KAAMib,EACNnL,iBAAkBuL,MAG1B,qBAAKniB,UAAU,aAAf,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUqK,QAAS,SAACb,IAtCvB,WAClB,IAAI8Z,GAAuB,EACrBC,EAAyBpK,KAAEC,UAAU6J,GAC3CM,EAAuB9N,KAAI,SAAA3B,GAQvB,OAPAA,EAAI2B,KAAI,SAAA2B,GAKJ,OAJGA,EAAK5D,UAA2B,KAAf4D,EAAK/O,QACrBib,GAAuB,EACvBlM,EAAKlW,UAAY,cAEdkW,KAEJtD,KAEPwP,EAGA/a,EAAMib,sBAFNH,EAA2BE,GAwBiBE,IAAxC,iCCjED,SAASC,GAAYnb,GAEhC,MAA8CwO,mBAAS,IAAvD,mBAAO4M,EAAP,KAAwBC,EAAxB,KAYMC,EAA0B,WAC5BD,EAAmBzP,GAAiBQ,yBAAyB3M,KAAK8S,QAAO,SAACxH,EAAMmG,EAAGI,GAC/E,OAAOvG,EAAKyH,OAZU,SAACtB,GAC3B,OAAOA,EAAEnG,KAAKmC,KAAI,SAAA3B,GAEd,OADA7K,QAAQC,IAAI4K,EAAIP,OACT,CACH,CAAElL,MAAOyL,EAAI7L,MAAOyR,UAAU,EAAMlC,eAAe,GACnD,CAAEnP,MAAO,GAAIkL,MAAOO,EAAIP,MAAOC,SAAUM,EAAIN,cAO9BsQ,CAAsBrK,MAC1C,MAGDsK,EAA+B,SAAC7J,GAClCjR,QAAQC,IAAIgR,GACZ3R,EAAMiU,aAAatC,GACnB0J,EAAmB1J,IA+BvB,OARAnD,oBAAS,WACkB,MAApBxO,EAAMkU,WACLlU,EAAMkU,YAAcmH,EAAmBrb,EAAMkU,YAE7CoH,MAELtb,GAGC,qCACI,qBAAKrH,UAAU,OAAOwV,MAAO,CAACrD,MAAO,MAAO6H,WAAY,OAAQC,YAAa,QAA7E,SACI,cAAC,GAAD,CACIhI,QAASgB,GAAiBQ,yBAAyBxB,QACnDnL,KAAM2b,EACN7L,iBAAkBiM,EAClB7iB,UAAU,0BAGlB,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUqK,QAAS,SAACb,IAvCxB,WACjB,IAAIwa,GAAqB,EACnBC,EAA2B9K,KAAEC,UAAUuK,GAC7CM,EAAyBxO,KAAI,SAAA3B,GAQzB,OAPAA,EAAI2B,KAAI,SAAA2B,GAKJ,OAJGA,EAAK5D,UAA2B,KAAf4D,EAAK/O,QACrB2b,GAAqB,EACrB5M,EAAKlW,UAAY,cAEdkW,KAEJtD,KAEPkQ,EAGAzb,EAAMkT,OAFNsI,EAA6BE,GAyBevI,IAAxC,uBCpDhB,IAAQwI,GAASC,KAATD,KChBR,IA4deE,GAPG,CACdC,iBAtdqB,CACrB,CACIjR,IAAK,IACLkR,WAAY,UACZC,aAAc,eACdC,WAAY,eACZC,gBAAiB,aACjBC,aAAc,YAElB,CACItR,IAAK,IACLkR,WAAY,UACZC,aAAc,iBACdC,WAAY,YACZC,gBAAiB,aACjBC,aAAc,YAElB,CACItR,IAAK,IACLkR,WAAY,UACZC,aAAc,eACdC,WAAY,kBACZC,gBAAiB,aACjBC,aAAc,YAElB,CACItR,IAAK,IACLkR,WAAY,UACZC,aAAc,eACdC,WAAY,YACZC,gBAAiB,aACjBC,aAAc,YAElB,CACItR,IAAK,IACLkR,WAAY,UACZC,aAAc,eACdC,WAAY,eACZC,gBAAiB,aACjBC,aAAc,YAElB,CACItR,IAAK,IACLkR,WAAY,UACZC,aAAc,eACdC,WAAY,eACZC,gBAAiB,aACjBC,aAAc,YAElB,CACItR,IAAK,IACLkR,WAAY,UACZC,aAAc,iBACdC,WAAY,YACZC,gBAAiB,aACjBC,aAAc,YAElB,CACItR,IAAK,IACLkR,WAAY,UACZC,aAAc,eACdC,WAAY,kBACZC,gBAAiB,aACjBC,aAAc,YAElB,CACItR,IAAK,IACLkR,WAAY,UACZC,aAAc,eACdC,WAAY,YACZC,gBAAiB,aACjBC,aAAc,YAElB,CACItR,IAAK,KACLkR,WAAY,UACZC,aAAc,eACdC,WAAY,eACZC,gBAAiB,aACjBC,aAAc,aAwYlBC,eApYmB,CACnB,CACIvR,IAAK,IACLwR,UAAW,SACXC,SAAU,cAAC,IAAKC,KAAN,CACNnc,KAAK,YACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALP,SASN,cAAC,IAAD,CAAO2b,YAAY,6BAEvBC,UAAW,cAAC,IAAKH,KAAN,CACPnc,KAAK,aACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALN,SASP,cAAC,IAAD,CAAO2b,YAAY,6BAEvBE,IAAK,cAAC,IAAKJ,KAAN,CACDnc,KAAK,OACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALZ,SASD,cAAC,IAAD,CAAO2b,YAAY,6BAEvBG,QAAS,cAAC,IAAKL,KAAN,CACLnc,KAAK,WACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALR,SASL,cAAC,IAAD,CAAO2b,YAAY,6BAEvBI,SAAU,cAAC,IAAKN,KAAN,CACNnc,KAAK,YACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALP,SASN,cAAC,IAAD,CAAO2b,YAAY,8BAG3B,CACI5R,IAAK,IACLwR,UAAW,SACXC,SAAU,cAAC,IAAKC,KAAN,CACNnc,KAAK,YACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALP,SASN,cAAC,IAAD,CAAO2b,YAAY,6BAEvBC,UAAW,cAAC,IAAKH,KAAN,CACPnc,KAAK,aACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALN,SASP,cAAC,IAAD,CAAO2b,YAAY,6BAEvBE,IAAK,cAAC,IAAKJ,KAAN,CACDnc,KAAK,OACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALZ,SASD,cAAC,IAAD,CAAO2b,YAAY,6BAEvBG,QAAS,cAAC,IAAKL,KAAN,CACLnc,KAAK,WACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALR,SASL,cAAC,IAAD,CAAO2b,YAAY,6BAEvBI,SAAU,cAAC,IAAKN,KAAN,CACNnc,KAAK,YACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALP,SASN,cAAC,IAAD,CAAO2b,YAAY,8BAG3B,CACI5R,IAAK,IACLwR,UAAW,SACXC,SAAU,cAAC,IAAKC,KAAN,CACNnc,KAAK,YACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALP,SASN,cAAC,IAAD,CAAO2b,YAAY,6BAEvBC,UAAW,cAAC,IAAKH,KAAN,CACPnc,KAAK,aACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALN,SASP,cAAC,IAAD,CAAO2b,YAAY,6BAEvBE,IAAK,cAAC,IAAKJ,KAAN,CACDnc,KAAK,OACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALZ,SASD,cAAC,IAAD,CAAO2b,YAAY,6BAEvBG,QAAS,cAAC,IAAKL,KAAN,CACLnc,KAAK,WACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALR,SASL,cAAC,IAAD,CAAO2b,YAAY,6BAEvBI,SAAU,cAAC,IAAKN,KAAN,CACNnc,KAAK,YACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,KALP,SASN,cAAC,IAAD,CAAO2b,YAAY,+BAsN3BK,YAjNgB,CAChB,cAAiB,CACb,SAAY,IACZ,SAAY,IACZ,OAAU,IACV,QAAW,IACX,QAAW,IACX,MAAS,IACT,MAAS,IACT,WAAc,KAElB,cAAiB,CACb,SAAY,IACZ,OAAU,IACV,YAAe,IACf,mBAAsB,IACtB,mBAAsB,IACtB,SAAY,IACZ,gBAAmB,IACnB,iBAAoB,KAExB,eAAkB,CACd,CACIC,GAAI,EACJ,UAAa,cACb,aAAgB,IAChB,SAAY,IACZ,UAAa,IACb,IAAO,IACP,QAAW,IACX,SAAY,KAEhB,CACIA,GAAI,EACJ,UAAa,cACb,aAAgB,IAChB,SAAY,IACZ,UAAa,IACb,IAAO,IACP,QAAW,IACX,SAAY,MAGpB,iBAAoB,CAChB,CACI,CACI,KAAQ,SACR,GAAM,IACN,GAAM,IACN,GAAM,IACN,SAAY,IACZ,IAAO,KAEX,CACI,KAAQ,WACR,GAAM,IACN,GAAM,IACN,GAAM,IACN,SAAY,IACZ,IAAO,KAEX,CACI,KAAQ,WACR,GAAM,IACN,GAAM,IACN,GAAM,IACN,SAAY,IACZ,IAAO,MAGf,CACI,CACI,KAAQ,SACR,GAAM,IACN,GAAM,IACN,GAAM,IACN,SAAY,IACZ,IAAO,KAEX,CACI,KAAQ,IACR,GAAM,IACN,GAAM,IACN,GAAM,IACN,SAAY,KACZ,IAAO,KAEX,CACI,KAAQ,WACR,GAAM,IACN,GAAM,IACN,GAAM,IACN,SAAY,IACZ,IAAO,OAInB,4BAA+B,GAC/B,iBAAoB,CAChB,CACI,eAAkB,IAClB,MAAS,IACT,SAAY,MAGpB,eAAkB,CACd,CACI,KAAQ,sBACR,KAAQ,IACR,QAAW,KAEf,CACI,KAAQ,iBACR,KAAQ,IACR,QAAW,KAEf,CACI,KAAQ,iBACR,KAAQ,IACR,QAAW,KAEf,CACI,KAAQ,iBACR,KAAQ,IACR,QAAW,MAGnB,gBAAmB,CACf,SAAY,IACZ,UAAa,IACb,OAAU,IACV,YAAe,IACf,YAAe,IACf,eAAkB,IAClB,QAAW,MA4EfC,aAxEiB,CACjB,CACInS,IAAK,IACL5H,MAAO,IACPga,SAAU,EACVC,UAAW,EACXC,GAAI,GACJC,GAAI,IACJC,YAAa,IACbvS,MAAO,GACPwS,OAAQ,IACRC,kBAAmB,GACnBC,cAAe,KAEnB,CACI3S,IAAK,IACL5H,MAAO,IACPga,SAAU,EACVC,UAAW,EACXC,GAAI,GACJC,GAAI,IACJC,YAAa,IACbvS,MAAO,GACPwS,OAAQ,IACRC,kBAAmB,GACnBC,cAAe,KAEnB,CACI3S,IAAK,IACL5H,MAAO,IACPga,SAAU,EACVC,UAAW,EACXC,GAAI,GACJC,GAAI,IACJC,YAAa,IACbvS,MAAO,GACPwS,OAAQ,IACRC,kBAAmB,GACnBC,cAAe,KAEnB,CACI3S,IAAK,IACL5H,MAAO,IACPga,SAAU,EACVC,UAAW,EACXC,GAAI,GACJC,GAAI,IACJC,YAAa,IACbvS,MAAO,GACPwS,OAAQ,IACRC,kBAAmB,GACnBC,cAAe,KAEnB,CACI3S,IAAK,IACL5H,MAAO,IACPga,SAAU,EACVC,UAAW,EACXC,GAAI,GACJC,GAAI,IACJC,YAAa,IACbvS,MAAO,GACPwS,OAAQ,IACRC,kBAAmB,GACnBC,cAAe,O,2CCldvB,ICIeC,GAJI,CACfC,YDwBgB,CAChBC,aA1BiB,SAACzmB,GAAD,MAAW,CAC5BO,KAAMZ,EACNa,QAAS,CACLR,UAwBJ0mB,cApBkB,iBAAO,CACzBnmB,KAAMX,IAoBN+mB,kBAjBsB,SAAClmB,GAAD,MAAiB,CACvCF,KAAMV,EACNW,QAAS,CACLC,gBAeJmmB,kBAXsB,SAAC1mB,GAAD,MAAc,CACpCK,KAAMT,EACNU,QAAS,CACLN,eErBK2mB,GAAaC,wBAAc,MAEjC,SAASC,KACZ,OAAOC,qBAAWH,I,2CCStB,IAuGeI,GAvGF,CACZ,CACCC,KAAMxlB,EAAMC,OAAOG,UACnBoH,KAAM,YACNie,KAAM,0BACNrM,UCTa,WAEb,OACE,mCACE,qBAAKrZ,UAAU,kBAAf,sCDME2lB,OAAQ1lB,EAAMC,OAAOE,MACrBwlB,UAAU,GAEjB,CACCH,KAAMxlB,EAAMC,OAAOI,QACnBmH,KAAM,UACNie,KAAM,0BACNrM,UEtBa,WACX,IAAIwM,EAAUC,cAEd,EAA8CjQ,oBAAS,GAAvD,mBAAOkQ,EAAP,KAAwBC,EAAxB,KACA,EAAwDnQ,oBAAS,GAAjE,mBAAOoQ,EAAP,KAA6BC,EAA7B,KAUMC,EAAY,CACdhU,MAAO,OACPiU,UAAW,UAEf,OACI,mCACI,qBAAK5Q,MAAO,CAAC6Q,UAAW,QAASrmB,UAAU,4CAA3C,SACI,8BACI,eAAC,IAAD,CAAM4G,MAAM,iDAAiD5G,UAAU,cAAcwV,MAAO,CAACrD,MAAO,SAApG,UACI,cAAC,IAAKyD,KAAN,CACIJ,MAAO2Q,EACPG,aAAc,SAAChe,GAAD,OAAO0d,GAAmB,IACxCO,aAAc,SAACje,GAAD,OAAO0d,GAAmB,IACxC7c,QAAS,SAACb,GAhB9Bud,EAAQrK,KAAK,uBAiBOxb,UAAW+lB,EAAkB,uCAAwC,GALzE,gCASA,cAAC,IAAKnQ,KAAN,CACIJ,MAAO2Q,EACPG,aAAc,SAAChe,GAAD,OAAO4d,GAAwB,IAC7CK,aAAc,SAACje,GAAD,OAAO4d,GAAwB,IAC7C/c,QAAS,SAACb,GA7B9Bud,EAAQrK,KAAK,0BA8BOxb,UAAWimB,EAAuB,uCAAwC,GAL9E,+CFThBN,OAAQ1lB,EAAMC,OAAOE,MACrBwlB,UAAU,GAEjB,CACCH,KAAMxlB,EAAMC,OAAOO,iBACnBgH,KAAM,iBACNie,KAAM,0BACNrM,UG1Ba,WACX,IAAMwM,EAAUC,cACV7T,EAAUgB,GAAiBG,aACjC,EAAwByC,mBAAS,IAAjC,mBAAOvM,EAAP,KAAakd,EAAb,KAEA,EAA8C3Q,mBAAS,MAAvD,mBAAO4Q,EAAP,KAAwBC,EAAxB,KAEMC,EAAe,CACjBhf,SAAU,SAACif,EAAiBC,GACxB,IAAMpoB,EAAU6K,EAAK2L,MAAK,SAAAiE,GAAC,OAAIA,EAAEhH,MAAQ0U,EAAgB,MACzDF,EAAmBjoB,IAEvBqoB,iBAAkB,SAACC,GAAD,MAAa,CAC7BC,SAA0B,kBAAhBD,EAAOtf,KAEjBA,KAAMsf,EAAOtf,QAcnB,EAAoCoO,mBAAS,IAA7C,mBAAmBoR,GAAnB,WA+CA,OATAjR,qBAAU,WAzBNkR,EAAMC,IAAI9nB,EAAOC,QAAUW,EAAMiB,WAAWM,aAA5C,eAEWyE,EAASE,qBAEfihB,MAAK,SAAAC,GACiB,MAAfA,EAAIxf,QAAkBwf,EAAI/d,MAC1Bkd,EAAQa,EAAI/d,KAAKge,SAAS/S,KAAI,SAAC9V,EAASgW,GACpC,MAAO,CACHvC,IAAKuC,EACL2O,WAAY3kB,EAAQ8oB,OACpBnD,GAAI3lB,EAAQ2lB,GACZoD,SAAU/oB,EAAQ+oB,SAClBnE,aAAc5kB,EAAQ4kB,aACtBC,WAAY7kB,EAAQ6kB,WACpBC,gBAAiB9kB,EAAQgpB,aACzBjE,aAAc/kB,EAAQ+kB,qBAKrCkE,OAAM,SAAApf,GACHP,QAAQC,IAAIM,MAMpB2e,EAAc,CACVU,QAAS,EACTC,SAAU,EACVC,MAAO,OAEZ,IAGC,mCACI,qBAAKrS,MAAO,CAAC6Q,UAAW,QAASrmB,UAAU,4CAA3C,SACI,sBAAKwV,MAAO,CAACrD,MAAO,UAApB,UACA,cAAC,KAAD,CACI2V,OAAO,EACPC,OAAQ,kBAAMC,OAAOnC,QAAQoC,QAC7BrhB,MAAM,+BACNmY,MAAO,CACH,cAAC,IAAD,CAEIjgB,KAAK,UACLkoB,UAAUP,EACVtd,QAAS,SAAAb,GAAC,OA1Dd,SAACA,GACjBA,EAAEoT,iBACF,IAAMwM,EAAYzB,EAAgBrC,GAClCyB,EAAQrK,KAAK,CACT2M,SAAU,mBACVC,OAAQ,cAAgBF,EACxBtpB,MAAO,CAAEspB,UAAWA,KAoDUG,CAAY/f,IAJ9B,iBACQ,QAUZ,cAAC,IAAD,UACI,cAAC,IAAD,CACIqe,aAAY,aACR7nB,KAAM,SACH6nB,GAEP2B,YAAY,EACZrW,QAASA,EACTsW,WAAYjf,EACZ3B,SAtFE,SAAC2gB,EAAYE,EAASC,GAC5C1gB,QAAQC,IAAI,qBHOZ2d,OAAQ1lB,EAAMC,OAAOE,MACrBwlB,UAAU,GAEjB,CACCH,KAAMxlB,EAAMC,OAAOQ,YACnB+G,KAAM,cACNie,KAAM,0BACNrM,ULtBa,WACX,IAAMwM,EAAUC,cACR4C,EAAaC,sBAAbD,SAER,EAA8B7S,mBAAS,GAAvC,mBAAO8R,EAAP,KAAgBiB,EAAhB,KACA,EAAkD/S,mBAAS,MAA3D,mBAAOgT,EAAP,KAA0BC,EAA1B,KACA,EAA0CjT,mBAAS,MAAnD,mBAAOkT,EAAP,KAAsBC,EAAtB,KACA,EAA0CnT,mBAAS,MAAnD,mBAAOoT,EAAP,KAAsBC,EAAtB,KACA,EAA4CrT,mBAAS,MAArD,mBAAO0I,EAAP,KAAuB4K,EAAvB,KACA,EAAgDtT,mBAAS,MAAzD,mBAAOuT,EAAP,KAAyBC,EAAzB,KACA,EAAsExT,mBAAS,MAA/E,mBAAOyT,EAAP,KAAoCC,EAApC,KACA,EAAgD1T,mBAAS,MAAzD,mBAAO2T,EAAP,KAAyBC,EAAzB,KACA,EAA4C5T,mBAAS,MAArD,mBAAO6T,EAAP,KAAuBC,EAAvB,KACA,EAA8C9T,mBAAS,MAAvD,mBAAO+T,EAAP,KAAwBC,EAAxB,KAEMtP,GAAO,WACTxS,QAAQC,IAAI,OAAQiQ,KAAEC,UAAU6Q,IAChCH,EAAWjB,EAAU,IAmDnBmC,GAAQ,CACV,CACIljB,MAAO,eACPmjB,QAAS,cAACvH,GAAD,CACLjI,KAAMA,GACNe,aAAcwN,EACdvN,WAAYsN,KAEpB,CACIjiB,MAAO,WACPmjB,QAAS,cAACxS,GAAD,CACLgD,KAAMA,GACNhB,oBAAqByP,EACrBvP,oBAAqByP,EACrBxP,kBAAmBqP,EAAehP,kBAAmBkP,KAE7D,CACIriB,MAAO,YACPmjB,QAAS,cAACtP,GAAD,CACLF,KAAMA,GACNe,aAAc6N,EACd5N,WAAYgD,KAEpB,CACI3X,MAAO,cACPmjB,QAAS,cAAC/N,GAAD,CACLzB,KAAMA,GACN8D,uBAAwBgL,EACxBnL,kCAAmCqL,EACnChL,eAAgBA,EAChBI,qBAAsByK,EAAkBxK,gCAAiC0K,KAEjF,CACI1iB,MAAO,cACPmjB,QAAS,cAACzK,GAAD,CACL/E,KAAMA,GACNe,aAAcmO,EACdlO,WAAYiO,KAEpB,CACI5iB,MAAO,YACPmjB,QAAS,cAAC/I,GAAD,CACLzG,KAAMA,GACNe,aAAcqO,EACdpO,WAAYmO,KAEpB,CACI9iB,MAAO,YACPmjB,QAAS,cAACjI,GAAD,CACLvH,KAAMA,GACNe,aAAcuO,EACdtO,WAAYqO,EACZtH,oBA/F0B,WAClC,IAAM0H,EAAiBZ,EAAmBA,EAAiB7U,KAAI,SAAA0V,GAC3D,OAAOnW,GAAYsB,mCAAmC6U,MACrD,GACCC,EAA4BZ,EAA8BA,EAA4B/U,KAAI,SAAA4V,GAC5F,OAAOrW,GAAYc,gCAAgCuV,MAClD,GAEChG,EAAc,CAChBiG,cAAetW,GAAYc,gCAAgCiU,GAC3DE,cAAejV,GAAYc,gCAAgCqD,KAAEC,UAAU6Q,IACvEE,cAAenV,GAAYc,gCAAgCqU,GAC3D1K,eAAgBzK,GAAYsB,mCAAmCmJ,GAAgBhK,KAAI,SAAC2E,EAAGzE,GAAW,OAAO,eAAIyE,MAC7GkQ,iBAAkBY,EAClBV,4BAA6BY,EAC7BV,iBAAkB1V,GAAYsB,mCAAmCoU,GACjEE,eAAgB5V,GAAYsB,mCAAmCsU,GAC/DE,gBAAiB9V,GAAYc,gCAAgCgV,IAGjE1C,EAAMmD,KAAKhrB,EAAOC,QAAUW,EAAMiB,WAAWI,eAA7C,eAEW6iB,GAFX,eAGWle,EAASE,qBACfihB,MAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIxf,QAAkBwf,EAAI/d,KAAM,CAChC,IAAM4e,EAAYb,EAAI/d,KAAKA,KAAK7K,QAAQ2lB,GACxCsE,EAAS,gCAAiC,CACtC4B,WAAY,UACZC,aAAa,IAEjB1E,EAAQrK,KAAK,CACT2M,SAAU,mBACVC,OAAQ,cAAgBF,EACxBtpB,MAAO,CAAE4rB,SAAUtC,SAI9BR,OAAM,SAAApf,GACHP,QAAQC,IAAIM,WA6DxB,OACI,mCACI,qBAAKkN,MAAO,CAAC6Q,UAAW,QAASrmB,UAAU,4CAA3C,SACI,sBAAKwV,MAAO,CAACrD,MAAO,UAApB,UACI,cAAC,KAAD,CACI2V,OAAO,EACPC,OAAQ,kBAAMC,OAAOnC,QAAQoC,QAC7BrhB,MAAM,0DAGN,eAAC,IAAD,WACI,cAAC,KAAD,CAAO6jB,aAAW,EAAC9C,QAASA,EAA5B,SAEQmC,GAAMvV,KAAI,SAAAmW,GAAI,OACV,cAAC1H,GAAD,CAAuBpc,MAAO8jB,EAAK9jB,MAAO5G,UAAU,QAAzC0qB,EAAK9jB,YAI5B,qBAAK5G,UAAU,qBAAf,SACK8pB,GAAMnC,GAASoC,UAEpB,qBAAK/pB,UAAU,oCAAoCwV,MAAO,CAACmV,SAAU,WAAYC,OAAQ,QAAzF,SAEQ,cAAC,IAAD,CAAQpV,MAAO,CAAEqV,OAAQ,SAAW7D,SAAUW,EAAU,EAAGxe,QAAS,kBA/HhGpB,QAAQC,IAAI,OAAQiQ,KAAEC,UAAU6Q,SAChCH,EAAWjB,EAAU,IA8HO,mCK7H5BhC,OAAQ1lB,EAAMC,OAAOE,MACrBwlB,UAAU,GAEjB,CACCH,KAAMxlB,EAAMC,OAAOS,WACnB8G,KAAM,aACNie,KAAM,0BACNrM,UI3Ca,WACX,IAAMyR,EAAQtkB,EAAcG,iBAE5B,EAA4CkP,oBAAS,GAArD,mBAAOlN,EAAP,KAAuBoiB,EAAvB,KACA,EAA8BlV,mBAAS,MAAvC,mBAAOhP,EAAP,KAAgBmkB,EAAhB,KAsBMC,EAAe,SAACpsB,EAAQ4V,EAAOyW,GAClB,WAAXrsB,IACAisB,EAAM7V,MAAK,SAAAkW,GAAI,OAAIA,EAAKtkB,UAAYqkB,KAAiBpkB,KAAK2N,GAAO1N,MAAQ,cACzE+jB,EAAM7V,MAAK,SAAAkW,GAAI,OAAIA,EAAKtkB,UAAYqkB,KAAiBpkB,KAAK,GAAG9G,UAAY,GACzEgrB,EAAWE,GAvBfH,GAAkB,KA4BtB,OACI,qCAEQD,EAAMvW,KAAI,SAAC4W,EAAMC,GACb,OAAO,cAAC,IAAD,CAAsBxkB,MAAOukB,EAAKvkB,MAAOykB,UAAU,EAAO7V,MAAO,CAAErD,MAAO,OAAQmZ,aAAc,UAAYtrB,UAAU,uBAAtH,SAECmrB,EAAKrkB,KAAKyN,KAAI,SAACgX,EAAUC,GACrB,OAAO,cAAC,IAAK5V,KAAN,CAEHJ,MAAO,CAAErD,MAAO,MAAOiU,UAAW,UAClCpmB,UAAW,iBAAmBurB,EAASvrB,UAAYurB,EAASvrB,UAAY,IACxEmJ,QAAS,SAACb,GAAD,OAAO2iB,EAAaM,EAAS1sB,OAAQ2sB,EAAeL,EAAKtkB,UAJ/D,UAOE0kB,EAAS1sB,OACR0sB,EAASxkB,QAPVykB,OAJHJ,MA8B1B,cAAChkB,EAAD,CAAiBuB,eAAgBA,EAAgB9B,QAASA,EAASqB,SA3D1D,SAACujB,EAAcP,GAC5BJ,EAAM7V,MAAK,SAAAkW,GAAI,OAAIA,EAAKtkB,UAAYqkB,KAAiBpkB,KAAK,GAAGC,MAAQ,sBACjE/G,UAAU,mCADuD,UAGjE,sBAAMA,UAAU,qBAAhB,SAAsC,aACtC,sBAAMA,UAAU,iCAChB,cAAC0rB,EAAA,EAAD,CAAc1rB,UAAU,uBAE5B8qB,EAAM7V,MAAK,SAAAkW,GAAI,OAAIA,EAAKtkB,UAAYqkB,KAAiBpkB,KAAK,GAAG9G,UAAY,kBACzE+qB,GAAkB,IAkDyEjiB,aA/C1E,WACjBiiB,GAAkB,UJqBlBpF,OAAQ1lB,EAAMC,OAAOE,MACrBwlB,UAAU,GAEjB,CACCH,KAAMxlB,EAAMC,OAAOU,UACnB6G,KAAM,YACNie,KAAM,0BACNrM,UK/Ca,WACX,IAAIsS,EAAWC,cACPlD,EAAaC,sBAAbD,SACF7C,EAAUC,cAChB,EAAe+F,IAAKC,UAAbC,EAAP,oBAIA,EAAkClW,mBAAS,IAA3C,mBAAOmW,EAAP,KAAkBC,EAAlB,KACA,EAAkCpW,qBAAlC,mBAAOqS,EAAP,KAAkBgE,EAAlB,KACA,EAA4BrW,qBAA5B,mBAAOsW,EAAP,KAAeC,EAAf,KAEMzkB,EAAW,SAACmC,EAAM+N,KAsBlBwU,EAAY,WACdN,EAAKO,eAkCHC,EAAgB,SAACC,GACnBtF,EAAMC,IAAI9nB,EAAOC,QAAUW,EAAMiB,WAAWN,UAAY,IAAM4rB,EAA9D,eAEWvmB,EAASE,qBAEfihB,MAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIxf,QAAkBwf,EAAI/d,KAAM,CAChC,IAAImjB,EAAO,GACPpF,EAAI/d,KAAKmjB,OACTA,EAAOpF,EAAI/d,KAAKmjB,KAAKlY,KAAI,SAACvM,EAAKyM,GAC3B,MAAO,CACHvC,IAAKuC,EACL3K,KAAMgP,IAAO9Q,EAAI8B,MAAMiO,OAAO,cAC9B2U,KAAM5T,IAAO9Q,EAAI8B,MAAMiO,OAAO,WAC9B/K,YAAahF,EAAIgF,iBAI7Bif,EAAaQ,OAGpB/E,OAAM,SAAApf,GACHP,QAAQC,IAAIM,OAIlBqkB,EAAY,SAACC,GACf,GAAIA,EAAahuB,OAASguB,EAAahuB,MAAMspB,UACzCgE,EAAaU,EAAahuB,MAAMspB,WAChCkE,EAAUQ,EAAahuB,MAAMutB,QAC7BI,EAAcK,EAAahuB,MAAMutB,QACjCE,SAEC,GAAIO,EAAaxE,OAAQ,CAC1B,IAAMyE,EAAS,IAAIC,gBAAgBF,EAAaxE,QAC1C2E,EAAkBF,EAAO1F,IAAI,aAC7B6F,EAAeH,EAAO1F,IAAI,UAChC+E,EAAaa,GACbX,EAAUY,GACVT,EAAcS,GACdX,MAiBR,OAbArW,qBAAU,WACN2W,EAAUhB,KACX,IAEH3V,qBAAU,WACN,OAAO6P,EAAQoH,QAAO,SAACL,GAChBjB,EAASxD,WAAcloB,EAAMC,OAAOE,MAAQH,EAAMC,OAAOU,WACxD+rB,EAAUC,QAGnB,CAAC/G,IAIA,qCACI,cAAC,IAAD,CAAMwF,UAAU,EAAO7V,MAAO,CAAErD,MAAO,OAAQmZ,aAAc,OAA7D,SACI,sBAAKtrB,UAAU,uBAAf,UACQ,4CADR,iLAGQ,uBACA,uBACA,qBAAIwV,MAAO,CAAC0X,UAAW,QAAvB,UACI,oGACA,0DACA,2EACA,kDACA,sDACA,mHAIhB,cAAC,IAAD,UAII,sBAAKltB,UAAU,WAAWwV,MAAO,CAACrD,MAAO,SAAzC,UACI,eAAC,IAAD,CAAKgb,OAAQ,GAAIntB,UAAU,OAA3B,UACI,cAAC,IAAD,CAAKotB,KAAM,EAAX,SAAc,4CACd,cAAC,IAAD,CAAKA,KAAM,EAAX,SAAc,4CACd,cAAC,IAAD,CAAKA,KAAM,GAAX,SAAe,sDAEnB,eAAC,IAAD,CACIrB,KAAMA,EACNtkB,KAAK,yBACL4lB,SAvHH,SAAApZ,GACb,KAAIA,EAAOqZ,aAAaC,OAAS,GAAjC,CAEA,IAAM5Z,EAAMM,EAAOqZ,aAAa/Y,KAAI,SAAAvM,GAChC,MAAO,CACHgF,YAAahF,EAAIgF,YACjBlD,KAAMsO,OAAOU,IAAO9Q,EAAI8B,MAAM0jB,IAAI,OAAQ1U,IAAO9Q,EAAI0kB,MAAMe,SAASD,IAAI,SAAU1U,IAAO9Q,EAAI0kB,MAAMgB,WAAWF,IAAI,UAAW1U,IAAO9Q,EAAI0kB,MAAMiB,WAAW5V,OAAO,UAIxKmP,EAAMmD,KAAKhrB,EAAOC,QAAUW,EAAMiB,WAAWN,UACzC,CACIgtB,WAAYxV,OAAO8P,GACnBsE,QAASpU,OAAO+T,GAChBM,KAAM9Y,GAJd,eAKW1N,EAASE,qBACfihB,MAAK,SAAAC,GACiB,MAAfA,EAAIxf,SACJ0kB,EAAcnU,OAAO+T,IACrBzD,EAAS,iCAAkC,CACvC4B,WAAY,UACZC,aAAa,IAEjB8B,QAGP3E,OAAM,SAAApf,GACHP,QAAQC,IAAIM,QA6FJulB,aAAa,MACbC,cAzJM,CAAER,aAAc,CAAC,CAAExjB,KAAM,KAAM4iB,KAAM,KAAM1f,YAAa,QAoJlE,UAOI,cAAC,IAAK+gB,KAAN,CAAWtmB,KAAK,eAAhB,SACK,SAACuM,EAAD,OAAWga,EAAX,EAAWA,IAAK9S,EAAhB,EAAgBA,OAAhB,OACG,qCACKlH,EAAOO,KAAI,gBAAGrC,EAAH,EAAGA,IAAKzK,EAAR,EAAQA,KAAMwmB,EAAd,EAAcA,SAAaC,EAA3B,wBACR,eAAC,IAAD,CAAKf,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,2BACQsK,GADR,IAEIzmB,KAAM,CAACA,EAAM,QACbwmB,SAAU,CAACA,EAAU,QACrBpK,MAAO,CAAC,CAAEvR,UAAU,EAAMnK,QAAS,iBAJvC,SAMI,cAAC,IAAD,CAAYR,SAAUA,EAAU3H,UAAU,gBAGlD,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,2BACQsK,GADR,IAEIzmB,KAAM,CAACA,EAAM,QACbwmB,SAAU,CAACA,EAAU,QACrBpK,MAAO,CAAC,CAAEvR,UAAU,EAAMnK,QAAS,iBAJvC,SAMI,cAAC,IAAD,CAAYR,SAAUA,EAAU3H,UAAU,gBAGlD,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,2BACQsK,GADR,IAEIzmB,KAAM,CAACA,EAAM,eACbwmB,SAAU,CAACA,EAAU,eACrBpK,MAAO,CAAC,CAAEvR,UAAU,EAAMnK,QAAS,wBACnCnI,UAAU,SALd,SAOI,cAAC,IAAD,CAAO8jB,YAAY,cAAc9jB,UAAU,gBAGnD,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAACpS,EAAA,EAAD,CAAqB7R,QAAS,kBAAM+R,EAAOzT,UAjC7ByK,MAqC1B,cAAC,IAAD,CAAKib,OAAQ,GAAb,SACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,UACI,cAAC,IAAD,CACI9kB,KAAK,SACLqK,QAAS,kBAAM6kB,KACfG,OAAK,EACLzI,KAAM,cAAC0I,EAAA,EAAD,IAJV,kCAexB,cAAC,IAAKxK,KAAN,UACI,cAAC,IAAD,CAAQ9kB,KAAK,UAAUuvB,SAAS,SAAhC,kCAQZrC,GACA,cAAC,IAAD,UACI,sBAAKhsB,UAAU,uBAAf,UACI,8BAAK,oBAAIA,UAAU,eAAd,wBACL,cAAC,IAAD,CAAOuoB,WAAYyD,EAAW/Z,QAzNlC,CACZ,CACIrL,MAAO,OACPyM,UAAW,OACXnB,IAAK,QAET,CACItL,MAAO,OACPyM,UAAW,OACXnB,IAAK,QAET,CACItL,MAAO,cACPyM,UAAW,cACXnB,IAAK,gBA2MuDoW,YAAY,aLzL5E3C,OAAQ1lB,EAAMC,OAAOE,MACrBwlB,UAAU,GAEjB,CACCH,KAAMxlB,EAAMC,OAAOW,eACnB4G,KAAM,YACNie,KAAM,0BACNrM,UnBnDa,WACX,IAAIsS,EAAWC,cAET/F,GADe8C,sBAAbD,SACQ5C,eAEhB,EAAkCjQ,mBAAS,MAA3C,mBAAOiF,EAAP,KAAkBC,EAAlB,KACA,EAA0DlF,oBAAS,GAAnE,mBAAO+E,EAAP,KAA8BC,EAA9B,KAEA,EAA0ChF,mBAAS,IAAnD,mBACA,GADA,UACkCA,sBAAlC,mBAAkBqW,GAAlB,WACA,EAA4BrW,qBAA5B,mBAAeuW,GAAf,WA0BMkC,EAAqB,SAAC9B,GACxBtF,EAAMC,IAAI9nB,EAAOC,QAAUW,EAAMiB,WAAWU,cAAgB,IAAM4qB,EAAlE,eAEWvmB,EAASE,qBAEfihB,MAAK,SAAAC,GACiB,MAAfA,EAAIxf,QAAkBwf,EAAI/d,MAC1BvB,QAAQC,IAAIqf,EAAI/d,SAGvBoe,OAAM,SAAApf,GACHP,QAAQC,IAAIM,OAIlBqkB,EAAY,SAACC,GACf,GAAIA,EAAahuB,OAASguB,EAAahuB,MAAMspB,UACzCgE,EAAaU,EAAahuB,MAAMspB,WAChCkE,EAAUQ,EAAahuB,MAAMutB,QAC7BmC,EAAmB1B,EAAahuB,MAAMutB,aAErC,GAAIS,EAAaxE,OAAQ,CAC1B,IAAMyE,EAAS,IAAIC,gBAAgBF,EAAaxE,QAC1C2E,EAAkBF,EAAO1F,IAAI,aAC7B6F,EAAeH,EAAO1F,IAAI,UAChC+E,EAAaa,GACbX,EAAUY,GACVsB,EAAmBtB,KAgB3B,OAZAhX,qBAAU,WACN2W,EAAUhB,KACX,IAEH3V,qBAAU,WACN,OAAO6P,EAAQoH,QAAO,SAACL,GAChBjB,EAASxD,WAAcloB,EAAMC,OAAOE,MAAQH,EAAMC,OAAOW,gBACxD8rB,EAAUC,QAGnB,CAAC/G,IAGA,qCACI,cAAC,IAAD,CAAMwF,UAAU,EAAO7V,MAAO,CAAErD,MAAO,OAAQmZ,aAAc,OAA7D,SACI,qBAAKtrB,UAAU,uBAAf,SACI,qQAOR,cAAC,IAAD,CAAMqrB,UAAU,EAAO7V,MAAO,CAAErD,MAAO,OAAQmZ,aAAc,UAA7D,SACI,cAAC,IAAD,CACIiD,WAAW,OACX9mB,KAAK,QACLqmB,cAAerkB,GAAkBuE,iBACjCqf,SAxEC,SAACpZ,GACd8G,EAAa9G,GACb4G,GAAyB,IAuEb2T,eAhEO,SAACC,GACpB1mB,QAAQC,IAAI,UAAWymB,IAgEXzuB,UAAU,sBANd,SAQI,eAAC,KAAD,CAAM2H,SAvEL,SAACuK,GACdnK,QAAQC,IAAIkK,IAsE0BpT,KAAK,OAA/B,UACI,eAACgT,GAAD,CAAS4c,IAAI,mBAAb,UACI,cAAC,IAAD,CAASC,YAAY,OAAOC,OAAK,EAAjC,SAAkC,wDAClC,eAAC,IAAD,CAAKzB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,0CAEI,cAAC,KAAD,CAASH,MAAM,eAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,0CAEI,cAAC,KAAD,CAASH,MAAM,eAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,WAIZ,eAAC,IAAD,CAAKmT,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,0CAEI,cAAC,KAAD,CAASH,MAAM,mCAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,0CAEI,cAAC,KAAD,CAASH,MAAM,mCAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,WAIZ,eAAC,IAAD,CAAKmT,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,yCAEI,cAAC,KAAD,CAASH,MAAM,yBAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,QACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,yCAEI,cAAC,KAAD,CAASH,MAAM,yBAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,QACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,WAKZ,cAAC,IAAK4J,KAAN,CAAW5jB,UAAU,aAArB,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUuvB,SAAS,SAAhC,uCA1G4B,KA+GpC,eAACvc,GAAD,CAAS4c,IAAI,eAAb,UACI,cAAC,IAAD,CAASC,YAAY,OAAOC,OAAK,EAAjC,SAAkC,oDAClC,eAAC,IAAD,CAAKzB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,yCAEI,cAAC,KAAD,CAASH,MAAM,IAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,QACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,UACI,cAAC,GAAD,CAAQ7S,MAAM,aAAd,8BAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,4CAEI,cAAC,KAAD,CAASH,MAAM,IAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,WACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,UACI,cAAC,GAAD,CAAQ7S,MAAM,OAAd,2BAKhB,eAAC,IAAD,CAAKgmB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,0CAEI,cAAC,KAAD,CAASH,MAAM,IAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,UACI,cAAC,GAAD,CAAQ7S,MAAM,aAAd,8BAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,yCAEI,cAAC,KAAD,CAASH,MAAM,IAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,QACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,WAKZ,cAAC,IAAK4J,KAAN,CAAW5jB,UAAU,aAArB,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUuvB,SAAS,SAAhC,mCA9EwB,KAmFhC,eAACvc,GAAD,CAAS4c,IAAI,mBAAb,UACI,cAAC,IAAD,CAASC,YAAY,OAAOC,OAAK,EAAjC,SAAkC,wDAClC,eAAC,IAAD,WACI,cAAC,IAAD,CAAKxB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,6CAEI,cAAC,KAAD,CAASH,MAAM,GAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,YACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,2CAEI,cAAC,KAAD,CAASH,MAAM,GAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,WACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,WAIZ,cAAC,IAAD,UACI,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,mDAEI,cAAC,KAAD,CAASH,MAAM,GAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,kBACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,UAKZ,cAAC,IAAK4J,KAAN,CAAW5jB,UAAU,aAArB,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUuvB,SAAS,SAAhC,uCAxD4B,KA6DpC,eAACvc,GAAD,CAAS4c,IAAI,YAAb,UACI,cAAC,IAAD,CAASC,YAAY,OAAOC,OAAK,EAAjC,SAAkC,iDAClC,eAAC,IAAD,WACI,cAAC,IAAD,CAAKxB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,8CAEI,cAAC,KAAD,CAASH,MAAM,GAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,QACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,+CAEI,cAAC,KAAD,CAASH,MAAM,GAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,WAIZ,eAAC,IAAD,WACI,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,mDAEI,cAAC,KAAD,CAASH,MAAM,GAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,kBACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,oDAEI,cAAC,KAAD,CAASH,MAAM,GAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,mBACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,WAKZ,cAAC,IAAK4J,KAAN,CAAW5jB,UAAU,aAArB,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUuvB,SAAS,SAAhC,gCAxEqB,KA6E7B,eAACvc,GAAD,CAAS4c,IAAI,YAAb,UACI,cAAC,IAAD,CAASC,YAAY,OAAOC,OAAK,EAAjC,SAAkC,iDAClC,eAAC,IAAD,WAEI,cAAC,IAAD,CAAKxB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,6CAEI,cAAC,KAAD,CAASH,MAAM,GAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,YACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,UACI,cAAC,GAAD,CAAQ7S,MAAM,YAAd,6BAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,gDAEI,cAAC,KAAD,CAASH,MAAM,GAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,eACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,6CAEI,cAAC,KAAD,CAASH,MAAM,GAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,YACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,eAAC,IAAD,WACI,cAAC,GAAD,CAAQ7S,MAAM,KAAd,gBACA,cAAC,GAAD,CAAQA,MAAM,MAAd,wBAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,2CAEI,cAAC,KAAD,CAASH,MAAM,GAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,UACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,wCAEI,cAAC,KAAD,CAASH,MAAM,yCAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,OACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,eAAC,IAAD,WACI,cAAC,GAAD,CAAQ7S,MAAM,KAAd,gBACA,cAAC,GAAD,CAAQA,MAAM,MAAd,wBAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,0CAEI,cAAC,KAAD,CAASH,MAAM,yCAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,UACI,cAAC,GAAD,CAAQ7S,MAAM,QAAd,yBAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,+CAEI,cAAC,KAAD,CAASH,MAAM,yCAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,cACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,6CAEI,cAAC,KAAD,CAASH,MAAM,yCAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,YACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,8CAEI,cAAC,KAAD,CAASH,MAAM,yCAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,aACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,WAMZ,cAAC,IAAK4J,KAAN,CAAW5jB,UAAU,aAArB,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUuvB,SAAS,SAAhC,gCAlKqB,KAuK7B,eAACvc,GAAD,CAAS4c,IAAI,YAAb,UACA,cAAC,IAAD,CAASC,YAAY,OAAOC,OAAK,EAAjC,SAAkC,iDAC9B,eAAC,IAAD,WACI,cAAC,IAAD,CAAKxB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,2CAEI,cAAC,KAAD,CAASH,MAAM,yCAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,UACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,wCAEI,cAAC,KAAD,CAASH,MAAM,yCAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,OACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,WAKZ,cAAC,IAAK4J,KAAN,CAAW5jB,UAAU,aAArB,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUuvB,SAAS,SAAhC,gCAtCqB,KA2C7B,eAACvc,GAAD,CAAS4c,IAAI,mBAAb,UACI,eAAC,IAAD,CAASC,YAAY,OAAOC,OAAK,EAAjC,UAAkC,sDAAlC,8DAEA,eAAC,IAAD,WACI,cAAC,IAAD,CAAKxB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,wCAEI,cAAC,KAAD,CAASH,MAAM,wHAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,OACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,eAGpB,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,yCAOJU,KAAK,QACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,kBAIxB,eAAC,IAAD,WACI,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,8CAOJU,KAAK,aACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,eAGpB,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,2CAEI,cAAC,KAAD,CAASH,MAAM,yDAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,UACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,kBAIxB,eAAC,IAAD,WACI,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,0CAEI,cAAC,KAAD,CAASH,MAAM,8GAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,eAGpB,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,2CAEI,cAAC,KAAD,CAASH,MAAM,+EAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,UACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,kBAIxB,eAAC,IAAD,WACI,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,wCAEI,cAAC,KAAD,CAASH,MAAM,IAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,OACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,eAGpB,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,iDAEI,cAAC,KAAD,CAASH,MAAM,oGAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,gBACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,kBAKxB,cAAC,IAAD,CAAS6vB,YAAY,OAAOC,OAAK,EAAjC,SAAkC,qDAClC,eAAC,IAAD,WACI,cAAC,IAAD,CAAKxB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,iDAEI,cAAC,KAAD,CAASH,MAAM,gHAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,gBACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,eAGpB,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,2CAEI,cAAC,KAAD,CAASH,MAAM,gGAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,UACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,kBAIxB,eAAC,IAAD,WACI,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,mDAEI,cAAC,KAAD,CAASH,MAAM,IAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,kBACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,eAGpB,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,yCAEI,cAAC,KAAD,CAASH,MAAM,IAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,QACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,kBAIxB,eAAC,IAAD,WACI,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,0CAEI,cAAC,KAAD,CAASH,MAAM,qEAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,eAGpB,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,2CAEI,cAAC,KAAD,CAASH,MAAM,IAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,kBAIxB,eAAC,IAAD,WACI,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,0CAEI,cAAC,KAAD,CAASH,MAAM,8CAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,eAGpB,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,2CAEI,cAAC,KAAD,CAASH,MAAM,iJAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,UACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,kBAIxB,eAAC,IAAD,WACI,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,0CAEI,cAAC,KAAD,CAASH,MAAM,kDAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,eAGpB,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,wCAEI,cAAC,KAAD,CAASH,MAAM,IAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,OACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,kBAIxB,cAAC,IAAD,UACI,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,0CAEI,cAAC,KAAD,CAASH,MAAM,IAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,iBAKxB,cAAC,IAAD,CAAS6vB,YAAY,OAAOC,OAAK,EAAjC,SAAkC,mEAClC,eAAC,IAAD,WACI,cAAC,IAAD,CAAKxB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,+CAEI,cAAC,KAAD,CAASH,MAAM,+FAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,gBACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,eAGpB,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,0CAEI,cAAC,KAAD,CAASH,MAAM,IAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,SACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,eAGpB,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,sCAEI,cAAC,KAAD,CAASH,MAAM,WAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,KACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,8CAEI,cAAC,KAAD,CAASH,MAAM,mFAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,aACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKoT,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,2CAEI,cAAC,KAAD,CAASH,MAAM,mGAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,UACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,eAAC,IAAD,WACI,cAAC,GAAD,CAAQ7S,MAAM,IAAd,eACA,cAAC,GAAD,CAAQA,MAAM,IAAd,sBAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,+CAEI,cAAC,KAAD,CAASH,MAAM,IAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,cACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,eAAC,IAAD,WACI,cAAC,GAAD,CAAQ7S,MAAM,IAAd,eACA,cAAC,GAAD,CAAQA,MAAM,IAAd,sBAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,kDAEI,cAAC,KAAD,CAASH,MAAM,8FAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,iBACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,eAGpB,cAAC,IAAD,CAAKsuB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,iDAEI,cAAC,KAAD,CAASH,MAAM,kGAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,gBACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,eAAC,IAAD,WACI,cAAC,GAAD,CAAQ7S,MAAM,IAAd,eACA,cAAC,GAAD,CAAQA,MAAM,IAAd,sBAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,2CAEI,cAAC,KAAD,CAASH,MAAM,2EAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,UACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,eAAC,IAAD,WACI,cAAC,GAAD,CAAQ7S,MAAM,IAAd,eACA,cAAC,GAAD,CAAQA,MAAM,IAAd,sBAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,+CAEI,cAAC,KAAD,CAASH,MAAM,8CAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,cACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,eAAC,IAAD,WACI,cAAC,GAAD,CAAQ7S,MAAM,IAAd,eACA,cAAC,GAAD,CAAQA,MAAM,IAAd,sBAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,2CAEI,cAAC,KAAD,CAASH,MAAM,kDAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,UACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,eAAC,IAAD,WACI,cAAC,GAAD,CAAQ7S,MAAM,IAAd,eACA,cAAC,GAAD,CAAQA,MAAM,IAAd,sBAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACI7c,MACI,8CAEI,cAAC,KAAD,CAASH,MAAM,wEAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,aACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,eAAC,IAAD,WACI,cAAC,GAAD,CAAQ7S,MAAM,IAAd,eACA,cAAC,GAAD,CAAQA,MAAM,IAAd,sBAIZ,cAAC,IAAD,CAAKimB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACQ7c,MACA,iDAEI,cAAC,KAAD,CAASH,MAAM,wDAAf,SACI,cAACioB,GAAA,EAAD,CAAwB7uB,UAAU,wBAI9CyH,KAAK,iBACL+N,MAAO,CAACwE,WAAY,QAVxB,SAYI,cAAC,IAAD,CAAOlb,KAAK,kBAKxB,cAAC,IAAK8kB,KAAN,CAAW5jB,UAAU,aAArB,SACI,cAAC,IAAD,CAAQlB,KAAK,UAAUuvB,SAAS,SAAhC,uCApjB4B,YA6jB5CzT,GACA,cAAC3R,GAAD,CACIN,eAAgBiS,EAChB9R,aAtrCK,WACjB+R,GAAyB,GACzBE,EAAa,OAqrCD7S,SAlrCc,SAACoB,GAC3BvB,QAAQC,IAAIsB,GACZuR,GAAyB,GACzBE,EAAa,OAgrCD7R,WAAY,gBACZM,UAAW,gDACXJ,cAAe,CAACC,YAAa,SAAUE,aAAc,OACrDD,KAAMwR,QmBnpClB6K,OAAQ1lB,EAAMC,OAAOE,MACrBwlB,UAAU,GAEjB,CACCH,KAAMxlB,EAAMC,OAAOY,eACnB2G,KAAM,YACNie,KAAM,0BACNrM,UM9Da,SAAuBhS,GAClC,IAAQuK,EAAWC,IAAXD,OACAqK,EAAUC,KAAVD,MACA6S,EAAaC,IAAbD,SACFjJ,EAAUC,cACV8G,EAAehB,cACblD,EAAaC,sBAAbD,SACR,EAAkCmD,IAAKC,UAAhCkD,EAAP,oBACA,EAA6CnD,IAAKC,UAA3CmD,EAAP,oBACA,EAAwBpD,IAAKC,UAAtBoD,EAAP,oBACA,EAA0BrD,IAAKC,UAAxBqD,EAAP,oBACA,EAA6BtD,IAAKC,UAA3BsD,EAAP,oBACA,EAA4BvD,IAAKC,UAA1BuD,EAAP,oBAEM5wB,EAAU6wB,aAAY,SAAA1wB,GAAK,OAAIA,EAAMD,YAAYF,WACvD,EAA4BoX,mBAAS,MAArC,mBAAOsW,EAAP,KAAeC,EAAf,KAEA,EAA0BvW,mBAAS,CAAC,CAAC1O,MAAO,EAAGJ,MAAO,aAAtD,mBAAOwoB,EAAP,KAAcC,EAAd,KACA,EAA4C3Z,mBAAS,IAArD,mBAAO4Z,GAAP,KAAuBC,GAAvB,KACA,GAA0C7Z,mBAAS,GAAnD,qBAAO8Z,GAAP,MAAsBC,GAAtB,MACA,GAA0D/Z,qBAA1D,qBAAO+E,GAAP,MAA8BC,GAA9B,MACA,GAAkChF,qBAAlC,qBAAOiF,GAAP,MAAkBC,GAAlB,MAEA,GAAkElF,mBAAS,CACvElM,MAAO,KACPC,QAAS,KACTC,SAAU,KACVC,KAAM,KACNC,YAAa,KACbC,oBAAqB,KACrBC,sBAAuB,KACvBC,YAAa,KACbC,oBAAqB,KACrBC,UAAW,KACXC,wBAAyB,KACzBC,MAAO,OAZX,qBAAOZ,GAAP,MAAkCmmB,GAAlC,MAeA,GAAwFha,mBAAS,CAC7FrL,KAAM,KACNC,YAAa,KACbC,gBAAiB,KACjBC,wBAAyB,KACzBC,sBAAuB,KACvBC,qBAAsB,KACtBC,cAAe,KACfC,eAAgB,KAChBC,cAAe,KACfC,WAAY,KACZC,gBAAiB,KACjBC,IAAK,KACLC,SAAU,OAbd,qBAAOb,GAAP,MAA6CulB,GAA7C,MAgBA,GAA8Cja,mBAAS,CACnDvK,iBAAkB,KAClBC,kBAAmB,KACnBC,kBAAmB,KACnBC,mBAAoB,KACpBC,UAAW,KACXC,8BAA+B,KAC/BC,sBAAuB,KACvBC,eAAgB,KAChBC,mBAAoB,KACpBC,gBAAiB,KACjBC,KAAM,KACNC,UAAW,KACXC,iBAAkB,KAClBC,SAAU,KACVC,iBAAkB,KAClBC,aAAc,KACdC,YAAa,KACbC,mBAAoB,KACpBC,WAAY,KACZC,eAAgB,KAChBC,iBAAkB,KAClBC,WAAY,KACZC,kBAAmB,OAvBvB,qBAAOvB,GAAP,MAAwB0kB,GAAxB,MA0BA,GAAkDla,mBAAS,CACvD/I,aAAc,CACV,CACIC,aAAc,KACdC,YAAa,KACbC,iBAAkB,SAL9B,qBAAOJ,GAAP,MAA0BmjB,GAA1B,MAUA,GAAwDna,mBAAS,CAC7D1I,UAAW,KACXC,UAAW,KACXC,iBAAkB,KAClBC,OAAQ,KACRC,QAAS,KACTC,cAAe,KACfC,gBAAiB,KACjBC,aAAc,KACdC,eAAgB,OATpB,qBAAOT,GAAP,MAA6B+iB,GAA7B,MAYA,GAAsDpa,mBAAS,CAC3DhI,YAAa,KACbC,UAAW,KACXC,WAAY,OAHhB,qBAAOH,GAAP,MAA4BsiB,GAA5B,MAmEMvoB,GAAW,SAACmC,EAAM+N,GACpB9P,QAAQC,IAAI8B,EAAM+N,IAsHhBsY,GAAqB,SAACC,GACxBlJ,EAAMC,IAAI9nB,EAAOC,QAAUW,EAAMiB,WAAWJ,eAAiB,IAAMsvB,EAAnE,eAEOnqB,EAASE,qBAEfihB,MAAK,SAAAC,GACiB,MAAfA,EAAIxf,QAAkBwf,EAAI/d,MAC1BvB,QAAQC,IAAIqf,EAAI/d,SAKvBoe,OAAM,SAAApf,GACHP,QAAQC,IAAIM,OAYd+nB,GAAuB,SAAC7D,GAC1B,IAAM8D,EAToB,SAACC,GAE3B,IADA,IAAMD,EAAS,GACNE,EAAO,EAAGA,GAAQD,EAAaC,IACpCF,EAAO9U,KAAK,CAACrU,MAAOqpB,EAAMzpB,MAAM,SAAD,OAAWypB,KAE9C,OAAOF,EAIQG,CAAsBhyB,EAAQiyB,MAAMzb,MAAK,SAAAtF,GAAI,OAAIA,EAAKyU,KAAOoI,KAASmE,YAErFzJ,EAAMC,IAAI9nB,EAAOC,QAAUW,EAAMiB,WAAWa,oBAAsB,IAAMyqB,EAAxE,eAEOvmB,EAASE,qBAEfihB,MAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIxf,QAAkBwf,EAAI/d,OAC1BkmB,EAASc,GACTZ,GAAkBrI,EAAI/d,KAAKgnB,QAC3BV,GAAiBU,EAAO,GAAGnpB,MAAQ,IAC/BkgB,EAAI/d,KAAKgnB,OAAO/C,OAAS,GAAG,CAC5B,IAAMqD,EAAuBvJ,EAAI/d,KAAKgnB,OAAOrb,MAAK,SAAA4b,GAAC,OAAIA,EAAEvmB,QAAUgmB,EAAO,GAAGnpB,SACzEypB,GACAT,GAAmBS,EAAqBR,cAKvD1I,OAAM,SAAApf,GACHP,QAAQC,IAAIM,OAId+jB,GAAY,WACd2C,EAAwB1C,cACxB2C,EAAmC3C,cACnC4C,EAAc5C,cACd6C,EAAgB7C,cAChB8C,EAAmB9C,cACnB+C,EAAkB/C,eA4CtB,OAzCAzW,oBAAS,WACL,GAAGpX,GAAWmuB,EAAazE,WAAcloB,EAAMC,OAAOE,MAAQH,EAAMC,OAAOY,eAEvE,GADAiH,QAAQC,IAAR,sBAA2B4kB,EAAazE,WACpCyE,EAAahuB,OAASguB,EAAahuB,MAAMutB,OACzCpkB,QAAQC,IAAI4kB,EAAahuB,MAAMutB,QAC/BC,EAAUQ,EAAahuB,MAAMutB,QAC7BE,KACAgE,GAAqBzD,EAAahuB,MAAMutB,aAEvC,GAAIS,EAAaxE,OAAQ,CAC1B,IACM4E,EADS,IAAIF,gBAAgBF,EAAaxE,QACpBjB,IAAI,UAChCpf,QAAQC,IAAIglB,GACZZ,EAAUY,GACVX,KACAgE,GAAqBrD,MAG9B,CAACvuB,IAEJuX,qBAAU,WACN,OAAO6P,EAAQoH,QAAO,SAACtB,GACnB,GAAGA,EAASxD,WAAcloB,EAAMC,OAAOE,MAAQH,EAAMC,OAAOY,eAExD,GADAiH,QAAQC,IAAR,mCAAwC2jB,EAASxD,WAC7CwD,EAAS/sB,OAAS+sB,EAAS/sB,MAAMutB,OACjCpkB,QAAQC,IAAI2jB,EAAS/sB,MAAMutB,QAC3BC,EAAUT,EAAS/sB,MAAMutB,QACzBE,KACAgE,GAAqB1E,EAAS/sB,MAAMutB,aAEnC,GAAIR,EAASvD,OAAQ,CACtB,IACM4E,EADS,IAAIF,gBAAgBnB,EAASvD,QAChBjB,IAAI,UAChCpf,QAAQC,IAAIglB,GACZZ,EAAUY,GACVX,KACAgE,GAAqBrD,SAIlC,CAACnH,IAEA,qCACI,cAAC,IAAD,CAAMwF,UAAU,EAAO7V,MAAO,CAAErD,MAAO,OAAQmZ,aAAc,OAA7D,SACI,qBAAKtrB,UAAU,GAAf,SACI,eAAC,IAAD,CAAKmtB,OAAQ,GAAIntB,UAAU,oBAA3B,UACI,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,8BAAK,wDAET,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAD,CACI5X,MAAO,CAAErD,MAAO,QAChB2R,YAAY,QACZ3c,MAAOwoB,GACPhoB,SAAU,SAACW,GAAD,OApSb,SAACA,GAEtB,GADAsnB,GAAiBtnB,GACbA,EAAG,CACH,IAAMwoB,EAAYrB,GAAexa,MAAK,SAAA8b,GAAC,OAAIA,EAAEzmB,QAAU8N,OAAO9P,MAC1DwoB,EACAX,GAAmBW,EAAUV,UAE7B/D,MA6RiC2E,CAAiB1oB,IAClC2oB,eAAgB,SAAAC,GAAI,OAChB,gCACKA,EACD,cAAC,IAAD,CAAS1b,MAAO,CAAEqV,OAAQ,WAC1B,qBAAKrV,MAAO,CAAE2b,QAAS,OAAQC,SAAU,SAAU1b,QAAS,GAA5D,SACA,yBACI1V,UAAU,WACVwV,MAAO,CAAE6b,KAAM,OAAQ3b,QAAS,MAAOyb,QAAS,QAASG,OAAQ,UAAWnf,MAAO,QACnFhJ,QAAS,SAACb,GAvR9CuS,IAAyB,IAoRO,UAKI,cAACuT,EAAA,EAAD,IALJ,sBAVZ,SAqBKmB,EAAMhb,KAAI,SAAAmW,GAAI,OACX,cAAC9Y,EAAD,UAA0B8Y,EAAK3jB,OAAlB2jB,EAAKvjB,qBAO1C,eAAC,IAAD,WACI,eAAC,KAAD,WACI,cAAC8U,EAAD,CAAO6C,OAAQ,oDAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CACIrX,KAAK,yBACL8pB,eApSM,SAACC,EAAcC,GAC7C5B,GAA6B4B,IAoSL5D,aAAa,MACbC,cAAerkB,GAAkBC,0BACjCqiB,KAAMiD,EALV,UAOI,eAAC,IAAD,CAAK7B,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,OACNV,MAAM,OACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAY5mB,SAxR/B,SAACmC,EAAM+N,GACxB9P,QAAQC,IAAI8B,EAAM+N,IAuRsD7X,UAAU,eAGtD,cAAC,IAAD,CAAKotB,KAAM,QAEf,eAAC,IAAD,CAAKD,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,WACNV,MAAM,WACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,sBACNV,MAAM,wBACN2qB,SAAU,CAACtE,KAAM,GAAI9f,OAAQ,GAC7BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,OACNV,MAAM,OACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,wBACNV,MAAM,0BACN2qB,SAAU,CAACtE,KAAM,GAAI9f,OAAQ,GAC7BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,QACNV,MAAM,QACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,YACNV,MAAM,YACN2qB,SAAU,CAACtE,KAAM,GAAI9f,OAAQ,GAC7BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,QACNV,MAAM,UACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,sBACNV,MAAM,sBACN2qB,SAAU,CAACtE,KAAM,GAAI9f,OAAQ,GAC7BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,UACNV,MAAM,YACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,cACNV,MAAM,qBACN2qB,SAAU,CAACtE,KAAM,GAAI9f,OAAQ,GAC7BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,cACNV,MAAM,cACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,0BACNV,MAAM,0BACN2qB,SAAU,CAACtE,KAAM,GAAI9f,OAAQ,GAC7BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,yBAOzC,cAACic,EAAD,CAAO6C,OAAQ,sEAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CACIrX,KAAK,mCACL8pB,eA7biB,SAACC,EAAcC,GACxD3B,GAAwC2B,IA6bhB5D,aAAa,MACbC,cAAerkB,GAAkBc,qCACjCwhB,KAAMkD,EALV,UAOI,eAAC,IAAD,CAAK9B,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,WACNV,MAAM,gBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,iBACNV,MAAM,sBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,cACNV,MAAM,cACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,MACNV,MAAM,MACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,aACNV,MAAM,kBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,kBACNV,MAAM,kBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,kBACNV,MAAM,gBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,KAAD,CAAavuB,UAAU,eAG/B,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,gBACNV,MAAM,gBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,gBACNV,MAAM,uBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,OACNV,MAAM,OACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,cAAC,IAAD,CAAS2uB,YAAY,OAAOC,OAAK,EAAjC,SAAkC,2DAClC,eAAC,IAAD,CAAKzB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,uBACNV,MAAM,kBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,0BACNV,MAAM,qBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,wBACNV,MAAM,cACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,eAK3B,cAACnR,EAAD,CAAO6C,OAAQ,gDAAf,SACI,eAAC,IAAD,WACI,eAAC,IAAD,CACIrX,KAAK,aACL8pB,eAvlBJ,SAACC,EAAcC,GACnC1B,GAAmB0B,IAulBK5D,aAAa,MACbC,cAAerkB,GAAkB4B,gBACjC0gB,KAAMmD,EALV,UAOI,eAAC,IAAD,CAAK/B,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,mBACNV,MAAM,mBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAY5mB,SAAUA,GAAU3H,UAAU,eAGlD,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,iBACNV,MAAM,iBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAY5mB,SAAUA,GAAU3H,UAAU,kBAItD,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,eACNV,MAAM,eACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,OACNV,MAAM,aACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,cAAC,IAAD,CAAS2uB,YAAY,OAAOC,OAAK,EAAjC,SAAkC,wDAClC,eAAC,IAAD,CAAKzB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,kBACNV,MAAM,kBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,qBACNV,MAAM,2BACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,mBACNV,MAAM,yBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,QAEf,cAAC,IAAD,CAASuB,YAAY,OAAOC,OAAK,EAAjC,SAAkC,6EAClC,cAAC,IAAD,CAAKzB,OAAQ,GAAb,SACI,eAAC,IAAD,CAAKC,KAAM,GAAX,UAEI,eAAC,IAAD,CAAKD,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SAAc,6CACd,cAAC,IAAD,CAAKA,KAAM,EAAX,SAAc,mDACd,eAAC,IAAD,CAAKA,KAAM,EAAX,UAAc,2CAAd,OACA,cAAC,IAAD,CAAKA,KAAM,EAAX,SAAc,2CACd,cAAC,IAAD,CAAKA,KAAM,OAEf,eAAC,IAAD,CAAKD,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,kBAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,mBADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,YADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,WADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,uBAEJ,eAAC,IAAD,CAAKD,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,yBAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,qBADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,cADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,aADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,uBAEJ,eAAC,IAAD,CAAKD,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,yBAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,oBADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,aADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,YADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,4BAIZ,cAAC,IAAD,CAASuB,YAAY,OAAOC,OAAK,EAAjC,SAAkC,uDAClC,eAAC,IAAD,CAAKzB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,mDAEJ,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,8CAEJ,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,iDAGR,eAAC,IAAD,CAAKD,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,gCAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,2BADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,2BADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,oCAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,+BADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,+BADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,6CAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,uCADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,uCADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,+BAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,mBADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,mBADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,8BAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,wBADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,wBADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,gCAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,0BADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,0BADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,iCAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,2BADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,2BADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,kCAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,4BADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,4BADV,SAGI,cAAC,IAAD,CAAOzH,UAAU,qBAKjC,cAAC,IAAD,CAAS2uB,YAAY,OAAOC,OAAK,EAAjC,SAAkC,oDAClC,cAAC,IAAD,CACInnB,KAAK,eACL8pB,eA96BF,SAACC,EAAcC,GACrCzB,GAAqByB,IA86BG5D,aAAa,MACbC,cAAerkB,GAAkBoD,kBACjCkf,KAAMoD,EALV,SAOI,cAAC,IAAKpB,KAAN,CAAWtmB,KAAK,eAAhB,SACK,SAACuM,EAAD,OAAWga,EAAX,EAAWA,IAAK9S,EAAhB,EAAgBA,OAAhB,OACG,qCACKlH,EAAOO,KAAI,gBAAGrC,EAAH,EAAGA,IAAKzK,EAAR,EAAQA,KAAMwmB,EAAd,EAAcA,SAAaC,EAA3B,yBACR,eAAC,IAAD,CAAKf,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,2BACQsK,GADR,IAEIzmB,KAAM,CAACA,EAAM,eACbwmB,SAAU,CAACA,EAAU,eACrBpK,MAAO,CAAC,CAAEvR,UAAU,EAAMnK,QAAS,gBACnCpB,MAAM,cACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAPf,SASI,cAAC,IAAD,CAAOvuB,UAAU,gBAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,2BACQsK,GADR,IAEIzmB,KAAM,CAACA,EAAM,oBACbwmB,SAAU,CAACA,EAAU,oBACrBpK,MAAO,CAAC,CAAEvR,UAAU,EAAMnK,QAAS,qBACnCpB,MAAM,mBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAPf,SASI,cAAC,IAAD,CAAOvuB,UAAU,gBAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,2BACQsK,GADR,IAEIzmB,KAAM,CAACA,EAAM,gBACbwmB,SAAU,CAACA,EAAU,gBACrBpK,MAAO,CAAC,CAAEvR,UAAU,EAAMnK,QAAS,iBACnCpB,MAAM,eACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAPf,SASI,cAAC,IAAD,CAAOvuB,UAAU,gBAGzB,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAACpS,EAAA,EAAD,CAAqB7R,QAAS,kBAAM+R,EAAOzT,UAzC7ByK,MA6C1B,cAAC,IAAD,CAAKib,OAAQ,GAAb,SACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,UACI,cAAC,IAAD,CACI9kB,KAAK,SACLqK,QAAS,kBAAM6kB,KACfG,OAAK,EACLzI,KAAM,cAAC0I,EAAA,EAAD,IAJV,6CAkBpC,cAACnS,EAAD,CAAO6C,OAAQ,iDAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CACIrX,KAAK,mBACL8pB,eAz/BC,SAACC,EAAcC,GACxCxB,GAAwBwB,IAy/BA5D,aAAa,MACbC,cAAerkB,GAAkByD,qBACjC6e,KAAMqD,EALV,UAOI,cAAC,IAAD,CAAST,YAAY,OAAOC,OAAK,EAAjC,SAAkC,0DAClC,eAAC,IAAD,CAAKzB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,YACNV,MAAM,YACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,UACNV,MAAM,UACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,YACNV,MAAM,YACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,SACNV,MAAM,aACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,kBAI7B,eAAC,IAAD,CAAKmtB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,YACNV,MAAM,YACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAOvuB,UAAU,eAGzB,cAAC,IAAD,CAAKotB,KAAM,QAEf,cAAC,IAAD,CAASuB,YAAY,OAAOC,OAAK,EAAjC,SAAkC,uDAClC,eAAC,IAAD,CAAKzB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,iBACNV,MAAM,aACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAY5mB,SAAUA,GAAU3H,UAAU,eAGlD,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,eACNV,MAAM,WACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAY5mB,SAAUA,GAAU3H,UAAU,eAGlD,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,uBACNV,MAAM,cACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,KAAD,CAAavuB,UAAU,kBAInC,cAAC,IAAD,CAAS2uB,YAAY,OAAOC,OAAK,EAAjC,SAAkC,wDAClC,eAAC,IAAD,CAAKzB,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,kBACNV,MAAM,aACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAY5mB,SAAUA,GAAU3H,UAAU,eAGlD,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,gBACNV,MAAM,WACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,IAAD,CAAY5mB,SAAUA,GAAU3H,UAAU,eAGlD,cAAC,IAAD,CAAKotB,KAAM,EAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,wBACNV,MAAM,cACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAAC,KAAD,CAAavuB,UAAU,yBAO/C,cAACic,EAAD,CAAO6C,OAAQ,2CAAf,SACA,cAAC,IAAD,UACQ,eAAC,IAAD,CACIrX,KAAK,kBACL8pB,eA7nCA,SAACC,EAAcC,GACvCvB,GAAuBuB,IA6nCC5D,aAAa,MACbC,cAAerkB,GAAkBmE,oBACjCme,KAAMsD,EALV,UAQI,cAAC,IAAD,CAAKlC,OAAQ,GAAb,SACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,YACNV,MAAM,uBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAACO,EAAD,CAAU1c,KAAM,UAI5B,cAAC,IAAD,CAAK+a,OAAQ,GAAb,SACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,aACNV,MAAM,wBACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAACO,EAAD,CAAU1c,KAAM,UAI5B,cAAC,IAAD,CAAK+a,OAAQ,GAAb,SACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAKxJ,KAAN,CACInc,KAAM,cACNV,MAAM,cACN2qB,SAAU,CAACtE,KAAM,EAAG9f,OAAQ,GAC5BihB,WAAW,OAJf,SAMI,cAACO,EAAD,CAAU1c,KAAM,oBAQ5C,qBAAKpS,UAAU,yBAAf,SAEI,cAAC,IAAD,CAAQlB,KAAK,UAAUqK,QAAS,SAACb,GAAD,OAhqCd,WAC9B,IAAMqpB,EAAgB,CAClBrnB,MAAO8N,OAAOuX,IACdiC,eAAgB,CACZ9nB,KAAMsO,OAAO1O,GAA0BI,KAAKiO,OAAO,MACnDlO,SAAUH,GAA0BG,SACpC8F,KAAMjG,GAA0BiG,KAChCrF,MAAOZ,GAA0BY,MACjCX,MAAOD,GAA0BC,MACjCC,QAASF,GAA0BE,QACnCM,YAAaR,GAA0BQ,YACvC2nB,eAAgB,CACZC,KAAMpoB,GAA0BM,oBAChC+nB,OAAQroB,GAA0BO,uBAEtCG,UAAWV,GAA0BU,UACrCD,oBAAqBT,GAA0BS,oBAC/C6nB,mBAAoBtoB,GAA0BK,YAC9CM,wBAAyBX,GAA0BW,yBAEvD4nB,iCAAkC,CAC9B7mB,SAAUb,GAAqCa,SAC/CX,YAAaF,GAAqCE,YAClDQ,WAAYV,GAAqCU,WACjDinB,WAAY9Z,OAAO7N,GAAqCG,iBACxDynB,qBAAsB5nB,GAAqCS,cAC3DD,eAAgBR,GAAqCQ,eACrDI,IAAKZ,GAAqCY,IAC1CD,gBAAiBX,GAAqCW,gBACtDJ,cAAeP,GAAqCO,cACpDN,KAAMD,GAAqCC,KAC3C4nB,oBAAqB,CACjBhnB,SAAUb,GAAqCM,qBAC/CJ,YAAaF,GAAqCI,wBAClD0nB,KAAM9nB,GAAqCK,wBAGnD0nB,WAAY,CACR5lB,iBAAkB0L,OAAO/M,GAAgBoB,eAAesL,OAAO,MAC/DtL,eAAgB2L,OAAO/M,GAAgBoB,eAAesL,OAAO,MAC7D1L,aAAchB,GAAgBgB,aAC9BL,KAAMX,GAAgBW,KACtBumB,iBAAkB,CACdxmB,gBAAiBV,GAAgBU,gBACjCD,mBAAoBT,GAAgBS,mBACpCM,iBAAkBf,GAAgBe,kBAEtComB,+BAAgC,CAC5BC,KAAM,CACFzlB,YAAa3B,GAAgBa,iBAC7B4R,KAAMzS,GAAgBY,UACtBymB,IAAKrnB,GAAgBc,UAEzBwmB,eAAgB,CACZ3lB,YAAa3B,GAAgBkB,mBAC7BuR,KAAMzS,GAAgBiB,YACtBomB,IAAKrnB,GAAgBmB,YAEzBomB,cAAe,CACX5lB,YAAa3B,GAAgBuB,kBAC7BkR,KAAMzS,GAAgBsB,WACtB+lB,IAAKrnB,GAAgBwnB,YAG7BC,aAAcjmB,GAAkBC,aAChCimB,gBAAiB,CACbC,cAAe,CAACC,OAAQ5nB,GAAgB6nB,yBAA0BC,OAAQ9nB,GAAgB+nB,0BAC1FC,iBAAkB,CAACJ,OAAQ5nB,GAAgBioB,6BAA8BH,OAAQ9nB,GAAgBkoB,8BACjGC,yBAA0B,CAACP,OAAQ5nB,GAAgBooB,qCAAsCN,OAAQ9nB,GAAgBqoB,sCACjHC,oBAAqB,CAACV,OAAQ5nB,GAAgBuoB,iBAAkBT,OAAQ9nB,GAAgBwoB,kBACxFC,WAAY,CAACb,OAAQ5nB,GAAgB0oB,sBAAuBZ,OAAQ9nB,GAAgB2oB,uBACpFC,YAAa,CAAChB,OAAQ5nB,GAAgB6oB,wBAAyBf,OAAQ9nB,GAAgB8oB,yBACvFC,aAAc,CAACnB,OAAQ5nB,GAAgBgpB,yBAA0BlB,OAAQ9nB,GAAgBipB,0BACzFC,cAAe,CAACtB,OAAQ5nB,GAAgBmpB,0BAA2BrB,OAAQ9nB,GAAgBopB,6BAInGC,YAAa,CACTC,mBAAoB,CAChBC,UAAW1nB,GAAqB0nB,UAChCrnB,QAASL,GAAqBK,QAC9BsnB,KAAM3nB,GAAqBE,UAC3BE,OAAQJ,GAAqBI,OAC7BH,UAAWD,GAAqBC,WAEpC2nB,gBAAiB,CAACC,WAAY3c,OAAOlL,GAAqBS,eAAeoK,OAAO,MAAOid,SAAU5c,OAAOlL,GAAqBQ,aAAaqK,OAAO,MAAOkd,SAAU7c,OAAOlL,GAAqBgoB,uBAC9LC,iBAAkB,CAACJ,WAAY3c,OAAOlL,GAAqBO,gBAAgBsK,OAAO,MAAOid,SAAU5c,OAAOlL,GAAqBM,cAAcuK,OAAO,MAAOkd,SAAU7c,OAAOlL,GAAqBkoB,yBAErMC,MAAO,CACHC,eAAgB1nB,GAAoBE,UACpCynB,gBAAiB3nB,GAAoBG,WACrCynB,MAAO5nB,GAAoBC,cAGnCqZ,EAAMmD,KAAKhrB,EAAOC,QAAUW,EAAMiB,WAAWgB,sBAAwB,IAAMiqB,EAA3E,eAEWwF,GAFX,eAGW1rB,EAASE,qBACfihB,MAAK,SAAAC,GACiB,MAAfA,EAAIxf,QACJ6gB,EAAS,0CAA2C,CAChD4B,WAAY,UACZC,aAAa,OAIxB7C,OAAM,SAAApf,GACHP,QAAQC,IAAIM,MAqjC+BmtB,IAAvC,wCAIJ7a,IACA,cAAC3R,GAAD,CACIN,eAAgBiS,GAChB9R,aAvtCK,WACjB+R,IAAyB,GACzBE,GAAa,OAstCD7S,SA/sCgB,SAACoB,GAZ7BkmB,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACpoB,MAAQooB,EAAMhC,OAAS,EAAIxmB,MAAM,SAAD,OAAWwoB,EAAMhC,OAAS,EAA1B,gBAcrD1S,IAAyB,GACzBE,GAAa,OA6sCD7R,WAAY,YACZM,UAAW,2CACXJ,cAAe,CAACC,YAAa,SAAUE,aAAc,OACrDD,KAAMwR,SN1xClB6K,OAAQ1lB,EAAMC,OAAOE,MACrBwlB,UAAU,GAEjB,CACCH,KAAMxlB,EAAMC,OAAOa,UACnB0G,KAAM,YACNie,KAAM,0BACNrM,UO9Ea,WACX,MAAwBxD,mBAASqN,GAAUmB,cAA3C,mBAAO/a,EAAP,KAAakd,EAAb,KASMvU,EAAU,CACZ,CACIrL,MAAO,QACPyM,UAAW,QACXnB,IAAK,SAET,CACItL,MAAO,WACPyM,UAAW,WACXnB,IAAK,YAET,CACItL,MAAO,YACPyM,UAAW,YACXnB,IAAK,aAET,CACItL,MAAO,KACPyM,UAAW,KACXnB,IAAK,MAET,CACItL,MAAO,KACPyM,UAAW,KACXnB,IAAK,MAET,CACItL,MAAO,mBACPyM,UAAW,cACXnB,IAAK,eAET,CACItL,MAAO,aACPyM,UAAW,QACXnB,IAAK,SAET,CACItL,MAAO,SACPyM,UAAW,SACXnB,IAAK,UAET,CACItL,MAAO,oBACPyM,UAAW,oBACXnB,IAAK,qBAET,CACItL,MAAO,gBACPyM,UAAW,gBACXnB,IAAK,iBAET,CACItL,MAAO,SACPsL,IAAK,SACLoB,OAAQ,SAACC,EAAMwT,GAAP,OACJ,cAAC,KAAD,CAAO7M,KAAK,SAAZ,SACQ6M,EAAO2O,SACL,WACA,cAAC,IAAD,CAAQ52B,KAAK,UAAUqK,QAAS,SAACb,GAAD,OAjEjC,SAACiL,EAAMwT,GACxB,IAAMtS,EAAQnL,EAAKqsB,WAAU,SAAAC,GAAC,OAAIA,EAAE1jB,MAAQ6U,EAAO7U,OAC7C2jB,EAAU5d,KAAEC,UAAU5O,GAC5BusB,EAAQphB,GAAOihB,UAAW,EAC1BlP,EAAQqP,GA6DiDC,CAAaviB,EAAMwT,IAA1D,0BAqBtB,OACI,qCACI,cAAC,IAAD,CAAMsE,UAAU,EAAO7V,MAAO,CAAErD,MAAO,OAAQmZ,aAAc,OAA7D,SACI,iDAEJ,eAAC,IAAD,WACI,cAAC,IAAD,CACIrZ,QAASA,EACTsW,WAAYjf,EACZysB,WAAY,CACRC,KAAM,CACJpjB,IAAK,SAACvL,GAAD,OAxBR,SAACA,EAAO4K,GACvB,OACE,oBAAIjS,UAAWqH,EAAMrH,UAArB,SACGiS,EAAQsC,KAAI,SAACmW,EAAMuL,GAElB,IAAKvL,EAAKwL,OACR,OAAO7uB,EAAMsO,SAASsgB,QAkBIE,CAAW9uB,EAAO4K,QAI5C,cAAC,IAAD,CAAQnT,KAAK,UAAUkoB,SAAU1d,EAAK8sB,QAAO,SAAAR,GAAC,OAAIA,EAAEF,YAAUnI,OAAS,EAAvE,wCPzBR5H,OAAQ1lB,EAAMC,OAAOE,MACrBwlB,UAAU,GAEjB,CACCH,KAAMxlB,EAAMC,OAAOK,MACnBkH,KAAM,QACNie,KAAM,yBACNrM,UQ9Ea,WACX,IAAIwM,EAAUC,cACV6F,EAAWC,cACPlD,EAAaC,sBAAbD,SACF2N,EAAWC,cACTC,EAAyBjR,KAAzBiR,qBAGR,EAAkC1gB,oBAAS,GAA3C,mBAAO2gB,EAAP,KAAkBC,EAAlB,KA8BMC,EAAgB,SAACptB,GACnBvB,QAAQC,IAAIsB,GACZjD,aAAaswB,QAAQ,MAAOrtB,EAAKstB,cACjCL,GAAqB,GACrBF,EAASvR,GAAWC,YAAYC,aAAa1b,EAAK/K,OAClD83B,EAASvR,GAAWC,YAAYG,kBAAkB5b,EAAKutB,cAEnDlL,GAAYA,EAAS/sB,OAAS+sB,EAAS/sB,MAAMk4B,KAC7CjR,EAAQrK,KAAK,CACT2M,SAAUwD,EAAS/sB,MAAMk4B,KAAK3O,SAC9BC,OAAQuD,EAAS/sB,MAAMk4B,KAAK1O,OAC5BxpB,MAAO+sB,EAAS/sB,MAAMk4B,KAAKl4B,QAG/BinB,EAAQrK,KAAKvb,EAAMC,OAAOE,MAAQH,EAAMC,OAAOI,UAIvD,OACI,mCACI,qBAAKN,UAAU,gDAAf,SACI,qBAAKA,UAAU,yDAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,gCAAhB,SACI,qBAAK+2B,IAAI,eAAe/2B,UAAU,UAAUg3B,IAAKC,EAAQ,KAAgDC,YAE7G,eAAC,IAAD,WACI,oBAAIl3B,UAAU,wCAAd,+BAGA,cAAC,IAAD,IACA,eAAC,IAAD,CACIyH,KAAK,eACLzH,UAAU,aACV8tB,cAAe,CACXqJ,UAAU,GAEd9J,SA9DR,SAAC/jB,GACjBmtB,GAAa,GACbvP,EAAMmD,KAAKhrB,EAAOC,QAAUW,EAAMiB,WAAWE,WACzC,CACIg2B,SAAU9tB,EAAK8tB,SACfC,SAAU/tB,EAAK+tB,UAHvB,eAIWpxB,EAASC,kBACfkhB,MAAK,SAAAC,GACFoP,GAAa,GACM,MAAfpP,EAAIxf,QAAkBwf,EAAI/d,MAC1BotB,EAAcrP,EAAI/d,KAAKA,SAG9Boe,OAAM,SAAApf,GACHmuB,GAAa,GACY,MAAtBnuB,EAAE/B,SAASsB,QACV6gB,EAAS,kCAAmC,CAAE4B,WAAY,QAASC,aAAa,QAwCxE,UAQI,cAAC,IAAK3G,KAAN,CACInc,KAAK,WACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,gCALjB,SASI,cAAC,IAAD,CAAOmvB,OAAQ,cAACC,GAAA,EAAD,CAAcv3B,UAAU,wBAA0B8jB,YAAY,eAEjF,cAAC,IAAKF,KAAN,CACInc,KAAK,WACLoc,MAAO,CACP,CACIvR,UAAU,EACVnK,QAAS,gCALjB,SASI,cAAC,IAAD,CACAmvB,OAAQ,cAACE,GAAA,EAAD,CAAcx3B,UAAU,wBAChClB,KAAK,WACLglB,YAAY,eAGhB,cAAC,IAAD,CAAKqJ,OAAQ,GAAIntB,UAAU,OAA3B,SACI,cAAC,IAAD,CAAKotB,KAAM,OAQf,cAAC,IAAKxJ,KAAN,CAAW5jB,UAAU,cAArB,SAEQw2B,EACA,cAAC,KAAD,IACE,cAAC,IAAD,CAAQ13B,KAAK,UAAUuvB,SAAS,SAASruB,UAAU,2BAAnD,4BAOlB,sBAAKA,UAAU,+CAAf,UACI,qBAAKA,UAAU,QAAf,SACI,mBACIy3B,KAAK,SACLtuB,QAAS,SAACb,GAAD,OAAOA,EAAEoT,kBAClB1b,UAAU,uBAHd,gCAQJ,qBAAKA,UAAU,mBAAf,SACI,cAAC,KAAD,CAAM03B,GAAG,iBAAiB13B,UAAU,6BAApC,+CRvD9B2lB,OAAQ1lB,EAAMC,OAAOC,MAEtB,CACCslB,KAAMxlB,EAAMC,OAAOM,SACnBiH,KAAM,WACNie,KAAM,4BACNrM,UShGa,WACX,OACI,mCACI,qBAAKrZ,UAAU,gCAAf,SACI,qBAAKA,UAAU,yDAAf,SACI,qBAAKA,UAAU,wBAAf,SACI,sBAAKA,UAAU,uGAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,oBAAIA,UAAU,sCAAd,uBAIJ,oBAAIA,UAAU,2CAElB,qBAAKA,UAAU,qCAAf,SACI,iCACI,sBAAKA,UAAU,uBAAf,UACI,uBACIA,UAAU,2DACV23B,QAAQ,gBAFZ,kBAMA,uBACI74B,KAAK,QACLkB,UAAU,6KACV8jB,YAAY,YAIpB,sBAAK9jB,UAAU,uBAAf,UACI,uBACIA,UAAU,2DACV23B,QAAQ,gBAFZ,mBAMA,uBACI74B,KAAK,QACLkB,UAAU,6KACV8jB,YAAY,aAIpB,sBAAK9jB,UAAU,uBAAf,UACI,uBACIA,UAAU,2DACV23B,QAAQ,gBAFZ,sBAMA,uBACI74B,KAAK,WACLkB,UAAU,6KACV8jB,YAAY,gBAIpB,8BACI,wBAAO9jB,UAAU,0CAAjB,UACI,uBACIokB,GAAG,mBACHtlB,KAAK,WACLkB,UAAU,0GAEd,uBAAMA,UAAU,+CAAhB,6BACqB,IACjB,mBACIy3B,KAAK,SACLz3B,UAAU,qBACVmJ,QAAS,SAACb,GAAD,OAAOA,EAAEoT,kBAHtB,oCAWZ,qBAAK1b,UAAU,mBAAf,SACI,wBACIA,UAAU,kNACVlB,KAAK,SAFT,8BAOJ,qBAAKkB,UAAU,2BAAf,SAA0C,8DAAgC,mBAAGy3B,KAAK,cAAcz3B,UAAU,qBAAhC,SAAqD,mETUjK2lB,OAAQ1lB,EAAMC,OAAOC,MAEtB,CACCslB,KAAMxlB,EAAMC,OAAOc,SACnByG,KAAM,WACNie,KAAM,4BACNrM,UAAWtZ,EACX4lB,OAAQ1lB,EAAMC,OAAOC,MAEtB,CACCslB,KAAMxlB,EAAMC,OAAOe,QACnBwG,KAAM,UACNie,KAAM,0BACNrM,UU3Ga,WACX,IAAM9a,EAAO+wB,aAAY,SAAA1wB,GAAK,OAAIA,EAAMD,YAAYJ,QAKpD,OAHAyX,qBAAU,WACNjO,QAAQC,IAAIzJ,MAGZ,mCACI,qBAAKiX,MAAO,CAAC6Q,UAAW,QAASrmB,UAAU,4CAA3C,SACI,8BACI,eAAC,IAAD,CAAM4G,MAAM,eAAgB4O,MAAO,CAACrD,MAAO,SAA3C,UACI,yCACW5T,EAAK64B,YAEhB,0CACY74B,EAAKq5B,mBV6FjCjS,OAAQ1lB,EAAMC,OAAOE,MACrBwlB,UAAU,I,OW1GH,SAASiS,GAAOxwB,GAC7B,MAAoCywB,IAAMjiB,UAAS,GAAnD,mBAAOkiB,EAAP,KAAmBC,EAAnB,KACA,OACE,mCACE,qBAAKh4B,UAAU,6GAAf,SACE,sBAAKA,UAAU,qEAAf,UACE,sBAAKA,UAAU,qFAAf,UACE,cAAC,KAAD,CACEA,UAAU,uGACV03B,GAAG,IAFL,SAIE,qBAAKV,IAAKC,EAAQ,KAAgDC,QAASl3B,UAAU,iBAEvF,wBACEA,UAAU,8JACVlB,KAAK,SACLqK,QAAS,kBAAM6uB,GAAeD,IAHhC,SAKE,mBAAG/3B,UAAU,gCAGjB,qBACEA,UACE,0EACC+3B,EAAa,2BAA6B,WAE7C3T,GAAG,yBALL,SAOE,oBAAIpkB,UAAU,sDAAd,SACE,qBAAIA,UAAU,oBAAd,UACE,cAAC,KAAD,CACE03B,GAAG,cACH13B,UACE,6FAHJ,mBAQA,cAAC,KAAD,CACE03B,GAAG,iBACH13B,UACE,6FAHJ,oCCrCD,SAASi4B,GAAK5wB,GAC3B,IAAmBme,EAmBnB,OACE,qCACE,cAACqS,GAAD,CAAQK,aAAW,IACnB,+BACE,0BAASl4B,UAAU,wDAAnB,UACE,qBACEA,UAAU,sDAEZ,cAAC,IAAD,WA3BWwlB,EA4BIA,GA3BjBne,EAAM8wB,iBAAmB3xB,EAAcC,oBAAoB2xB,QAAQ/wB,EAAMskB,SAASxD,WAAa,EAC1F,cAAC,IAAD,CAAUuP,GAAG,mBAEflS,EAAOjR,KAAI,SAAC8jB,EAAMnmB,GACvB,OAAImmB,EAAK1S,SAAW1lB,EAAMC,OAAOC,KAE7B,cAAC,IAAD,CACEslB,KAAM4S,EAAK1S,OAAS0S,EAAK5S,KACzBpM,UAAWgf,EAAKhf,WACXnH,GAIF,mB,uBChBPomB,GAAUC,KAAVD,OAEO,SAAST,GAAOxwB,GAC3B,IAAIwe,EAAUC,cACRuQ,EAAWC,cACT5N,EAAaC,sBAAbD,SACA6N,EAAyBjR,KAAzBiR,qBAcFiC,EAAkB,SAAClwB,GAZN,IAACgB,EAaH,WAAVhB,EAAE4J,KAbW5I,EAcD,CAACnB,QAAS,2BAbzBouB,GAAqB,GACrBF,EAASvR,GAAWC,YAAYE,iBAChC5e,aAAaoyB,WAAW,OACxB5S,EAAQrK,KAAK,eAEbkN,EAASpf,EAAKnB,QAAS,CACnBmiB,WAAY,UACZC,aAAa,KAOI,YAAVjiB,EAAE4J,IACT2T,EAAQrK,KAAK,kBACI,qBAAVlT,EAAE4J,KACT2T,EAAQrK,KAAK,mBAQrB,OACI,mCAEA,eAAC8c,GAAD,CAAQt4B,UAAU,qBAAlB,UAEQqH,EAAMqxB,SACJ,qBAAK14B,UAAU,kBAAf,SACE,qBAAK+2B,IAAI,eAAeC,IAAKC,EAAQ,KAAgDC,QAAS/tB,QAAS,WAVnH0c,EAAQrK,KAAK,uBAYH,GAEN,eAAC,KAAD,CAAMmd,MAAM,OAAOC,KAAK,aAAa54B,UAAU,cAAcmJ,QAAS,SAACb,GAAD,OAAOkwB,EAAgBlwB,IAA7F,UACI,cAAC,KAAKsb,KAAN,sBAAgB,WAChB,cAAC,KAAKA,KAAN,8BAAgB,oBAChB,cAAC,KAAKA,KAAN,qBAAgB,kBCtChC,IAAQiV,GAAmBN,KAAnBM,QAASC,GAAUP,KAAVO,MACTC,GAAYC,KAAZD,QAEO,SAASE,GAAM5xB,GAC1B,IAAMwe,EAAUC,cACV6F,EAAWC,cAEXyK,EAAWC,cAGXt3B,EAAaswB,aAAY,SAAA1wB,GAAK,OAAIA,EAAMD,YAAYH,kBAE1D,EAA8CqX,oBAAS,GAAvD,mBAAOqjB,EAAP,KAAwBC,EAAxB,KACA,EAAsCtjB,mBAAS,IAA/C,mBAAOujB,EAAP,KAAoBC,EAApB,KACA,EAA4DxjB,qBAA5D,mBAAOyjB,EAAP,KAA+BC,EAA/B,KACA,EAA8C1jB,qBAA9C,mBAAO2jB,EAAP,KAAwBC,EAAxB,KAGMC,EAAY,SAAClU,GACf,OAAKne,EAAM8wB,gBAOJ3S,EAAOjR,KAAI,SAAC8jB,EAAMnmB,GACzB,OAAImmB,EAAK1S,SAAW1lB,EAAMC,OAAOE,MAE7B,cAAC,IAAD,CACIqlB,KAAM4S,EAAK1S,OAAS0S,EAAK5S,KACzBpM,UAAWgf,EAAKhf,WACXnH,GAIF,QAhBF,cAAC,IAAD,CAAUwlB,GAAI,CACjBvP,SAAU,cACVvpB,MAAO,CAAEk4B,KAAMzvB,EAAMskB,cAmBzBgO,EAAa,SAAClU,EAAM0G,EAAQjE,GAC9BrC,EAAQrK,KAAK,CACT2M,SAAU,SAAW1C,EACrB2C,OAAQ,cAAgBF,EAAY,WAAaiE,EACjDvtB,MAAO,CAAEspB,UAAWA,EAAWiE,OAAQA,MAIzCyN,EAAmB,SAAC1R,GACtB,GAAIA,EAEAhB,EAAMC,IAAI9nB,EAAOC,QAAUW,EAAMiB,WAAWK,YAAc,IAAM2mB,EAAhE,eAEOjiB,EAASE,qBAEfihB,MAAK,SAAAC,GACF,GAAiB,KAAdA,EAAIxf,QAAiBwf,EAAI/d,KAAM,CAC9B6vB,GAAmB,GACnB,IAAMjR,EAAYb,EAAI/d,KAAKA,KAAK7K,QAAQ2lB,GACxCiS,EAASvR,GAAWC,YAAYI,kBAAkBkC,EAAI/d,KAAKA,KAAK7K,UAChE,IACMyyB,EADWjZ,KAAE4hB,OAAOxS,EAAI/d,KAAKA,KAAK7K,QAAQiyB,OAAO,SAASoJ,GAAK,OAAOA,EAAE1V,MACxD7P,KAAI,SAAC5E,EAAM8E,GAC7B,OAAO,eAACskB,GAAD,CAAgCnyB,MAAO+I,EAAK+T,UAA5C,UACH,cAAC,KAAKE,KAAN,CAAyCza,QAAS,WAAQwwB,EAAW15B,EAAMC,OAAOS,WAAYgP,EAAKyU,GAAI8D,IAAvG,uBAAgB,cAAgBvY,EAAKyU,IACrC,cAAC,KAAKR,KAAN,CAAwCza,QAAS,WAAQwwB,EAAW15B,EAAMC,OAAOU,UAAW+O,EAAKyU,GAAI8D,IAArG,sBAAgB,aAAevY,EAAKyU,IACpC,cAAC,KAAKR,KAAN,CAA6Cza,QAAS,WAAQwwB,EAAW15B,EAAMC,OAAOW,eAAgB8O,EAAKyU,GAAI8D,IAA/G,2BAAgB,kBAAoBvY,EAAKyU,IACzC,cAAC,KAAKR,KAAN,CAA6Cza,QAAS,WAAQwwB,EAAW15B,EAAMC,OAAOY,eAAgB6O,EAAKyU,GAAI8D,IAA/G,2BAAgB,kBAAoBvY,EAAKyU,IACzC,cAAC,KAAKR,KAAN,CAAwCza,QAAS,WAAQwwB,EAAW15B,EAAMC,OAAOa,UAAW4O,EAAKyU,GAAI8D,IAArG,sBAAgB,aAAevY,EAAKyU,MALnB,OAAQzU,EAAKyU,OAQtCiV,EAAenI,OAGtBxJ,OAAM,SAAAtf,GACCA,EAAM7B,UACNwB,QAAQC,IAAII,EAAM7B,iBAGvB,CACH,IAAMwzB,EAAc95B,EAAMC,OAAOC,KAAOF,EAAMC,OAAOc,SACrD6kB,EAAQrK,KAAKue,KA8FrB,OA1FA/jB,qBAAU,WACN,GAAI3O,EAAM8wB,iBAEN,GADApwB,QAAQC,IAAI,OAAQhJ,GAChBwH,EAAcE,uBAAuB0xB,QAAQvS,EAAQ8F,SAASxD,WAAa,EAC3EgR,GAAmB,GACnBE,EAAe,SAGf,GAAID,EAAY7L,OAAS,EACrB,GAAI5B,EAAS/sB,OAAS+sB,EAAS/sB,MAAMspB,UAAW,CAC5C0R,EAAiBjO,EAAS/sB,MAAMspB,WAEhC,IAAM8R,EAAUrO,EAASxD,SAAS8R,MAAM,WAAW,GAAK,IAAMtO,EAAS/sB,MAAMutB,OACvE+N,EAAW,OAASvO,EAAS/sB,MAAMutB,OACzCoN,EAA0BS,GAC1BP,EAAmBS,QAElB,GAAIvO,EAASvD,OAAQ,CACtB,IAAMyE,EAAS,IAAIC,gBAAgBnB,EAASvD,QACtC2E,EAAkBF,EAAO1F,IAAI,aAC7B6F,EAAeH,EAAO1F,IAAI,UAChCyS,EAAiB7M,GAEjB,IAAMiN,EAAUrO,EAASxD,SAAS8R,MAAM,WAAW,GAAK,IAAMjN,EACxDkN,EAAW,OAASlN,EAC1BuM,EAA0BS,GAC1BP,EAAmBS,OAChB,CACH,IAAMH,EAAc95B,EAAMC,OAAOC,KAAOF,EAAMC,OAAOc,SACrD6kB,EAAQrK,KAAKue,SAgCzBlU,EAAQrK,KAAK,iBAElB,IAEHxF,qBAAU,WACN,OAAO6P,EAAQoH,QAAO,SAACtB,GACnB,GAAItkB,EAAM8wB,iBACN,GAAI3xB,EAAcE,uBAAuB0xB,QAAQvS,EAAQ8F,SAASxD,WAAa,EAC3EgR,GAAmB,GACnBE,EAAe,SAGf,GAAID,EAAY7L,OAAS,EACrB,GAAI5B,EAAS/sB,OAAS+sB,EAAS/sB,MAAMspB,UACjC0R,EAAiBjO,EAAS/sB,MAAMspB,gBAE/B,GAAIyD,EAASvD,OAAQ,CACtB,IACM2E,EADS,IAAID,gBAAgBnB,EAASvD,QACbjB,IAAI,aACnCyS,EAAiB7M,SAK7BlH,EAAQrK,KAAK,oBAGtB,CAACqK,IAGA,mCAEQqT,EACE,eAAC,KAAD,CAAQl5B,UAAU,SAAlB,UACE,cAAC,GAAD,CAAa04B,UAAU,IACvB,cAACG,GAAD,CAASrjB,MAAO,CAAEE,QAAS,UAA3B,SAWI,qBAAK1V,UAAU,yCAAf,SACI,eAAC,IAAD,WACK05B,EAAUlU,IACX,cAAC,IAAD,CAAUsR,KAAK,IAAIY,GAAG,+BAKlC0B,EAAY7L,OAAS,EACnB,eAAC,KAAD,WACE,eAACuL,GAAD,CACItjB,MAAO,CACH2kB,SAAU,OACVxV,OAAQ,QACRgG,SAAU,QACVyP,KAAM,GAEVjoB,MAAO,IACPnS,UAAU,yBARd,UAUI,qBAAKA,UAAU,OAAf,SAAsB,qBAAK+2B,IAAI,eAAeC,IAAKC,EAAQ,KAAgDC,YAC3G,cAAC,KAAD,CAAMyB,MAAM,GAAGC,KAAK,SAASyB,oBAAqB,CAACf,GAAyBgB,gBAAiB,CAACd,GAAkBx5B,UAAU,qBAA1H,SACKo5B,OAGT,eAAC,KAAD,CAAQp5B,UAAU,2BAA2BwV,MAAO,CAAEwE,WAAY,KAAlE,UACI,cAAC,GAAD,CAAa0e,UAAU,IACvB,cAACG,GAAD,CAASrjB,MAAO,CAAEqV,OAAQ,cAAesP,SAAU,WAAnD,SACI,eAAC,IAAD,WACKT,EAAUlU,IACX,cAAC,IAAD,CAAUsR,KAAK,IAAIY,GAAG,gCAKnC,qBAAK13B,UAAU,eAAf,SAA8B,cAAC,KAAD,CAAMka,KAAK,QAAQqgB,UAAU,QCtOnE,SAASC,KACpB,IAAMnE,EAAWC,cACT5N,EAAaC,sBAAbD,SAGR,GAFgB5C,cAEgCjQ,oBAAS,IAAzD,mBAAOsiB,EAAP,KAAwB5B,EAAxB,KACA,EAAgD1gB,oBAAS,GAAzD,mBAAO4kB,EAAP,KAAyBC,EAAzB,KA+CA,OA1BA1kB,qBAAU,YACM,uCAAG,sBAAA2kB,EAAA,sDACPt0B,aAAaC,QAAQ,OACrB4gB,EAAMC,IAAI9nB,EAAOC,QAAUW,EAAMiB,WAAWC,YAA5C,eAEO8E,EAASE,qBAEfihB,MAAK,SAAAC,GAfK,IAAC/d,IAgBM+d,EAAI/d,KAAKA,KAfnCvB,QAAQC,IAAIsB,EAAM,QAClBitB,GAAqB,GACrBF,EAASvR,GAAWC,YAAYC,aAAa1b,EAAK/K,OAClD83B,EAASvR,GAAWC,YAAYG,kBAAkB5b,EAAKutB,cAa3CN,GAAqB,GACrBmE,GAAoB,MAEvBhT,OAAM,SAAAtf,GACHsyB,GAAoB,GAChBtyB,EAAM7B,YAMdm0B,GAAoB,GAnBb,2CAAH,qDAsBZE,KACD,CAAClS,EAAU2N,IAGV,oCACOoE,GACH,cAACrV,GAAWyV,SAAZ,CAAqB1zB,MAAO,CAAEgxB,kBAAiB5B,wBAA/C,SACI,cAAC,KAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO9Q,KAAMxlB,EAAMC,OAAOE,MAAOkT,OAAQ,SAAAjM,GAAK,OAAI,cAAC4xB,GAAD,2BAAW5xB,GAAX,IAAkB8wB,gBAAiBA,QACrF,cAAC,IAAD,CAAO1S,KAAMxlB,EAAMC,OAAOC,KAAMmT,OAAQ,SAAAjM,GAAK,OAAI,cAAC4wB,GAAD,2BAAU5wB,GAAV,IAAiB8wB,gBAAiBA,QAKnF,cAAC,IAAD,CAAUrB,KAAK,IAAIY,GAAG,gBACtB,cAAC,IAAD,CAAOpkB,OAAQ,SAAAjM,GAAK,OAAI,cAAC,EAAD,eAAcA,gB,wBCtExDyzB,I,4BAAM,WACV,OACI,cAAC,IAAD,CAAU77B,MAAOA,EAAjB,SACI,cAAC,gBAAD,UACI,cAACu7B,GAAD,UAMdO,KAASznB,OAAO,cAAC,GAAD,IAAQ0nB,SAASC,eAAe,W","file":"static/js/main.a16129a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/seismos_logo_animated.5957fc7f.gif\";","export const SET_USER_STATE = \"SET_USER_STATE\";\nexport const USER_LOGGED_OUT = \"USER_LOGGED_OUT\";\nexport const SET_USER_PROJECT = \"SET_USER_PROJECT\";\nexport const SET_USER_C_PROJECT = \"SET_USER_C_PROJECT\";","import { SET_USER_STATE, USER_LOGGED_OUT, SET_USER_PROJECT, SET_USER_C_PROJECT } from \"redux/actionsTypes\";\n\nconst initialState = {\n    user: {},\n    userProjectIds: null,\n    project: null\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER_STATE: {\n        const user = action.payload.user;\n        return {\n            ...state,\n            user: { ...user}\n        }\n    }\n    case USER_LOGGED_OUT: {\n        return {\n            ...state,\n            user: {},\n            userProjectIds: null\n        }\n    }\n    case SET_USER_PROJECT : {\n        const projectIds = action.payload.projectIds;\n        return {\n            ...state,\n            userProjectIds: [...projectIds]\n        }\n    }\n    case SET_USER_C_PROJECT : {\n        const project = action.payload.project;\n        return {\n            ...state,\n            project: {...project}\n        }\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\n\nexport default combineReducers({ authReducer });\n\n","import { createStore } from 'redux';\nimport rootReducer from 'redux/reducers/rootReducer';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\nexport default store;","const config = {\n    API_URL: 'https://seismos.data-sleek.com'\n}\nexport default config;","import Axios from \"axios\";\n\nconst instance = Axios.create({\n    timeout: 10000,\n    headers: {\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\n    },\n    withCredentials: true,\n    responseType: 'json',\n    maxRedirects: 10\n});\n\nexport default instance;","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"notFound spin-overlay\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}","const ROUTES = {\n    AUTH: '/auth',\n    ADMIN: '/admin',\n    DASHBOARD: '/dashboard',\n    PROJECT: '/project',\n    LOGIN: '/login',\n    REGISTER: '/register',\n    PROJECT_EXISTING: '/project-select',\n    PROJECT_NEW: '/project-new',\n    DATA_INPUT: '/data-input',\n    DAILY_LOG: '/daily-log',\n    DEFAULT_VALUES: '/default-values',\n    TRACKING_SHEET: '/tracking-sheet',\n    OC_REPORT: '/qc-report',\n    NOTFOUND: '/404',\n    ACCOUNT: '/account'\n}\n\nconst API_ROUTES = {\n    AUTH_STATUS: '/api/auth',\n    AUTH_LOGIN: '/api/auth',\n    AUTH_LOGOUT: '/api/auth/auth-logout',\n    PROJECT_CREATE: '/api/project',\n    PROJECT_GET: '/api/project',\n    PROJECT_LIST: '/api/project/list',\n    DATA_INPUT_FILE_UPLOAD: '/api/data-input/file',\n    DATA_VIEW_DATA: '/api/data-input/view',\n    DAILY_LOG: '/api/daily-log',\n    DAILY_LOG_GET: '/api/daily-log/get',\n    DEFAULT_VALUE: '/api/default-volumes',\n    DEFAULT_VALUE_GET: '/api/default-value/get',\n    DEFAULT_VALUE_UPDATE: '/api/default-value/update',\n    TRACKING_SHEET: '/api/tracking-sheet',\n    TRACKING_SHEET_LIST: '/api/tracking-sheet/stage_list',\n    TRACKING_SHEET_GET: '/api/tracking-sheet/get',\n    TRACKING_SHEET_STAGE_CREATE: '/api/tracking-sheet/stage/create',\n    TRACKING_SHEET_CREATE: '/api/tracking-sheet/create',\n    TRACKING_SHEET_UPDATE: '/api/tracking-sheet/update',\n}\n\nconst AWS = {\n    API_NAME: 'cutoverplan-api'\n}\n\nconst FORM_FIELDS = {\n    PROJECT: {\n        PROJECT_NAME: 'project_name',\n        PROJECT_UUID: 'project_uuid',\n    },\n    JOB_INFO: {\n        JOB_NAME: 'job_name',\n        JOB_TYPE: 'job_type',\n        JOB_ID: 'job_id',\n        AFE_ID: 'afe_id',\n        COUNTRY_NAME: 'country_name',\n        BASIN_NAME: 'basin_name',\n        STATE: 'state',\n        JOB_START_DATE: 'job_start_date',\n        JOB_END_DATE: 'job_end_date',\n    },\n    PAD_INFO: {\n        PAD_NAME: 'pad_name',\n        PAD_ID: 'pad_uuid',\n        CLIENT_NAME: 'client_name',\n        CUSTOMER_FIELD_REP: 'customer_field_rep',\n        REP_CONTACT_NUMBER: 'rep_contact_number',\n        OPERATOR: 'operator_name',\n        SERVICE_COMPANY: 'service_company_name',\n        WIRELINE_COMPANY: 'wireline_company',\n    },\n    WELL_INFO: {\n        WELL_NAME: \"well_name\",\n        NO_OF_STAGES: \"num_stages\",\n        WELL_API: \"well_api\",\n        FORMATION: \"formation\",\n        LAT: \"lat\",\n        LONG: \"long\",\n        EASTING: \"easting\",\n        NORTHING: \"northing\",\n    },\n    WELL_VOLUME: {\n        TYPE: \"type\",\n        OD: \"od\",\n        WT: \"wt\",\n        ID: \"id\",\n        DEPTH_MD: \"depth_md\",\n        TOL: \"tol\",\n    },\n    WELL_VOLUME_ESTIMATIONS: {\n        SURFACE_VOL: 'surface_vol',\n        BBLS: 'bbls',\n        GALLONS: 'gallons',\n    },\n    CLIENT_INFO: {\n        CLIENT_USERNAME: 'clientusername',\n        TITLE: 'title',\n        PASSWORD: 'password',\n        ACTION: 'action'\n    },\n    CREW_INFO: {\n        ROLE: 'role',\n        NAME: 'name',\n        PHONE_NUMBER: 'phone_number',\n        ACTION: 'action'\n    },\n    EQUIPMENT: {\n        TRAILERS_ID: 'trailers_id',\n        POWERPACK_ID: 'powerpack_id',\n        SOURCE_ID: 'source_id',\n        ACCUMULATOR_ID: 'accumulator_id',\n        HYDROPHONES_ID: 'hydrophones_id',\n        PSI_TRANSDUCER_ID: 'transducer_id',\n        HOTSPOT_ID: 'hotspot_id',\n    }\n}\n\nconst ENUMS = {\n    ROUTES,\n    API_ROUTES,\n    AWS,\n    FORM_FIELDS\n}\n\nexport default ENUMS;","const authHttpHeaders = {\n    headers: {\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\n    },\n}\n\nconst adminHttpHeaders = () => {\n    const accessString = localStorage.getItem('JWT') ? localStorage.getItem('JWT') : '';\n    return {\n        headers: {\n            'Access-Control-Allow-Origin': 'http://localhost:3000',\n            'Authorization': `Bearer ${accessString}`\n        },\n        response: true,\n        withCredentials: true\n    }\n}\n\nconst HttpUtil = {\n    authHttpHeaders,\n    adminHttpHeaders\n}\n\nexport default HttpUtil;","const LOGIN_TO_APP_ROUTES = [\n    '/auth/login',\n    '/auth/register',\n    '/auth/invite-user-confirm',\n    '/auth/reset-password',\n    '/auth/reset-password-confirm',\n];\n\nconst ROUTES_WITHOUT_SIDEBAR = [\n    '/admin/project',\n    '/admin/project-select',\n    '/admin/project-new',\n    '/admin/account',\n]\n\nconst DATA_INPUT_CARDS = [\n    {\n        title: \"Hydrophone\",\n        section: \"hydrophone\",\n        grid: [\n            {label: \"Com port\", focus: false, color: \"bg-grey\", action: \"comport\"},\n            {label: \"Ethernet\", focus: false, color: \"bg-grey\", action: \"ethernet\"},\n            {label: \"Upload File\", focus: false, color: \"bg-grey\", action: \"upload\"},\n            {label: \"View Data\", focus: false, color: \"bg-grey\", action: \"view\"},\n        ]\n    },\n    {\n        title: \"Pressure\",\n        section: \"pressure\",\n        grid: [\n            {label: \"Com port\", focus: false, color: \"bg-grey\", action: \"comport\"},\n            {label: \"Ethernet\", focus: false, color: \"bg-grey\", action: \"ethernet\"},\n            {label: \"Upload File\", focus: false, color: \"bg-grey\", action: \"upload\"},\n            {label: \"View Data\", focus: false, color: \"bg-grey\", action: \"view\"},\n        ]\n    },\n    {\n        title: \"Pumping Data\",\n        section: \"pumping_data\",\n        grid: [\n            {label: \"Com port\", focus: false, color: \"bg-grey\", action: \"comport\"},\n            {label: \"Ethernet\", focus: false, color: \"bg-grey\", action: \"ethernet\"},\n            {label: \"Upload File\", focus: false, color: \"bg-grey\", action: \"upload\"},\n            {label: \"View Data\", focus: false, color: \"bg-grey\", action: \"view\"},\n        ]\n    },\n    {\n        title: \"Survey\",\n        section: \"survey\",\n        grid: [\n            {label: \"Com port\", focus: false, color: \"bg-grey\", action: \"comport\"},\n            {label: \"Ethernet\", focus: false, color: \"bg-grey\", action: \"ethernet\"},\n            {label: \"Upload File\", focus: false, color: \"bg-grey\", action: \"upload\"},\n            {label: \"View Data\", focus: false, color: \"bg-grey\", action: \"view\"},\n        ]\n    },\n    {\n        title: \"Gamma Ray\",\n        section: \"gamma_ray\",\n        grid: [\n            {label: \"Com port\", focus: false, color: \"bg-grey\", action: \"comport\"},\n            {label: \"Ethernet\", focus: false, color: \"bg-grey\", action: \"ethernet\"},\n            {label: \"Upload File\", focus: false, color: \"bg-grey\", action: \"upload\"},\n            {label: \"View Data\", focus: false, color: \"bg-grey\", action: \"view\"},\n        ]\n    },\n    {\n        title: \"Mud Log\",\n        section: \"mud_log\",\n        grid: [\n            {label: \"Com port\", focus: false, color: \"bg-grey\", action: \"comport\"},\n            {label: \"Ethernet\", focus: false, color: \"bg-grey\", action: \"ethernet\"},\n            {label: \"Upload File\", focus: false, color: \"bg-grey\", action: \"upload\"},\n            {label: \"View Data\", focus: false, color: \"bg-grey\", action: \"view\"},\n        ]\n    },\n]\n\nconst ROLE_OPTIONS = [\n    {label: 'Engineering Manager', value: 'engineering_manager'},\n    {label: 'Field engineer', value: 'field_engineer'},\n]\n\nconst APP_CONSTANTS = {\n    LOGIN_TO_APP_ROUTES,\n    ROUTES_WITHOUT_SIDEBAR,\n    DATA_INPUT_CARDS,\n    ROLE_OPTIONS\n}\n\nexport default APP_CONSTANTS;","import React from 'react';\nimport { Upload, Modal, message} from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\n\nexport default function FileUploadModal(props) {\n    const { Dragger } = Upload;\n    const draggerModalProps = {\n        name: 'file',\n        multiple: true,\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        onChange(info) {\n            const { status } = info.file;\n            if (status !== 'uploading') {\n                console.log(info, info.file, info.fileList);\n            }\n            if (status === 'done') {\n                props.handleOk(info, props.section);\n            } else if (status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        },\n        onDrop(e) {\n            console.log('Dropped files', e.dataTransfer.files);\n        },\n    };\n\n    return (\n        <Modal centered title=\"Upload file\" visible={props.isModalVisible} onOk={props.handleOk} onCancel={props.handleCancel} footer={null}>\n            <Dragger {...draggerModalProps}>\n                <p className=\"ant-upload-drag-icon\">\n                <InboxOutlined />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                <p className=\"ant-upload-hint\">\n                    \n                </p>\n            </Dragger>\n        </Modal>\n    );\n}","import React from 'react';\nimport { Modal, Button } from 'antd';\n\nexport default function ConfirmationModal(props) {\n\n    return (\n        <Modal\n            centered\n            title={props.modalTitle}\n            visible={props.isModalVisible}\n            onCancel={props.handleCancel}\n            footer={[\n                <Button key=\"back\" onClick={(e) => props.handleCancel(e)}>\n                    { props.footerButtons.cancel_text }\n                </Button>,\n                <Button key=\"submit\" type=\"primary\" onClick={(e) => props.handleOk(props.data)}>\n                    { props.footerButtons.confirm_text }\n                </Button>\n            ]}\n        >\n            {props.modalText}\n        </Modal>\n    );\n}","\nconst dynamicFormNestItemValues = {\n    bht_f: null,\n    bht_psi: null,\n    customer: null,\n    date: null,\n    event_occur: null,\n    field_engineer_days: null,\n    field_engineer_nights: null,\n    frac_design: null,\n    plug_seat_technique: null,\n    plug_type: null,\n    seismos_data_collection: null,\n    stage: null,\n}\n\nconst perforationIntervalInformationValues = {\n    acid: null,\n    bottom_perf: null,\n    clusters_number: null,\n    displacement_vol_bottom: null,\n    displacement_vol_plug: null,\n    displacement_vol_top: null,\n    diverter_type: null,\n    perf_daiameter: null,\n    perf_gun_desc: null,\n    plug_depth: null,\n    pumped_diverter: null,\n    spf: null,\n    top_perf: null\n}\n\nconst stageDataValues = {\n    Acid_volume_gals: null,\n    Flush_volume_bbls: null,\n    Max_prop_Conc_ppa: null,\n    Slurry_volume_bbls: null,\n    Total_lbs: null,\n    Total_clean_fluid_volume_bbls: null,\n    Total_pad_volume_bbls: null,\n    Total_sand_lbs: null,\n    base_fluid_density: null,\n    base_fluid_type: null,\n    isip: null,\n    last_bbls: null,\n    last_description: null,\n    last_ppg: null,\n    max_conc_density: null,\n    opening_well: null,\n    second_bbls: null,\n    second_description: null,\n    second_ppg: null,\n    stage_end_time: null,\n    stage_start_time: null,\n    third_bbls: null,\n    third_description: null,\n}\n\nconst propantFormValues = {\n    proppantData: [\n        {\n            bulk_density: null,\n            description: null,\n            specific_gravity: null,\n        }\n    ]\n}\n\nconst activeDataFormValues = {\n    amplitude: null,\n    frequency: null,\n    number_of_pulses: null,\n    offset: null,\n    periods: null,\n    post_end_time: null,\n    post_start_time: null,\n    pre_end_time: null,\n    pre_start_time: null,\n}\n\nconst notesFataFormValues = {\n    other_notes: null,\n    pre_notes: null,\n    post_notes: null\n}\n\nconst defaultValueForm = {\n    c1_min: 1350,\n    c1_max: 1650,\n    q1_min: 1,\n    q1_max: 200,\n    k_min: 0.001,\n    k_max: 5000,\n    model: \"assymetric\",  //x //x\n    response: \"full\",  //x\n    source: \"reflection\",  //x\n    layer: 0,\n    viscosity: 10.0,\n    desnsity: 1000,\n    compressibility: '1e-08',\n    f_low: 0.01,\n    f_high: 2.5,\n    new_sample_rate: 20.0,\n    data_sample_rate: 20,\n    algorithm: \"DiffEvolv\",  //x\n    grid_density: 5,\n    weighting: \"No\", //x\n    wlevexp: 0.0001,\n    loop: \"No\",  //x\n    method: \"fix_w\",  //x\n    total_width: 1.574804,\n    tolerence: 0.01,\n    iterations: 10,\n    company: 'Vesta',\n    well: '4',\n    pres: 0.33,\n    young: 27000,\n    overburden: 1.18,\n    poisson: 0.25,\n    eta_cp: 10,\n    fluid_t: 1,\n    tect: 0.025,\n    fluid_density: 8.33,\n    Diverter_time: 0.0,\n    met_res: 1,\n    ffkw_correction: 10000,\n    k_mpa: 1000,\n    nu_lim: 10,\n    perRed: 46,\n    start1: 120,\n    beta_ss: 0.83,\n    st_lim: 1,\n    biot: 1,\n    shadow: 300,\n    fit_end_point: 0,\n    start2: 1,\n    ng: null,\n    stage_ques: null,\n    breaker: \"N\",\n    poisson_var: \"Y\",\n    poisson_method: 2,\n    stress_shadow: \"Y\",\n    plotraw: \"N\",\n    skip_losses: \"N\",\n    use_wns: \"N\",\n    use_wncuts: \"N\",\n    fit_iterations: 50\n}\nconst FormInitialValues = {\n    dynamicFormNestItemValues,\n    perforationIntervalInformationValues,\n    stageDataValues,\n    propantFormValues,\n    activeDataFormValues,\n    notesFataFormValues,\n    defaultValueForm\n}\n\nexport default FormInitialValues;","import React, { useEffect, useState } from \"react\";\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport { Card, Input, Button, Form, Divider, Tooltip, Row, Col, Select} from 'antd';\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { Tabs } from 'antd';\nimport ConfirmationModal from \"components/Modal/ConfirmationModal\";\nimport ENUMS from \"constants/appEnums\";\nimport HttpUtil from \"util/HttpUtil\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { useToasts } from \"react-toast-notifications\";\nimport FormInitialValues from \"constants/formInitialValues\";\n\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n\nexport default function DefaultValues() {\n    let location = useLocation();\n    const { addToast } = useToasts();\n    const history = useHistory();\n\n    const [modalData, setModalData] = useState(null);\n    const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n\n    const [defaultValues, setDefaultValues] = useState([]);\n    const [projectId, setProjectId] = useState();\n    const [wellId, setWellId] = useState();\n\n    const handleCancel = () => {\n        setShowConfirmationModal(false);\n        setModalData(null);\n    }\n\n    const handleChangeConfirmed = (data) => {\n        console.log(data)\n        setShowConfirmationModal(false);\n        setModalData(null);\n    }\n\n    const onFinish = (values) => {\n        setModalData(values);\n        setShowConfirmationModal(true);\n    };\n    \n    const callback = (key) => {\n        console.log(key);\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const fetchDefaultValues = (well_id) => {\n        axios.get(config.API_URL + ENUMS.API_ROUTES.DEFAULT_VALUE + '/' + well_id,\n            {\n                ...HttpUtil.adminHttpHeaders(),\n            })\n            .then(res => {\n                if (res.status === 200 && res.data) {\n                    console.log(res.data)\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            })\n    }\n\n    const setParams = (locationData) => {\n        if (locationData.state && locationData.state.projectId) {\n            setProjectId(locationData.state.projectId);\n            setWellId(locationData.state.wellId);\n            fetchDefaultValues(locationData.state.wellId);\n        }\n        else if (locationData.search) {\n            const params = new URLSearchParams(locationData.search);\n            const projectIdSearch = params.get('projectId');\n            const wellIdSearch = params.get('wellId');\n            setProjectId(projectIdSearch);\n            setWellId(wellIdSearch);\n            fetchDefaultValues(wellIdSearch);\n        }\n    }\n\n    useEffect(() => {\n        setParams(location);\n    }, [])\n\n    useEffect(() => {\n        return history.listen((locationData) => { \n            if(location.pathname === (ENUMS.ROUTES.ADMIN + ENUMS.ROUTES.DEFAULT_VALUES)) {\n                setParams(locationData);\n            }\n        }) \n    }, [history])\n\n    return (\n        <>\n            <Card bordered={false} style={{ width: '100%', marginBottom: '5px' }}>\n                <div className=\"max-w-580-px mx-auto\">\n                    <div>\n                        On the template page fill any information that may be relevant across all stages,\n                        such information is found in completion procedures etc. Common information that can be\n                        normally filled out in the template is the following:\n                    </div>\n                </div>\n            </Card>\n            <Card bordered={false} style={{ width: '100%', marginBottom: '1.5rem' }}>\n                <Form\n                    labelAlign=\"left\"\n                    name=\"basic\"\n                    initialValues={FormInitialValues.defaultValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    className=\"default-values-form\"\n                >\n                    <Tabs onChange={callback} type=\"card\">\n                        <TabPane tab=\"Parameter bounds\" key=\"1\">\n                            <Divider orientation=\"left\" plain><strong>Parameter bounds</strong></Divider>\n                            <Row gutter={24}>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                C1 Min\n                                                <Tooltip title=\"Velocity m/s\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"c1_min\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                C1 Max\n                                                <Tooltip title=\"Velocity m/s\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"c1_max\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row gutter={24}>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Q1 Min\n                                                <Tooltip title=\"Wellbore Quality/Energy, no unit\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"q1_min\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>    \n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Q1 Max\n                                                <Tooltip title=\"Wellbore Quality/Energy, no unit\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"q1_max\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row gutter={24}>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                K min\n                                                <Tooltip title=\"Permeability, Darcy mD\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"k_min\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                K max\n                                                <Tooltip title=\"Permeability, Darcy mD\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"k_max\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Form.Item className=\"text-right\">\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Save parameter bounds\n                                </Button>\n                            </Form.Item>\n                        </TabPane>\n                        <TabPane tab=\"Model Params\" key=\"2\">\n                            <Divider orientation=\"left\" plain><strong>Model Params</strong></Divider>\n                            <Row gutter={24}>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Model\n                                                <Tooltip title=\"-\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"model\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"assymetric\">Assymetric</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Response\n                                                <Tooltip title=\"-\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"response\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"full\">Full</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row gutter={24}>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Source\n                                                <Tooltip title=\"-\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"source\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"reflection\">Reflection</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Layer\n                                                <Tooltip title=\"-\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"layer\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        \n                            <Form.Item className=\"text-right\">\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Save model params\n                                </Button>\n                            </Form.Item>\n                        </TabPane>\n                        <TabPane tab=\"Fluid properties\" key=\"3\">\n                            <Divider orientation=\"left\" plain><strong>Fluid properties</strong></Divider>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Viscosity\n                                                <Tooltip title=\"\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"viscosity\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Density\n                                                <Tooltip title=\"\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"desnsity\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Compressibility\n                                                <Tooltip title=\"\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"compressibility\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        \n                            <Form.Item className=\"text-right\">\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Save fluid properties\n                                </Button>\n                            </Form.Item>\n                        </TabPane>\n                        <TabPane tab=\"Filtering\" key=\"4\">\n                            <Divider orientation=\"left\" plain><strong>Filtering</strong></Divider>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                F Low (Hz)\n                                                <Tooltip title=\"\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"f_low\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                F High (Hz)\n                                                <Tooltip title=\"\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"f_high\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                New Sample Rate\n                                                <Tooltip title=\"\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"new_sample_rate\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Data Sample Rate\n                                                <Tooltip title=\"\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"data_sample_rate\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        \n                            <Form.Item className=\"text-right\">\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Save filtering\n                                </Button>\n                            </Form.Item>\n                        </TabPane>\n                        <TabPane tab=\"Inversion\" key=\"5\">\n                            <Divider orientation=\"left\" plain><strong>Inversion</strong></Divider>\n                            <Row>\n                            \n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Algorithm\n                                                <Tooltip title=\"\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"algorithm\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"DiffEvolv\">DiffEvolv</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Grid density\n                                                <Tooltip title=\"\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"grid_density\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Weighting\n                                                <Tooltip title=\"\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"weighting\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"No\">No</Option>\n                                            <Option value=\"Yes\">Yes</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                wlevexp\n                                                <Tooltip title=\"\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"wlevexp\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Loop\n                                                <Tooltip title=\"subdirectory with this name must exist\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"loop\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"No\">No</Option>\n                                            <Option value=\"Yes\">Yes</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Method\n                                                <Tooltip title=\"subdirectory with this name must exist\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"method\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"fix_w\">Fix w</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Total Width\n                                                <Tooltip title=\"subdirectory with this name must exist\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"total_width\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Tolerance\n                                                <Tooltip title=\"subdirectory with this name must exist\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"tolerence\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Iterations\n                                                <Tooltip title=\"subdirectory with this name must exist\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"iterations\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                \n                            </Row>\n                        \n                            <Form.Item className=\"text-right\">\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Save inversion\n                                </Button>\n                            </Form.Item>\n                        </TabPane>\n                        <TabPane tab=\"Well name\" key=\"6\">\n                        <Divider orientation=\"left\" plain><strong>Well name</strong></Divider>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Company\n                                                <Tooltip title=\"subdirectory with this name must exist\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"company\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Well\n                                                <Tooltip title=\"subdirectory with this name must exist\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"well\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        \n                            <Form.Item className=\"text-right\">\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Save well name\n                                </Button>\n                            </Form.Item>\n                        </TabPane>\n                        <TabPane tab=\"Special defaults\" key=\"7\">\n                            <Divider orientation=\"left\" plain><strong>Special defaults</strong>  (do not change unless the consequences are understood)</Divider>\n                            {/* <strong>Warning: If well has sliding sleeve in the closed position at the begining of stage 1, the oppening pressure has no relation to the reservoir pressure. At the begining ot stage 1 ask the code to choose the reservoir pressure. </strong> */}\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Pres\n                                                <Tooltip title=\"This is reservoir pressure gradient at the surface, unit is psi/ft, Taken from the well openning pressure at stage 1 \">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"pres\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Young\n                                                {/* <Tooltip title=\"?\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip> */}\n                                            </span>\n                                        }\n                                        name=\"young\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Overburden\n                                                {/* <Tooltip title=\"?\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip> */}\n                                            </span>\n                                        }\n                                        name=\"overburden\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Poisson\n                                                <Tooltip title=\"Usually between 0.2-0.3, can never be greater than 0.5\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"poisson\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Eta cp\n                                                <Tooltip title=\"Usually between 10-25 for HVFR+SLW and HVFR+SLW+Gel, Between 20-30 for  Gel+XLink, Between 40-100 for Xlink\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"eta_cp\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Flui dT\n                                                <Tooltip title=\"Use 1 for SLW, Use 1 SLW+GEL, Use 2 SLW+XL, Use 2 gel+Xlink, Use 3 for Xlink\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"fluid_t\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Tect\n                                                <Tooltip title=\"?\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"tect\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Fluid density\n                                                <Tooltip title=\"unit ppg, this is density of the wellbore fluid at the start of the job, 8.33 ppg for fresh water\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"fluid_density\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            \n                            <Divider orientation=\"left\" plain><strong>Do not change</strong></Divider>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Diverter time\n                                                <Tooltip title=\"If they apply Diverter what is the percentage of the injection time prior to applying the diverter (here 70%)\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"Diverter_time\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Met res\n                                                <Tooltip title=\"Use 1 to use Ibrahim's method in calculating the reservoir pressure and 2 to use Dan's method\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"met_res\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                FFKw Correction\n                                                <Tooltip title=\"?\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"ffkw_correction\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                K MPa\n                                                <Tooltip title=\"?\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"k_mpa\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Nu lim\n                                                <Tooltip title=\"What is the allowable pecentage change of Poissson Ratio per stage\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"nu_lim\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Per Red\n                                                <Tooltip title=\"?\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"perRed\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Start1\n                                                <Tooltip title=\"Starting time for fitting, unit is seconds.\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"start1\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Beta ss\n                                                <Tooltip title=\"Use 0.83 for all formations other than Haynesville or formations with very high Temp. for Hayneville and very high Temp formations use use 0.8\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"beta_ss\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                St lim\n                                                <Tooltip title=\"The limit for the starting time, (unit psi/sec)\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"st_lim\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Biot\n                                                <Tooltip title=\"?\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"biot\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Shadow\n                                                <Tooltip title=\"?\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"shadow\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        \n                            <Divider orientation=\"left\" plain><strong>Do not change the following</strong></Divider>\n                            <Row>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                FitEndPoint\n                                                <Tooltip title=\"0 means do not cut and all the data is useful (will use from the begining till max_end_point\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"fit_end_point\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Start2\n                                                <Tooltip title=\"?\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"start2\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                NG\n                                                <Tooltip title=\"Badstage\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"ng\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Stage Ques\n                                                <Tooltip title=\"add the stages that are questionable and strange things happen after the shut-in\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"stage_ques\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Breaker\n                                                <Tooltip title=\"Put 'N' if no Diverter, put 'Y' if all stages have Diverter and put 'V' if some has and some not\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"breaker\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"N\">N</Option>\n                                            <Option value=\"Y\">Y</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Poisson Var\n                                                <Tooltip title=\"?\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"poisson_var\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"N\">N</Option>\n                                            <Option value=\"Y\">Y</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Poisson Method\n                                                <Tooltip title=\"Put 1 to vary poisson ratio around a mean value and put 2 to vary around the previous value\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"poisson_method\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Stress Shadow\n                                                <Tooltip title=\"Use when clusters are very close and we see extreme changes in minimum stress, COP, Ageron, ...\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"stress_shadow\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"N\">N</Option>\n                                            <Option value=\"Y\">Y</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Plotraw\n                                                <Tooltip title=\"Put 'Y' to plot the raw data of the pressure and 'N' for smoothend data.\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"plotraw\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"N\">N</Option>\n                                            <Option value=\"Y\">Y</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Skip Losses\n                                                <Tooltip title=\"Skip fitting of friction losses? 'Y' or 'N'\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"skip_losses\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"N\">N</Option>\n                                            <Option value=\"Y\">Y</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Use Wns\n                                                <Tooltip title=\"Use wns cutoff value from the field? 'Y' or 'N'\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"use_wns\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"N\">N</Option>\n                                            <Option value=\"Y\">Y</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                        label={\n                                            <span>\n                                                Use Wncuts\n                                                <Tooltip title=\"Use the cuts of wns for  bad stages (stages that have wns below 3600)\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"use_wncuts\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Select>\n                                            <Option value=\"N\">N</Option>\n                                            <Option value=\"Y\">Y</Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item\n                                            label={\n                                            <span>\n                                                Fit Iteration \n                                                <Tooltip title=\"Number of time to iterate the curve fitting algorithm\">\n                                                    <QuestionCircleOutlined className=\"icon-form-info\"/>\n                                                </Tooltip>\n                                            </span>\n                                        }\n                                        name=\"fit_iterations\"\n                                        style={{marginLeft: '5rem' }}\n                                    >\n                                        <Input type=\"number\" />\n                                    </Form.Item>\n                                </Col>                    \n                            </Row>\n                        \n                            <Form.Item className=\"text-right\">\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Save special defaults\n                                </Button>\n                            </Form.Item>\n                        </TabPane>\n                    </Tabs>\n                </Form>\n            </Card>\n            {\n                showConfirmationModal && \n                <ConfirmationModal\n                    isModalVisible={showConfirmationModal}\n                    handleCancel={handleCancel}\n                    handleOk={handleChangeConfirmed}\n                    modalTitle={\"Save Defaults\"}\n                    modalText={\"Are you sure you want change default values ?\"}\n                    footerButtons={{cancel_text: 'Cancel', confirm_text: 'Yes'}}\n                    data={modalData}\n                >\n                </ConfirmationModal>\n            } \n        </>\n    );\n}\n","import ENUMS from \"constants/appEnums\";\n\nconst projectTable = [\n    {\n        title: 'Job #',\n        dataIndex: 'job_number',\n        render: (text) => text,\n    },\n    {\n        title: 'Job name',\n        dataIndex: 'job_name',\n    },\n    {\n        title: 'Project name',\n        dataIndex: 'project_name',\n    },\n    {\n        title: 'Created by',\n        dataIndex: 'created_by',\n    },\n    {\n        title: 'Created date',\n        dataIndex: 'created_at_date',\n    },\n    {\n        title: 'Created time',\n        dataIndex: 'created_time',\n    },\n];\n\nconst jobInfoFormTableData = {\n    columns: [\n        { key: \"1\", label: \"\", width: \"50%\" },\n        { key: \"2\", label: \"\", width: \"50%\" },\n    ],\n    grid: [\n        {\n          rows: [\n            { label: 'Job name', field: ENUMS.FORM_FIELDS.JOB_INFO.JOB_NAME, required: true },\n            { label: 'Job type', field: ENUMS.FORM_FIELDS.JOB_INFO.JOB_TYPE, required: true },\n            { label: 'Job id', field: ENUMS.FORM_FIELDS.JOB_INFO.JOB_ID, required: true },\n            { label: 'AFE #', field: ENUMS.FORM_FIELDS.JOB_INFO.AFE_ID, required: true },\n            { label: 'Country', field: ENUMS.FORM_FIELDS.JOB_INFO.COUNTRY_NAME, required: true },\n            { label: 'Basin', field: ENUMS.FORM_FIELDS.JOB_INFO.BASIN_NAME, required: true },\n            { label: 'State', field: ENUMS.FORM_FIELDS.JOB_INFO.STATE, required: true },\n            { label: 'Start date', field: ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE, required: true },\n            { label: 'End date', field: ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE, required: true },\n          ]\n        }\n    ]\n}\n\nconst padInfoFormTableData = {\n    columns: [\n        { key: \"1\", label: \"\", width: \"50%\" },\n        { key: \"2\", label: \"\", width: \"50%\" },\n    ],\n    grid: [\n        {\n          rows: [\n            { label: 'Pad name', field: ENUMS.FORM_FIELDS.PAD_INFO.PAD_NAME, required: true },\n            { label: 'Pad Id', field: ENUMS.FORM_FIELDS.PAD_INFO.PAD_ID, required: true },\n            { label: 'Client name', field: ENUMS.FORM_FIELDS.PAD_INFO.CLIENT_NAME, required: true },\n            { label: 'Customer field rep', field: ENUMS.FORM_FIELDS.PAD_INFO.CUSTOMER_FIELD_REP, required: true },\n            { label: 'Rep contact #', field: ENUMS.FORM_FIELDS.PAD_INFO.REP_CONTACT_NUMBER, required: true, datatype: 'integer' },\n            { label: 'Operator', field: ENUMS.FORM_FIELDS.PAD_INFO.OPERATOR, required: true },\n            { label: 'Service company', field: ENUMS.FORM_FIELDS.PAD_INFO.SERVICE_COMPANY, required: true },\n            { label: 'Wireline company', field: ENUMS.FORM_FIELDS.PAD_INFO.WIRELINE_COMPANY, required: true },\n          ]\n        }\n    ]\n}\n\nconst wellInfoFormTableData = {\n    columns: [\n        { key: \"1\", label: \"Well name\", width: \"14%\", field: ENUMS.FORM_FIELDS.WELL_INFO.WELL_NAME, defaultValue: \"\", required: true },\n        { key: \"2\", label: \"# of stages\", width: \"13%\", field: ENUMS.FORM_FIELDS.WELL_INFO.NO_OF_STAGES, defaultValue: \"\", required: true, datatype: 'integer' },\n        { key: \"3\", label: \"Well API\", width: \"14%\", field: ENUMS.FORM_FIELDS.WELL_INFO.WELL_API, defaultValue: \"\", required: true },\n        { key: \"4\", label: \"Formation\", width: \"14%\", field: ENUMS.FORM_FIELDS.WELL_INFO.FORMATION, defaultValue: \"\", required: true },\n        { key: \"5\", label: \"Lat\", width: \"14%\", field: ENUMS.FORM_FIELDS.WELL_INFO.LAT, defaultValue: \"\", required: true },\n        { key: \"6\", label: \"Long\", width: \"14%\", field: ENUMS.FORM_FIELDS.WELL_INFO.LONG, defaultValue: \"\", required: true },\n        { key: \"7\", label: \"Easting\", width: \"14%\", field: ENUMS.FORM_FIELDS.WELL_INFO.EASTING, defaultValue: \"\", required: true },\n        { key: \"8\", label: \"Northing\", width: \"13%\", field: ENUMS.FORM_FIELDS.WELL_INFO.NORTHING, defaultValue: \"\", required: true },\n        { key: \"9\", label: \"\", width: \"5%\", field: \"action\", defaultValue: \"\", actionColumn: true, className: \"noborder\" },\n    ],\n    grid: [\n        {\n          row: \"row1\"\n        }\n    ]\n}\n\nconst wellVolumeFormTableData = {\n    columns: [\n        { key: \"1\", label: \"Type\", width: \"16%\", field: ENUMS.FORM_FIELDS.WELL_VOLUME.TYPE, required: true },\n        { key: \"2\", label: \"OD\", width: \"16%\", field: ENUMS.FORM_FIELDS.WELL_VOLUME.OD, required: true, datatype: 'integer' },\n        { key: \"2\", label: \"Wt\", width: \"17%\", field: ENUMS.FORM_FIELDS.WELL_VOLUME.WT, required: true, datatype: 'integer' },\n        { key: \"2\", label: \"ID\", width: \"17%\", field: ENUMS.FORM_FIELDS.WELL_VOLUME.ID, required: true, datatype: 'integer' },\n        { key: \"2\", label: \"Depth [MD]\", width: \"17%\", field: ENUMS.FORM_FIELDS.WELL_VOLUME.DEPTH_MD, required: true, datatype: 'integer' },\n        { key: \"2\", label: \"TOL\", width: \"17%\", field: ENUMS.FORM_FIELDS.WELL_VOLUME.TOL, required: true, datatype: 'integer' },\n    ],\n    grid: [\n        {\n          rows: [\n            'casing',\n            'liner',\n            'liner_sec'\n          ]\n        }\n    ]\n}\n\nconst wellVolumeEstimationsFormTableData = {\n    columns: function (wellName) {\n        return [\n            { key: \"1\", label: wellName, colSpan: \"2\" },\n        ]\n    },\n    grid: [\n        {\n          rows: [\n            { label: 'Surface Vol. [bbls]', field: ENUMS.FORM_FIELDS.WELL_VOLUME_ESTIMATIONS.SURFACE_VOL, datatype: 'integer' },\n            { label: 'bbls', field: ENUMS.FORM_FIELDS.WELL_VOLUME_ESTIMATIONS.BBLS, datatype: 'integer' },\n            { label: 'gallons', field: ENUMS.FORM_FIELDS.WELL_VOLUME_ESTIMATIONS.GALLONS, datatype: 'integer' },\n          ]\n        }\n    ]\n}\n\nconst clientInfoFormTableData = {\n    columns: [\n        { key: \"1\", label: \"Client Username\", width: \"38%\", field: ENUMS.FORM_FIELDS.CLIENT_INFO.CLIENT_USERNAME, required: true },\n        { key: \"2\", label: \"Title\", width: \"27%\", field: ENUMS.FORM_FIELDS.CLIENT_INFO.TITLE, required: true },\n        { key: \"3\", label: \"Password\", width: \"27%\", field: ENUMS.FORM_FIELDS.CLIENT_INFO.PASSWORD, required: true },\n        { key: \"4\", label: \"\", width: \"8%\", field: ENUMS.FORM_FIELDS.CLIENT_INFO.ACTION, defaultValue: \"\", className: \"noborder\" },\n    ],\n    grid: [\n        {\n          rows: [\n            ''\n          ]\n        }\n    ]\n}\n\nconst crewInfoFormTableData = {\n    columns: [\n        { key: \"1\", label: \"Role\", width: \"38%\", field: ENUMS.FORM_FIELDS.CREW_INFO.ROLE, required: true },\n        { key: \"2\", label: \"Name\", width: \"27%\", field: ENUMS.FORM_FIELDS.CREW_INFO.NAME, required: true },\n        { key: \"3\", label: \"Contact\", width: \"27%\", field: ENUMS.FORM_FIELDS.CREW_INFO.PHONE_NUMBER, required: true },\n        { key: \"4\", label: \"\", width: \"8%\", field: ENUMS.FORM_FIELDS.CREW_INFO.ACTION, defaultValue: \"\", className: \"noborder\" },\n    ],\n    grid: [\n        {\n          rows: [\n            ''\n          ]\n        }\n    ]\n}\n\nconst equipmentFormTableData = {\n    columns: [\n        { key: \"1\", label: \"Equipment\", width: \"50%\" },\n        { key: \"1\", label: \"ID #\", width: \"50%\" },\n    ],\n    grid: [\n        {\n          rows: [\n            { label: 'Trailers', field: ENUMS.FORM_FIELDS.EQUIPMENT.TRAILERS_ID, required: true, datatype: 'integer' },\n            { label: 'Powerpack', field: ENUMS.FORM_FIELDS.EQUIPMENT.POWERPACK_ID, required: true, datatype: 'integer' },\n            { label: 'Source', field: ENUMS.FORM_FIELDS.EQUIPMENT.SOURCE_ID, required: true, datatype: 'integer' },\n            { label: 'Accumulator', field: ENUMS.FORM_FIELDS.EQUIPMENT.ACCUMULATOR_ID, required: true, datatype: 'integer' },\n            { label: 'Hydrophones', field: ENUMS.FORM_FIELDS.EQUIPMENT.HYDROPHONES_ID, required: true, datatype: 'integer' },\n            { label: 'PSI transducer', field: ENUMS.FORM_FIELDS.EQUIPMENT.PSI_TRANSDUCER_ID, required: true, datatype: 'integer' },\n            { label: 'Hotspot', field: ENUMS.FORM_FIELDS.EQUIPMENT.HOTSPOT_ID, required: true, datatype: 'integer' },\n          ]\n        }\n    ]\n}\n\nconst projectInfoFormTableData = {\n    columns: [\n        { key: \"1\", label: \"\", width: \"50%\" },\n        { key: \"1\", label: \"\", width: \"50%\" },\n    ],\n    grid: [\n        {\n          rows: [\n            { label: 'Project Name', field: ENUMS.FORM_FIELDS.PROJECT.PROJECT_NAME, required: true },\n            { label: 'Project UUID', field: ENUMS.FORM_FIELDS.PROJECT.PROJECT_UUID, required: true },\n          ]\n        }\n    ]\n}\n\nconst TableHeadersUtil = {\n    clientInfoFormTableData,\n    crewInfoFormTableData,\n    jobInfoFormTableData,\n    padInfoFormTableData,\n    projectTable,\n    wellInfoFormTableData,\n    wellVolumeFormTableData,\n    wellVolumeEstimationsFormTableData,\n    equipmentFormTableData,\n    projectInfoFormTableData\n}\n\nexport default TableHeadersUtil;","import { extend } from \"underscore\";\n\nconst getNewValue = (values, prevValue, fieldIndex, index, counter) => {\n    if(index >= fieldIndex) {\n        return values[counter] ? values[counter] : prevValue;\n    } else {\n        return prevValue;\n    }\n}\n\nconst setClipboardValues = (fields, values, fieldIndex) => {\n    let newFieldValues = {};\n    let counter = -1;\n    Object.keys(fields).map((field_key, index) => {\n        newFieldValues = {\n            ...newFieldValues,\n            [field_key]: (index >= fieldIndex) ? getNewValue(values, fields[field_key], fieldIndex, index, ++counter) : fields[field_key],\n        }\n        return field_key;\n    });\n    return newFieldValues;\n}\n\nconst getNumberValue = (val) => {\n    if (val) {\n        return parseFloat(val.replace(/,/g, ''))\n    } else {\n        return 0;\n    }\n}\n\nconst formatFormValuesFromRowGridData = (gridValues) => {\n    let fieldVlaues = {};\n    if (!gridValues)\n        return fieldVlaues;\n    gridValues.map(gridRow => {\n        const obj = gridRow.find(val => val.field);\n        const fieldValuePair = {[obj.field]: obj.datatype === 'integer' ? getNumberValue(obj.value) : obj.value};\n        if(obj.field !== \"action\") {\n            fieldVlaues = extend(fieldVlaues, fieldValuePair);\n        }\n        return fieldValuePair;\n    });\n\n    return fieldVlaues;\n}\n\nconst formatFormValuesFromColumnGridData = (gridValues) => {\n    if (!gridValues)\n        return [];\n    const newValues = gridValues.map(row => {\n        let fieldValues = {};\n        row.map(col => {\n            if(col.field !== \"action\") {\n                fieldValues = extend(fieldValues, {[col.field]: col.datatype === 'integer' ? getNumberValue(col.value) : col.value})\n            }\n            return col;\n        })\n        return fieldValues;\n    });\n\n    return newValues;\n}\n\nconst ProjectUtil = {\n    setClipboardValues,\n    formatFormValuesFromRowGridData,\n    formatFormValuesFromColumnGridData\n}\n\nexport default ProjectUtil;","import React, { useEffect, useState } from \"react\";\nimport ReactDataSheet from \"react-datasheet\";\nimport \"react-datasheet/lib/react-datasheet.css\";\nimport \"./Grid.css\";\n\nconst SheetRenderer = props => {\n    const { className, columns } = props;\n    return (\n        <table className={className + \" seismos-spreadsheet-grid\"}>\n            <thead>\n                <tr>\n                {columns.map((col, index) => (\n                    <th\n                        key={index}\n                        className={`cell ${className} ${col.className}`}\n                        style={{\n                            width: col.width,\n                            background: \"#f9f9f9\",\n                            padding: \"10px 20px\",\n                        }}\n                        colSpan={col.colSpan ? col.colSpan : 1}\n                    >\n                        {col.label}\n                    </th>\n                ))}\n                </tr>\n            </thead>\n            <tbody>{props.children}</tbody>\n        </table>\n    );\n};\n\n// TODO: REMOVE\n// const CellRenderer = props => {\n//     const { children } = props;\n\n//     return (\n//         <td className=\"cell\" style={{ textAlign: \"center\" }}>\n//             {children}\n//         </td>\n//     );\n// };\n\nexport default function Grid(props) {\n\n    const [columns, setColumns] = useState();\n    const [grid, setGrid] = useState();\n\n    const renderSheet = (sheetProps) => {\n        return <SheetRenderer columns={columns} {...sheetProps} />;\n    }\n\n    // TODO: REMOVE\n    // const renderRow = (rowProps) => {\n    //     const { row, cells, ...rest } = rowProps;\n    //     return <CellRenderer rowIndex={row} {...rest} />;\n    // }\n\n    useEffect(() => {\n        setColumns(props.columns);\n        setGrid(props.grid);\n    }, [props]);\n\n    return (\n        <div style={{ width: props.width ? props.width : \"100%\" }}>\n            {grid && <ReactDataSheet\n                data={grid}\n                valueRenderer={cell => cell.value}\n                sheetRenderer={renderSheet}\n                className={props.className}\n                isCellNavigable={(cell, row, col) => {return !cell.disableEvents ? true : false}}\n                // cellRenderer={renderRow}\n                onCellsChanged={changes => {\n                    const gridData = grid.map(row => [...row]);\n                    changes.forEach(({ cell, row, col, value }) => {\n                        console.log({ cell, row, col, value })\n                        let error = false;\n                        let className = cell.className;\n                        if(gridData[row][col]['required'] && value === \"\") {\n                            error = true;\n                            className = className + 'cell-error';\n                        } else {\n                            className = className ? className.replace(\"cell-error\",\"\") : 'null';\n                        }\n                        gridData[row][col] = { ...gridData[row][col], value, error: error, className };\n                    });\n                    setGrid(gridData);\n                    props.hasOwnProperty('gridValueChanged') && props.gridValueChanged(gridData, props.index);\n                }}\n            />}\n        </div>\n    );\n}\n","import React, { PureComponent } from 'react';\n\nclass NumberInput extends PureComponent {\n    constructor (props) {\n      super(props)\n      this.handleChange = this.handleChange.bind(this)\n    }\n  \n    componentDidMount () {\n      this._input.focus()\n    }\n  \n    handleChange (e) {\n      this.props.onChange(e.target.value)\n    }\n  \n    render () {\n      const {value, onKeyDown} = this.props\n      return (\n        <input\n          ref={input => { this._input = input }}\n          type='number'\n          className='data-editor transparent-input'\n          value={value}\n          onChange={this.handleChange}\n          onKeyDown={onKeyDown}\n        />\n      )\n    }\n  }\n\nexport default NumberInput;","import React, { useState } from \"react\";\nimport { Button, DatePicker, Space } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport _ from \"lodash\";\nimport ENUMS from \"constants/appEnums\";\nimport moment from 'moment';\nimport NumberInput from \"components/Grid/DataEditor/NumberInput\";\n\nexport default function JobInfo(props) {\n    \n    const [jobInfoGrid, setJobInfoGrid] = useState([]);\n    const [padInfoGrid, setPadInfoGrid] = useState([]);\n\n    const onDateChange = (date, dateString, grid, index, field) => {\n        let newDate = null;\n        if(date) {\n            newDate = date.format('x');\n        }\n        const newJobInfoGrid = _.cloneDeep(grid);\n        newJobInfoGrid[index].find(r => r.field === field).value = Number(newDate);\n        handleJobInfoGridChanged(newJobInfoGrid);\n    }\n\n    const getRow = (t) => {\n        return t.rows.map((row, index) => {\n            return [\n                { value: row.label, readOnly: true, disableEvents: true },\n                { value: \"\", field: row.field, required: row.required, datatype: row.datatype, dataEditor: row.field === ENUMS.FORM_FIELDS.PAD_INFO.REP_CONTACT_NUMBER ? NumberInput : null },\n            ]\n        })\n    }\n\n    const startDatecomponent = (rowIdx, grid) => {\n        const currentVal = grid[rowIdx].find(r => r.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE).value;\n        const momentDate = currentVal ? moment(Number(currentVal)) : null;\n        return <DatePicker className=\"w-100\" value={momentDate} onChange={(date, dateString) => onDateChange(date, dateString, grid, rowIdx, ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE)} />;\n    }\n\n    const endDatecomponent = (rowIdx, grid) => {\n        const currentVal = grid[rowIdx].find(r => r.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE).value;\n        const momentDate = currentVal ? moment(Number(currentVal)) : null;\n        return <DatePicker className=\"w-100\" value={momentDate} onChange={(date, dateString) => onDateChange(date, dateString, grid, rowIdx, ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE)} />;\n    }\n\n    const populateJobInfoGrid = () => {\n        const jobgrid = TableHeadersUtil.jobInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            const row = getRow(t);\n            return rows.concat(row);\n        }, []);\n        setJobInfoGrid(jobgrid.map((x, index) => {\n            return x.map(y => { \n                const componentData = (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE ? startDatecomponent(index, jobgrid) : (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE ?  endDatecomponent(index, jobgrid) : null));\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE || y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE) ? true : false\n                }\n            })\n        }));\n    }\n\n    const populatePadInfoGrid = () => {\n        setPadInfoGrid(TableHeadersUtil.padInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            const row = getRow(t);\n            return rows.concat(row);\n        }, []))\n    }\n\n    const handleJobInfoGridChanged = (updatedGridData) => {\n        const newGrid = updatedGridData.map((x, index) => {\n            return x.map(y => { \n                const componentData = (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE ? startDatecomponent(index, updatedGridData) : (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE ?  endDatecomponent(index, updatedGridData) : null));\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE || y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE) ? true : false\n                }\n            })\n        });\n        props.setJobInfoFormValue(newGrid);\n        setJobInfoGrid(newGrid);\n    }\n\n    const handlePadInfoGridChanged = (updatedGridData) => {\n        props.setPadInfoFormValue(updatedGridData);\n        setPadInfoGrid(updatedGridData);\n    }\n\n    const gotoNextStep = () => {\n        let isJobInfoValid = true;\n        let isPadInfoValid = true;\n        const validatedJobGrid = _.cloneDeep(jobInfoGrid);\n        validatedJobGrid.map(row => {\n            row.map(cell => {\n                if(cell.required && cell.value === \"\") {\n                    isJobInfoValid = false;\n                    cell.className = 'cell-error';\n                }\n                return cell;\n            });\n            return row;\n        })\n        const validatedPadGrid = _.cloneDeep(padInfoGrid);\n        validatedPadGrid.map(row => {\n            row.map(cell => {\n                if(cell.required && cell.value === \"\") {\n                    isPadInfoValid = false;\n                    cell.className = 'cell-error';\n                }\n                return cell;\n            });\n            return row;\n        })\n        if(!isJobInfoValid || !isPadInfoValid) {\n            handleJobInfoGridChanged(validatedJobGrid)\n            handlePadInfoGridChanged(validatedPadGrid)\n        } else {\n            props.next();\n        }\n    }\n\n    useState(() => {\n        if(props.jobInfoFormValues != null) {\n            console.log(_.cloneDeep(props.jobInfoFormValues))\n            props.jobInfoFormValues && setJobInfoGrid(props.jobInfoFormValues.map((x, index) => {\n                return x.map(y => { \n                    const componentData = (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE ? startDatecomponent(index, props.jobInfoFormValues) : (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE ?  endDatecomponent(index, props.jobInfoFormValues) : null));\n                    return {\n                        ...y,\n                        component: componentData,\n                        forceComponent: (y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_START_DATE || y.field === ENUMS.FORM_FIELDS.JOB_INFO.JOB_END_DATE) ? true : false\n                    }\n                })\n            }));\n        } else {\n            populateJobInfoGrid();\n        }\n        if(props.padInfoFormValues != null) {\n            props.padInfoFormValues && setPadInfoGrid(props.padInfoFormValues);\n        } else {\n            populatePadInfoGrid();\n        }\n    }, props);\n\n    return (\n        <>\n            <div className=\"flex\" style={{width: '80%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Space size=\"large\">\n                    <Grid \n                        columns={TableHeadersUtil.jobInfoFormTableData.columns}\n                        grid={jobInfoGrid}\n                        className=\"no-header-grid mb-8\"\n                        gridValueChanged={handleJobInfoGridChanged}\n                    ></Grid>\n                    <Grid \n                        columns={TableHeadersUtil.padInfoFormTableData.columns}\n                        grid={padInfoGrid}\n                        className=\"no-header-grid mb-8\"\n                        gridValueChanged={handlePadInfoGridChanged}\n                    ></Grid>\n                </Space>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {gotoNextStep()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n\n","import React, { useState } from \"react\";\nimport { Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport _ from \"lodash\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\"; \nimport ConfirmationModal from \"components/Modal/ConfirmationModal\";\nimport ENUMS from \"constants/appEnums\";\nimport NumberInput from \"components/Grid/DataEditor/NumberInput\";\n\nexport default function WellInfo(props) {\n    \n    const [wellInfoGrid, setWellInfoGrid] = useState([]);\n    const [showConfirmationModal, setShowConfirmationModal] = useState();\n    const [modalData, setModalData] = useState();\n\n    const remove = (rowIdx, grid) => {\n        setShowConfirmationModal(true);\n        setModalData({\n            rowIdx,\n            grid\n        })\n    }\n\n    const handleCancel = () => {\n        setShowConfirmationModal(false);\n        setModalData(null);\n    }\n\n    const handleRemoveConfirmed = (data) => {\n        data.grid.splice(data.rowIdx, 1);\n        setWellInfoGrid(data.grid.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === \"action\" ? component(index, data.grid) : null\n                return {\n                    ...y,\n                    component: componentData\n                }\n            })\n        }));\n        setShowConfirmationModal(false);\n        setModalData(null);\n    }\n\n    const component = (rowIdx, grid) => {\n        return <MinusCircleOutlined onClick={(event) => remove(rowIdx, grid)}/>;\n    }\n\n    const isForcedComponent = (column) => {\n        return column.actionColumn;\n    }\n\n    const populateWillInfoGrid = () => {\n        const grid = TableHeadersUtil.wellInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            const columns = [];\n            TableHeadersUtil.wellInfoFormTableData.columns.map(column => {\n                const className = column.actionColumn ? \"noborder\" : \"\";\n                columns.push({\n                    value: column.defaultValue,\n                    field: column.field,\n                    required: column.required,\n                    component: null,\n                    forceComponent: isForcedComponent(column),\n                    className: className,\n                    datatype: column.datatype,\n                    dataEditor: column.field === ENUMS.FORM_FIELDS.WELL_INFO.NO_OF_STAGES ? NumberInput : null\n                });\n                return column;\n            })\n            return rows.concat([columns]);\n        }, []);\n        setWellInfoGrid(grid.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === \"action\" ? component(index, grid) : null\n                return {\n                    ...y,\n                    component: componentData\n                }\n            })\n        }));\n    }\n\n    const addNewWell = (e) => {\n        e.preventDefault();\n        const columns = [];\n        TableHeadersUtil.wellInfoFormTableData.columns.map(column => {\n            const className = column.actionColumn ? \"noborder\" : \"\";\n            columns.push({\n                value: column.defaultValue,\n                field: column.field,\n                required: column.required,\n                component: null,\n                forceComponent: isForcedComponent(column),\n                className: className,\n                datatype: column.datatype,\n                dataEditor: column.field === ENUMS.FORM_FIELDS.WELL_INFO.NO_OF_STAGES ? NumberInput : null\n            });\n            return column;\n        });\n        const newWellInfoGrid = [\n            ...wellInfoGrid,\n            columns\n        ];\n        setWellInfoGrid(newWellInfoGrid.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === \"action\" ? component(index, newWellInfoGrid) : null\n                return {\n                    ...y,\n                    component: componentData\n                }\n            })\n        }));\n    }\n\n    const handleWellInfoGridChanged = (updatedGridData) => {\n        props.setFormValue(updatedGridData);\n        setWellInfoGrid(updatedGridData.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === \"action\" ? component(index, updatedGridData) : null\n                return {\n                    ...y,\n                    component: componentData\n                }\n            })\n        }));\n    }\n\n    const gotoNextStep = () => {\n        let isWellInfoValid = true;\n        const validatedWellGrid = _.cloneDeep(wellInfoGrid);\n        validatedWellGrid.map(row => {\n            row.map(cell => {\n                if(cell.required && cell.value === \"\") {\n                    isWellInfoValid = false;\n                    cell.className = 'cell-error';\n                }\n                return cell;\n            })\n            return row;\n        })\n\n        if(!isWellInfoValid) {\n            handleWellInfoGridChanged(validatedWellGrid)\n        } else {\n            console.log('wellInfoGrid', wellInfoGrid)\n            props.next();\n        }\n    }\n\n    useState(() => {\n        if(props.formValues != null) {\n            props.formValues && setWellInfoGrid(props.formValues.map((x, index) => {\n                return x.map(y => { \n                    const componentData = y.field === \"action\" ? component(index, props.formValues) : null\n                    return {\n                        ...y,\n                        component: componentData\n                    }\n                })\n            }));\n        } else {\n            populateWillInfoGrid();\n        }\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\">\n                <Grid \n                    columns={TableHeadersUtil.wellInfoFormTableData.columns}\n                    grid={wellInfoGrid}\n                    gridValueChanged={handleWellInfoGridChanged}\n                ></Grid>\n                <div className=\"text-lightBlue-600 mt-2 cursor-pointer inline-block\" onClick={(e) => addNewWell(e)}>+ Add a new well</div>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {gotoNextStep()}}>\n                    Next\n                </Button>\n            </div>\n            {\n                showConfirmationModal && <ConfirmationModal\n                    isModalVisible={showConfirmationModal}\n                    handleCancel={handleCancel}\n                    handleOk={handleRemoveConfirmed}\n                    modalTitle={\"Delete Row\"}\n                    modalText={\"Are you sure you want to delete this row?\"}\n                    footerButtons={{cancel_text: 'Cancel', confirm_text: 'Yes'}}\n                    data={modalData}\n                >\n                </ConfirmationModal>\n            }\n        </>\n    );\n}\n\n","import React, { useState } from \"react\";\nimport { Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport _ from \"lodash\";\nimport { Collapse } from 'antd';\nimport { Tooltip } from 'antd';\nimport NumberInput from \"components/Grid/DataEditor/NumberInput\";\nimport ENUMS from \"constants/appEnums\";\n\nexport default function WellVolume(props) {\n    const { Panel } = Collapse;\n    const [wellVolumeGrids, setWellVolumeGrids] = useState([]);\n    const [wellVolumeEstimationsGrids, setWellVolumeEstimationsGrids] = useState([]);\n\n    const getWellVolumeGridRow = (t) => {\n        return t.rows.map(label => {\n            const columns = [];\n            TableHeadersUtil.wellVolumeFormTableData.columns.map(column => {\n                const defaultVal = column.field === \"type\" ? label : \"\";\n                let col = null;\n                if (column.field === \"type\") {\n                    col = { \n                        value: defaultVal,\n                        field: column.field,\n                        readOnly: true,\n                        disableEvents: true\n                    }\n                } else {\n                    col = { \n                        value: defaultVal,\n                        field: column.field,\n                        required: column.required,\n                        dataEditor: NumberInput,\n                        datatype: column.datatype\n                    }\n                }\n                columns.push(col);\n                return column;\n            })\n            return columns;\n        });\n    }\n\n    const callback = (key)  => {\n    }\n\n    const getWellVolumeEstimationsGridRow = (t) => {\n        return t.rows.map(row => {\n            return [\n                { value: \"\", field: row.field, datatype: row.datatype, dataEditor: NumberInput, readOnly: (row.field === ENUMS.FORM_FIELDS.WELL_VOLUME_ESTIMATIONS.SURFACE_VOL) ? false : true },\n                { value: row.label, readOnly: true, disableEvents: true }\n            ]\n        })\n    }\n\n    const populateWellVolumeGrid = (index) => {\n        const newWellVolGrid = TableHeadersUtil.wellVolumeFormTableData.grid.reduce((rows, t, rowIdx) => {\n            return rows.concat(getWellVolumeGridRow(t));\n        }, []);\n        return newWellVolGrid;\n    }\n\n    const populateWellVolumeEstimationsGrid = (index) => {\n        const newWellVolEstimationsGrid = TableHeadersUtil.wellVolumeEstimationsFormTableData.grid.reduce((rows, t, rowIdx) => {\n            return rows.concat(getWellVolumeEstimationsGridRow(t));\n        }, []);\n        return newWellVolEstimationsGrid;\n    }\n\n    const formatNumber = (numString) => {\n        if (typeof numString === \"string\") {\n            return parseFloat(numString.replace(/,/g, ''));\n        } else {\n            return numString;\n        }\n    }\n    \n    const calculateHValue = (gridDetail, index) => {\n        const depthThisRow = gridDetail[index].find(g => g.field === \"depth_md\").value || 0;\n        const tolThisRow = gridDetail[index].find(g => g.field === \"tol\").value || 0;\n        const idThisRow = gridDetail[index].find(g => g.field === \"id\").value || 0;\n        if (depthThisRow) {\n            if (index == 2) {\n                const tolPreviousRow = gridDetail[index - 1].find(g => g.field === \"tol\").value || 0;\n                const diff = formatNumber(depthThisRow) - formatNumber(tolPreviousRow);\n                return formatNumber(idThisRow) ** 2 * 0.0009714 * diff;\n            } else {\n                const tolNextRow = gridDetail[index + 1].find(g => g.field === \"tol\").value || 0;\n                if (tolNextRow) {\n                    return formatNumber(idThisRow) ** 2 * 0.0009714 * (index == 0 ? formatNumber(tolNextRow) : (formatNumber(tolNextRow) - formatNumber(tolThisRow)));\n                } else {\n                    return formatNumber(idThisRow) ** 2 * 0.0009714 * (index == 0 ? formatNumber(depthThisRow) : (formatNumber(depthThisRow) - formatNumber(tolThisRow)));\n                }\n            }\n        }\n    }\n\n    const calculateWellVolumeEstimations = (wellVolGridData, wellVolEstGridData, index) => {\n        const hvalueCasing = calculateHValue(wellVolGridData, 0);\n        const hvalueLinear1 = calculateHValue(wellVolGridData, 1);\n        const hvalueLinear2 = calculateHValue(wellVolGridData, 2);\n        const totalHValue = (hvalueCasing || 0) + (hvalueLinear1 || 0) + (hvalueLinear2 || 0);\n        const newWellVolEstimationsGrid = _.cloneDeep(wellVolEstGridData ? wellVolEstGridData : wellVolumeEstimationsGrids);\n        const surfaveVol = newWellVolEstimationsGrid[index][0].find(wvG => wvG.field === \"surface_vol\").value || 0;\n        const bbls = formatNumber(totalHValue) + formatNumber(surfaveVol);\n        const gallons = bbls * 42;\n        newWellVolEstimationsGrid[index][1].find(k => k.field === \"bbls\").value = bbls.toFixed();\n        newWellVolEstimationsGrid[index][2].find(k => k.field === \"gallons\").value = gallons.toFixed();\n        props.setWellVolumeEstimationsFormValue(newWellVolEstimationsGrid);\n        setWellVolumeEstimationsGrids(newWellVolEstimationsGrid);\n    }\n\n    const handleWellVolumeGridChanged = (updatedGridData, index) => {\n        const newWellVolGrid = _.cloneDeep(wellVolumeGrids);\n        calculateWellVolumeEstimations(updatedGridData, null, index);\n        newWellVolGrid[index] = updatedGridData;\n        props.setWellVolumeFormValue(newWellVolGrid);\n        setWellVolumeGrids(newWellVolGrid);\n    }\n\n    const handleWellVolumeEstimationsGridChanged = (updatedGridData, index) => {\n        const newWellVolEstimationsGrid = _.cloneDeep(wellVolumeEstimationsGrids);\n        newWellVolEstimationsGrid[index] = updatedGridData;\n        calculateWellVolumeEstimations(wellVolumeGrids[index], newWellVolEstimationsGrid, index);\n    }\n\n    const gotoNextStep = () => {\n        let formValid = true;\n        const checkWellVolumeGrids = _.cloneDeep(wellVolumeGrids);\n        let validatedWellVolumeGrids = [];\n        checkWellVolumeGrids.map((grid, index) => {\n            let isWellVolumeValid = true;\n            const validatedGrid = grid.map(row => {\n                const validatedRow = row.map(cell => {\n                    if(cell.required && cell.value === \"\") {\n                        isWellVolumeValid = false;\n                        formValid = false;\n                        cell.className = 'cell-error';\n                        cell.error = true;\n                    }\n                    return cell;\n                })\n                return validatedRow;\n            })\n            \n            if(!isWellVolumeValid) {\n                validatedWellVolumeGrids.push({grid: validatedGrid, index: index});\n            }\n\n            return grid;\n        });\n        \n        if(formValid) {\n            console.log('wellVolumeGrids', wellVolumeGrids)\n            console.log('wellVolumeEstimationsGrids', wellVolumeEstimationsGrids)\n            props.next();\n        } else {\n            const newWellVolGrid = _.cloneDeep(wellVolumeGrids);\n            validatedWellVolumeGrids.map(gridData => {\n                newWellVolGrid[gridData.index] = gridData.grid;\n                return gridData;\n            })\n            props.setWellVolumeFormValue(newWellVolGrid);\n            setWellVolumeGrids(newWellVolGrid);\n        }\n    }\n\n    useState(() => {\n        if(props.wellInfoValues) {\n            let wellVolumeGridData = [];\n            let wellVolumeEstimationsGridData = [];\n            props.wellInfoValues.map((wellInfoValue, index) => {\n                if(props.wellVolumeFormValues != null && props.wellVolumeFormValues[index]) {\n                    wellVolumeGridData.push(props.wellVolumeFormValues[index])\n                } else {\n                    wellVolumeGridData.push(populateWellVolumeGrid(index));\n                }\n                if(props.wellVolumeEstimationsFormValues != null && props.wellVolumeEstimationsFormValues[index]) {\n                    wellVolumeEstimationsGridData.push(props.wellVolumeEstimationsFormValues[index] );\n                } else {\n                    wellVolumeEstimationsGridData.push(populateWellVolumeEstimationsGrid(index));\n                }\n                return wellInfoValue;\n            });\n            setWellVolumeGrids(wellVolumeGridData);\n            setWellVolumeEstimationsGrids(wellVolumeEstimationsGridData);\n        }\n    }, props);\n\n    return (\n        <>\n            <Collapse defaultActiveKey={['1']} onChange={callback}>\n            {\n                props.wellInfoValues && props.wellInfoValues.map((well, index) => {\n                    return <Panel \n                        header={well[0].value}\n                        key={index+1}\n                        extra={\n                            wellVolumeGrids[index] && wellVolumeGrids[index].find(row => row.find(cell => cell.error) ? true : false)\n                            ? <Tooltip title=\"Please fill all the fields\"><i className=\"fas fa-exclamation-circle text-red-500\"></i></Tooltip>\n                            : \"\"\n                        }\n                    >\n                        <div className=\"flex\" key={index}>\n                            <div className=\"well-volume-grid\">\n                                <Grid \n                                    columns={TableHeadersUtil.wellVolumeFormTableData.columns}\n                                    grid={wellVolumeGrids[index]}\n                                    gridValueChanged={handleWellVolumeGridChanged}\n                                    index={index}\n                                ></Grid>\n                            </div>\n                            <div className=\"p-4\"></div>\n                            <div className=\"well-volume-estimation-grid\">\n                                <Grid\n                                    columns={TableHeadersUtil.wellVolumeEstimationsFormTableData.columns(well[0].value)}\n                                    grid={wellVolumeEstimationsGrids[index]}\n                                    gridValueChanged={handleWellVolumeEstimationsGridChanged}\n                                    index={index}\n                                ></Grid>\n                            </div>\n                        </div>\n                    </Panel>\n                })\n            }\n            </Collapse>\n            <div className=\"text-right mt-8\">\n                <Button type=\"primary\" onClick={(e) => {gotoNextStep()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n\n","import React, { PureComponent } from 'react';\n\nclass PasswordInput extends PureComponent {\n    constructor (props) {\n      super(props)\n      this.handleChange = this.handleChange.bind(this)\n    }\n  \n    componentDidMount () {\n      this._input.focus()\n    }\n  \n    handleChange (e) {\n      this.props.onChange(e.target.value)\n    }\n  \n    render () {\n      const {value, onKeyDown} = this.props\n      return (\n        <input\n          ref={input => { this._input = input }}\n          type='password'\n          className='data-editor transparent-input'\n          value={value}\n          onChange={this.handleChange}\n          onKeyDown={onKeyDown}\n        />\n      )\n    }\n  }\n\nexport default PasswordInput;","import React, { useState } from \"react\";\nimport { Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport PasswordInput from \"components/Grid/DataEditor/PasswordInput\";\nimport _ from \"lodash\";\nimport ENUMS from \"constants/appEnums\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\"; \nimport ConfirmationModal from \"components/Modal/ConfirmationModal\";\n\nexport default function ClientInfo(props) {\n    \n    const [clientInfoGrid, setClientInfoGrid] = useState([]);\n    const [showConfirmationModal, setShowConfirmationModal] = useState();\n    const [modalData, setModalData] = useState();\n\n    const remove = (rowIdx, grid) => {\n        setShowConfirmationModal(true);\n        setModalData({\n            rowIdx,\n            grid\n        })\n    }\n\n    const handleCancel = () => {\n        setShowConfirmationModal(false);\n        setModalData(null);\n    }\n\n    const handleRemoveConfirmed = (data) => {\n        data.grid.splice(data.rowIdx, 1);\n        setClientInfoGrid(data.grid.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === ENUMS.FORM_FIELDS.CLIENT_INFO.ACTION ? component(index, data.grid) : null;\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: y.field === ENUMS.FORM_FIELDS.CLIENT_INFO.ACTION ? true : false\n                }\n            })\n        }));\n        setShowConfirmationModal(false);\n        setModalData(null);\n    }\n    \n    const component = (rowIdx, grid) => {\n        return <MinusCircleOutlined onClick={(event) => remove(rowIdx, grid)}/>;\n    }\n\n    const getClientInfoGridRow = (t) => {\n        return t.rows.map(label => {\n            const columns = [];\n            TableHeadersUtil.clientInfoFormTableData.columns.map(column => {\n                columns.push({\n                    value: \"\",\n                    field: column.field,\n                    required: column.required,\n                    dataEditor: column.field === ENUMS.FORM_FIELDS.CLIENT_INFO.PASSWORD ? PasswordInput : null,\n                    className: column.field === ENUMS.FORM_FIELDS.CLIENT_INFO.PASSWORD ? 'password-cell': column.className\n                });\n                return column;\n            })\n            return columns;\n        })\n    }\n\n    const populateClientInfoGrid = () => {\n        const grid = TableHeadersUtil.clientInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            return rows.concat(getClientInfoGridRow(t));\n        }, [])\n        setClientInfoGrid(grid.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === ENUMS.FORM_FIELDS.CLIENT_INFO.ACTION ? component(index, grid) : null\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: y.field === ENUMS.FORM_FIELDS.CLIENT_INFO.ACTION ? true : false\n                }\n            })\n        }));\n    }\n\n    const addNewClient = (e) => {\n        e.preventDefault();\n        const columns = [];\n        TableHeadersUtil.clientInfoFormTableData.columns.map(column => {\n            columns.push({ \n                value: \"\",\n                field: column.field,\n                required: column.required,\n                dataEditor: column.field === ENUMS.FORM_FIELDS.CLIENT_INFO.PASSWORD ? PasswordInput : null,\n                className: column.field === ENUMS.FORM_FIELDS.CLIENT_INFO.PASSWORD ? 'password-cell' : column.className\n            });\n            return column;\n        })\n        const newClientInfoGrid = [\n            ...clientInfoGrid,\n            columns\n        ];\n        setClientInfoGrid(newClientInfoGrid.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === ENUMS.FORM_FIELDS.CLIENT_INFO.ACTION ? component(index, newClientInfoGrid) : null\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: y.field === ENUMS.FORM_FIELDS.CLIENT_INFO.ACTION ? true : false\n                }\n            })\n        }));\n    }\n\n    const handleClientInfoGridChanged = (updatedGridData) => {\n        props.setFormValue(updatedGridData);\n        setClientInfoGrid(updatedGridData.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === ENUMS.FORM_FIELDS.CLIENT_INFO.ACTION ? component(index, updatedGridData) : null\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: y.field === ENUMS.FORM_FIELDS.CLIENT_INFO.ACTION ? true : false\n                }\n            })\n        }));\n    }\n\n    const gotoNextStep = () => {\n        let isClientInfoValid = true;\n        const validatedClientGrid = _.cloneDeep(clientInfoGrid);\n        validatedClientGrid.map(row => {\n            row.map(cell => {\n                if(cell.required && cell.value === \"\") {\n                    isClientInfoValid = false;\n                    cell.className = 'cell-error';\n                }\n                return cell;\n            })\n            return row;\n        });\n\n        if(!isClientInfoValid) {\n            handleClientInfoGridChanged(validatedClientGrid);\n        } else {\n            props.next();\n        }\n    }\n\n    useState(() => {\n        if(props.formValues != null) {\n            props.formValues && setClientInfoGrid(props.formValues.map((x, index) => {\n                return x.map(y => { \n                    const componentData = y.field === ENUMS.FORM_FIELDS.CLIENT_INFO.ACTION ? component(index, props.formValues) : null\n                    return {\n                        ...y,\n                        component: componentData,\n                        forceComponent: y.field === ENUMS.FORM_FIELDS.CLIENT_INFO.ACTION ? true : false\n                    }\n                })\n            }));\n        } else {\n            populateClientInfoGrid();\n        }\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\" style={{width: '60%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Grid \n                    columns={TableHeadersUtil.clientInfoFormTableData.columns}\n                    grid={clientInfoGrid}\n                    gridValueChanged={handleClientInfoGridChanged}\n                ></Grid>\n                <div className=\"text-lightBlue-600 mt-2 cursor-pointer inline-block\" onClick={(e) => addNewClient(e)}>+ Add a new client</div>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {gotoNextStep()}}>\n                    Next\n                </Button>\n            </div>\n            {\n                showConfirmationModal && <ConfirmationModal\n                    isModalVisible={showConfirmationModal}\n                    handleCancel={handleCancel}\n                    handleOk={handleRemoveConfirmed}\n                    modalTitle={\"Delete Row\"}\n                    modalText={\"Are you sure you want to delete this row?\"}\n                    footerButtons={{cancel_text: 'Cancel', confirm_text: 'Yes'}}\n                    data={modalData}\n                >\n                </ConfirmationModal>\n            }\n        </>\n    );\n}\n\n","import React, { PureComponent } from 'react';\nimport {ENTER_KEY, TAB_KEY} from 'react-datasheet/lib/keys';\nimport Select from 'react-select';\n\nclass SelectEditor extends PureComponent {\n  constructor (props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.state = {}\n  }\n\n  handleChange (opt) {\n    const {onCommit, onRevert} = this.props\n    if (!opt) {\n      return onRevert()\n    }\n    const { e } = this.state\n    onCommit(opt.value, e)\n    console.log('COMMITTED', opt.value)\n  }\n\n  handleKeyDown (e) {\n    // record last key pressed so we can handle enter\n    if (e.which === ENTER_KEY || e.which === TAB_KEY) {\n      e.persist()\n      this.setState({ e })\n    } else {\n      this.setState({ e: null })\n    }\n  }\n\n  render () {\n    return (\n      <Select\n        autoFocus\n        openOnFocus\n        closeOnSelect\n        value={this.props.value}\n        onChange={this.handleChange}\n        onInputKeyDown={this.handleKeyDown}\n        options={[\n          {label: 'Engineering Manager', value: 'engineering_manager'},\n          {label: 'Field engineer', value: 'field_engineer'},\n        ]}\n        classNamePrefix=\"grid-react-select\"\n      />\n    )\n  }\n}\n\nexport default SelectEditor;","import React, { useState } from \"react\";\nimport { Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport SelectEditor from \"components/Grid/DataEditor/SelectEditor\";\nimport _ from \"lodash\";\nimport APP_CONSTANTS from \"constants/appConstants\";\nimport ENUMS from \"constants/appEnums\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\"; \nimport ConfirmationModal from \"components/Modal/ConfirmationModal\";\n\nexport default function CrewInfo(props) {\n    \n    const [crewInfoGrid, setCrewInfoGrid] = useState([]);\n    const [showConfirmationModal, setShowConfirmationModal] = useState();\n    const [modalData, setModalData] = useState();\n\n    const remove = (rowIdx, grid) => {\n        setShowConfirmationModal(true);\n        setModalData({\n            rowIdx,\n            grid\n        })\n    }\n\n    const handleCancel = () => {\n        setShowConfirmationModal(false);\n        setModalData(null);\n    }\n\n    const handleRemoveConfirmed = (data) => {\n        data.grid.splice(data.rowIdx, 1);\n        setCrewInfoGrid(data.grid.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? component(index, data.grid) : null;\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? true : false\n                }\n            })\n        }));\n        setShowConfirmationModal(false);\n        setModalData(null);\n    }\n    \n    const component = (rowIdx, grid) => {\n        return <MinusCircleOutlined onClick={(event) => remove(rowIdx, grid)}/>;\n    }\n\n    const FillViewer = props => {\n        const { value } = props;\n        const foundOption = APP_CONSTANTS.ROLE_OPTIONS.find(op => op.value === value);\n        return (\n            <div className=\"cell-text-view\">\n                {foundOption ? foundOption.label : ''}\n            </div>\n        )\n    }\n\n    const getCrewInfoGridRow = (t) => {\n        return t.rows.map(row => {\n            const columns = [];\n            TableHeadersUtil.crewInfoFormTableData.columns.map(column => {\n                let col = {};\n                if(column.field === \"role\") {\n                    col = { value: row.label, field: column.field, dataEditor: SelectEditor, valueViewer: FillViewer, className: 'select-cell'} \n                } else {\n                    col = { value: \"\", field: column.field, required: column.required, className: column.className };\n                }\n                columns.push(col);\n                return column;\n            })\n            return columns;\n        })\n    }\n\n    const populateCrewInfoGrid = () => {\n        const grid = TableHeadersUtil.crewInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            return rows.concat(getCrewInfoGridRow(t));\n        }, [])\n        setCrewInfoGrid(grid.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? component(index, grid) : null\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? true : false\n                }\n            })\n        }));\n    }\n\n    const addNewCrewInfo = (e) => {\n        e.preventDefault();\n        const columns = [];\n        TableHeadersUtil.crewInfoFormTableData.columns.map(column => {\n            let col = {};\n            if(column.field === \"role\") {\n                col = { value: \"\", field: column.field, dataEditor: SelectEditor, valueViewer: FillViewer, className: 'select-cell'} \n            } else {\n                col = { value: \"\", field: column.field, required: column.required, className: column.className };\n            }\n            columns.push(col);\n            return column;\n        })\n        const newCrewInfoGrid = [\n            ...crewInfoGrid,\n            columns\n        ];\n        setCrewInfoGrid(newCrewInfoGrid.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? component(index, newCrewInfoGrid) : null\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? true : false\n                }\n            })\n        }));\n    }\n\n    // const addNewCrew = (e) => {\n    //     e.preventDefault();\n    //     const newCrewInfoGrid = [\n    //         ...crewInfoGrid,\n    //         [\n    //             { value: \"Field engineer\", readOnly: true},\n    //             { value: \"\" },\n    //             { value: \"\" }\n    //         ]\n    //     ];\n    //     setCrewInfoGrid(newCrewInfoGrid);\n    // }\n\n    const handleCrewInfoGridChanged = (updatedGridData) => {\n        props.setFormValue(updatedGridData);\n        setCrewInfoGrid(updatedGridData.map((x, index) => {\n            return x.map(y => { \n                const componentData = y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? component(index, updatedGridData) : null\n                return {\n                    ...y,\n                    component: componentData,\n                    forceComponent: y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? true : false\n                }\n            })\n        }))\n    }\n\n    const gotoNextStep = () => {\n        let isCrewInfoValid = true;\n        const validatedCrewGrid = _.cloneDeep(crewInfoGrid);\n        validatedCrewGrid.map(row => {\n            row.map(cell => {\n                if(cell.required && cell.value === \"\") {\n                    isCrewInfoValid = false;\n                    cell.className = 'cell-error';\n                }\n                return cell;\n            })\n            return row;\n        });\n\n        if(!isCrewInfoValid) {\n            handleCrewInfoGridChanged(validatedCrewGrid);\n        } else {\n            props.next();\n        }\n    }\n\n    useState(() => {\n        if(props.formValues != null) {\n            props.formValues && setCrewInfoGrid(props.formValues.map((x, index) => {\n                return x.map(y => { \n                    const componentData = y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? component(index, props.formValues) : null\n                    return {\n                        ...y,\n                        component: componentData,\n                        forceComponent: y.field === ENUMS.FORM_FIELDS.CREW_INFO.ACTION ? true : false\n                    }\n                })\n            }));\n        } else {\n            populateCrewInfoGrid();\n        }\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\" style={{width: '70%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Grid \n                    columns={TableHeadersUtil.crewInfoFormTableData.columns}\n                    grid={crewInfoGrid}\n                    gridValueChanged={handleCrewInfoGridChanged}\n                ></Grid>\n                <div className=\"text-lightBlue-600 mt-2 cursor-pointer inline-block\" onClick={(e) => addNewCrewInfo(e)}>+ Add a new crew member</div>\n            </div>\n            \n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {gotoNextStep()}}>\n                    Next\n                </Button>\n            </div>\n            {\n                showConfirmationModal && <ConfirmationModal\n                    isModalVisible={showConfirmationModal}\n                    handleCancel={handleCancel}\n                    handleOk={handleRemoveConfirmed}\n                    modalTitle={\"Delete Row\"}\n                    modalText={\"Are you sure you want to delete this row?\"}\n                    footerButtons={{cancel_text: 'Cancel', confirm_text: 'Yes'}}\n                    data={modalData}\n                >\n                </ConfirmationModal>\n            }\n        </>\n    );\n}\n\n","import React, { useState } from \"react\";\nimport { Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport _ from \"lodash\";\nimport NumberInput from \"components/Grid/DataEditor/NumberInput\";\n\nexport default function Equipment(props) {\n    \n    const [equipmentGrid, setEquipmentGrid] = useState([]);\n\n    const getEquipmentGridRow = (t) => {\n        return t.rows.map(row => {\n            console.log(row.field)\n            return [\n                { value: row.label, readOnly: true, disableEvents: true},\n                { value: \"\", field: row.field, dataEditor: NumberInput, required: row.required, datatype: row.datatype },\n            ]\n        })\n    }\n\n    const populateEquipmentGrid = () => {\n        setEquipmentGrid(TableHeadersUtil.equipmentFormTableData.grid.reduce((rows, t, rowIdx) => {\n            return rows.concat(getEquipmentGridRow(t));\n        }, []));\n    }\n\n    const handleEquipmentGridChanged = (updatedGridData) => {\n        console.log(updatedGridData)\n        props.setFormValue(updatedGridData);\n        setEquipmentGrid(updatedGridData)\n    }\n\n    const createProject = () => {\n        let isEquipmentInfoValid = true;\n        const validatedEquipmentGrid = _.cloneDeep(equipmentGrid);\n        validatedEquipmentGrid.map(row => {\n            row.map(cell => {\n                if(cell.required && cell.value === \"\") {\n                    isEquipmentInfoValid = false;\n                    cell.className = 'cell-error';\n                }\n                return cell;\n            })\n            return row;\n        })\n        if(!isEquipmentInfoValid) {\n            handleEquipmentGridChanged(validatedEquipmentGrid);\n        } else {\n            props.createProjectSubmit();\n        }\n    }\n\n    useState(() => {\n        if(props.formValues != null) {\n            props.formValues && setEquipmentGrid(props.formValues);\n        } else {\n            populateEquipmentGrid();\n        }\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\" style={{width: '50%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Grid \n                    columns={TableHeadersUtil.equipmentFormTableData.columns}\n                    grid={equipmentGrid}\n                    gridValueChanged={handleEquipmentGridChanged}\n                ></Grid>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {createProject()}}>\n                    Create Project\n                </Button>\n            </div>\n        </>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Button } from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport Grid from \"components/Grid/Grid\";\nimport _ from \"lodash\";\n\nexport default function ProjectInfo(props) {\n    \n    const [projectInfoGrid, setProjectInfoGrid] = useState([]);\n\n    const getProjectInfoGridRow = (t) => {\n        return t.rows.map(row => {\n            console.log(row.field)\n            return [\n                { value: row.label, readOnly: true, disableEvents: true},\n                { value: \"\", field: row.field, required: row.required },\n            ]\n        })\n    }\n\n    const populateProjectInfoGrid = () => {\n        setProjectInfoGrid(TableHeadersUtil.projectInfoFormTableData.grid.reduce((rows, t, rowIdx) => {\n            return rows.concat(getProjectInfoGridRow(t));\n        }, []));\n    }\n\n    const handleProjectInfoGridChanged = (updatedGridData) => {\n        console.log(updatedGridData)\n        props.setFormValue(updatedGridData);\n        setProjectInfoGrid(updatedGridData)\n    }\n\n    const gotoNextStep = () => {\n        let isProjectInfoValid = true;\n        const validatedProjectInfoGrid = _.cloneDeep(projectInfoGrid);\n        validatedProjectInfoGrid.map(row => {\n            row.map(cell => {\n                if(cell.required && cell.value === \"\") {\n                    isProjectInfoValid = false;\n                    cell.className = 'cell-error';\n                }\n                return cell;\n            });\n            return row;\n        })\n        if(!isProjectInfoValid) {\n            handleProjectInfoGridChanged(validatedProjectInfoGrid)\n        } else {\n            props.next();\n        }\n    }\n\n    useState(() => {\n        if(props.formValues != null) {\n            props.formValues && setProjectInfoGrid(props.formValues);\n        } else {\n            populateProjectInfoGrid();\n        }\n    }, props);\n\n    return (\n        <>\n            <div className=\"mb-8\" style={{width: '50%', marginLeft: 'auto', marginRight: 'auto'}}>\n                <Grid \n                    columns={TableHeadersUtil.projectInfoFormTableData.columns}\n                    grid={projectInfoGrid}\n                    gridValueChanged={handleProjectInfoGridChanged}\n                    className=\"no-header-grid mb-8\"\n                ></Grid>\n            </div>\n            <div className=\"text-right\">\n                <Button type=\"primary\" onClick={(e) => {gotoNextStep()}}>\n                    Next\n                </Button>\n            </div>\n        </>\n    );\n}\n","import axios from \"axiosConfig\";\nimport config from \"config\";\nimport ENUMS from \"constants/appEnums\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ProjectUtil from \"util/ProjectUtil\";\nimport { Card, PageHeader, Button, Steps } from 'antd';\nimport JobInfo from \"components/Forms/ProjectCreate/JobInfo\";\nimport WellInfo from \"components/Forms/ProjectCreate/WellInfo\";\nimport WellVolume from \"components/Forms/ProjectCreate/WellVolume\";\nimport ClientInfo from \"components/Forms/ProjectCreate/ClientInfo\";\nimport CrewInfo from \"components/Forms/ProjectCreate/CrewInfo\";\nimport Equipment from \"components/Forms/ProjectCreate/Equipment\";\nimport ProjectInfo from \"components/Forms/ProjectCreate/ProjectInfo\";\nimport _ from \"lodash\";\nimport HttpUtil from \"util/HttpUtil\";\nimport { useToasts } from \"react-toast-notifications\";\n\n// components\nconst { Step } = Steps;\n\nexport default function NewProject() {\n    const history = useHistory();\n    const { addToast } = useToasts();\n\n    const [current, setCurrent] = useState(0);\n    const [projectInfoValues, setProjectInfoValues] = useState(null);\n    const [jobInfoValues, setJobInfoValues] = useState(null);\n    const [padInfoValues, setPadInfoValues] = useState(null);\n    const [wellInfoValues, setWellInfoValues] = useState(null);\n    const [wellVolumeValues, setWellVolumeValues] = useState(null);\n    const [wellVolumeEstimationsValues, setWellVolumeEstimationsValues] = useState(null);\n    const [clientInfoValues, setClientInfoValues] = useState(null);\n    const [crewInfoValues, setCrewInfoValues] = useState(null);\n    const [equipmentValues, setEquipmentValues] = useState(null);\n\n    const next = () => {\n        console.log('next', _.cloneDeep(jobInfoValues));\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        console.log('prev', _.cloneDeep(jobInfoValues));\n        setCurrent(current - 1);\n    };\n\n    const handleCreateProjectFormSubmit = () => {\n        const wellVolumeData = wellVolumeValues ? wellVolumeValues.map(wellVol => {\n            return ProjectUtil.formatFormValuesFromColumnGridData(wellVol);\n        }) : [];\n        const wellVolumeEstimationsData = wellVolumeEstimationsValues ? wellVolumeEstimationsValues.map(wellVolEst => {\n            return ProjectUtil.formatFormValuesFromRowGridData(wellVolEst);\n        }) : [];\n        \n        const projectData = {\n            projectValues: ProjectUtil.formatFormValuesFromRowGridData(projectInfoValues),\n            jobInfoValues: ProjectUtil.formatFormValuesFromRowGridData(_.cloneDeep(jobInfoValues)),\n            padInfoValues: ProjectUtil.formatFormValuesFromRowGridData(padInfoValues),\n            wellInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(wellInfoValues).map((x, index) => {return {...x}}),\n            wellVolumeValues: wellVolumeData,\n            wellVolumeEstimationsValues: wellVolumeEstimationsData,\n            clientInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(clientInfoValues),\n            crewInfoValues: ProjectUtil.formatFormValuesFromColumnGridData(crewInfoValues),\n            equipmentValues: ProjectUtil.formatFormValuesFromRowGridData(equipmentValues),\n        };\n        \n        axios.post(config.API_URL + ENUMS.API_ROUTES.PROJECT_CREATE,\n            {\n                ...projectData\n            }, {...HttpUtil.adminHttpHeaders()})\n            .then(res => {\n                if (res.status === 200 && res.data) {\n                    const projectId = res.data.data.project.id;\n                    addToast(\"Project created successfully!\", { \n                        appearance: 'success',\n                        autoDismiss: true\n                    });\n                    history.push({\n                        pathname: '/admin/dashboard',\n                        search: '?projectId=' + projectId,\n                        state: { passedId: projectId }\n                    });\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            });\n    }\n\n    const steps = [\n        {\n            title: 'Project Info',\n            content: <ProjectInfo\n                next={next}\n                setFormValue={setProjectInfoValues}\n                formValues={projectInfoValues}></ProjectInfo>\n        },\n        {\n            title: 'Job Info',\n            content: <JobInfo\n                next={next}\n                setJobInfoFormValue={setJobInfoValues}\n                setPadInfoFormValue={setPadInfoValues}\n                jobInfoFormValues={jobInfoValues} padInfoFormValues={padInfoValues}></JobInfo>\n        },\n        {\n            title: 'Well Info',\n            content: <WellInfo\n                next={next}\n                setFormValue={setWellInfoValues}\n                formValues={wellInfoValues}></WellInfo>\n        },\n        {\n            title: 'Well Volume',\n            content: <WellVolume\n                next={next}\n                setWellVolumeFormValue={setWellVolumeValues}\n                setWellVolumeEstimationsFormValue={setWellVolumeEstimationsValues}\n                wellInfoValues={wellInfoValues}\n                wellVolumeFormValues={wellVolumeValues} wellVolumeEstimationsFormValues={wellVolumeEstimationsValues}></WellVolume>\n        },\n        {\n            title: 'Client Info',\n            content: <ClientInfo\n                next={next}\n                setFormValue={setClientInfoValues}\n                formValues={clientInfoValues}></ClientInfo>\n        },\n        {\n            title: 'Crew Info',\n            content: <CrewInfo\n                next={next}\n                setFormValue={setCrewInfoValues}\n                formValues={crewInfoValues}></CrewInfo>\n        },\n        {\n            title: 'Equipment',\n            content: <Equipment\n                next={next}\n                setFormValue={setEquipmentValues}\n                formValues={equipmentValues}\n                createProjectSubmit={handleCreateProjectFormSubmit}></Equipment>\n        }\n    ];\n\n\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div style={{width: \"1100px\"}}>\n                    <PageHeader\n                        ghost={false}\n                        onBack={() => window.history.back()}\n                        title=\"Fill in the information below to create a new project\"\n                    >\n                    </PageHeader>\n                        <Card>\n                            <Steps progressDot current={current}>\n                                {\n                                    steps.map(item => (\n                                        <Step key={item.title} title={item.title} className=\"mb-6\"/>\n                                    ))\n                                }\n                            </Steps>\n                            <div className=\"steps-content mb-6\">\n                                {steps[current].content}\n                            </div>\n                            <div className=\"steps-action flex justify-between\" style={{position: 'absolute', bottom: '48px'}}>\n                                {\n                                    <Button style={{ margin: '0 8px' }} disabled={current < 1} onClick={() => prev()}>\n                                        Previous\n                                    </Button>\n                                }\n                            </div>\n                        </Card>\n                </div>\n            </div>\n        </>\n    );\n}\n","import React from \"react\";\nimport { Form, Input } from 'antd';\n\nconst LIST_OF_PROJECTS = [\n    {\n        key: '1',\n        job_number: '222-555',\n        project_name: 'Construction',\n        created_by: 'Josh William',\n        created_at_date: '2021-03-04',\n        created_time: '15:43:23',\n    },\n    {\n        key: '2',\n        job_number: '242-515',\n        project_name: 'Oil extraction',\n        created_by: 'Peter Sam',\n        created_at_date: '2021-03-04',\n        created_time: '15:43:23',\n    },\n    {\n        key: '3',\n        job_number: '123-222',\n        project_name: 'Construction',\n        created_by: 'Raymond Hillary',\n        created_at_date: '2021-03-04',\n        created_time: '15:43:23',\n    },\n    {\n        key: '4',\n        job_number: '434-231',\n        project_name: 'Construction',\n        created_by: 'Cogba Jua',\n        created_at_date: '2021-03-04',\n        created_time: '15:43:23',\n    },\n    {\n        key: '5',\n        job_number: '290-213',\n        project_name: 'Construction',\n        created_by: 'Rock Van Dam',\n        created_at_date: '2021-03-04',\n        created_time: '15:43:23',\n    },\n    {\n        key: '6',\n        job_number: '116-435',\n        project_name: 'Construction',\n        created_by: 'Josh William',\n        created_at_date: '2021-03-04',\n        created_time: '15:43:23',\n    },\n    {\n        key: '7',\n        job_number: '989-213',\n        project_name: 'Oil extraction',\n        created_by: 'Peter Sam',\n        created_at_date: '2021-03-04',\n        created_time: '15:43:23',\n    },\n    {\n        key: '8',\n        job_number: '323-123',\n        project_name: 'Construction',\n        created_by: 'Raymond Hillary',\n        created_at_date: '2021-03-04',\n        created_time: '15:43:23',\n    },\n    {\n        key: '9',\n        job_number: '323-434',\n        project_name: 'Construction',\n        created_by: 'Cogba Jua',\n        created_at_date: '2021-03-04',\n        created_time: '15:43:23',\n    },\n    {\n        key: '10',\n        job_number: '654-434',\n        project_name: 'Construction',\n        created_by: 'Rock Van Dam',\n        created_at_date: '2021-03-04',\n        created_time: '15:43:23',\n    },\n]\n\nconst WELL_INFO_FORM = [\n    {\n        key: '1',\n        well_name: 'Well 1',\n        well_api: <Form.Item\n            name=\"well_api1\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n        formation: <Form.Item\n            name=\"formation1\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n        lat: <Form.Item\n            name=\"lat1\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n        easting: <Form.Item\n            name=\"easting1\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n        northing: <Form.Item\n            name=\"northing1\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n    },\n    {\n        key: '2',\n        well_name: 'Well 2',\n        well_api: <Form.Item\n            name=\"well_api2\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n        formation: <Form.Item\n            name=\"formation2\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n        lat: <Form.Item\n            name=\"lat2\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n        easting: <Form.Item\n            name=\"easting2\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n        northing: <Form.Item\n            name=\"northing2\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>\n    },\n    {\n        key: '3',\n        well_name: 'Well 3',\n        well_api: <Form.Item\n            name=\"well_api3\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n        formation: <Form.Item\n            name=\"formation3\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n        lat: <Form.Item\n            name=\"lat3\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n        easting: <Form.Item\n            name=\"easting3\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>,\n        northing: <Form.Item\n            name=\"northing3\"\n            rules={[\n            {\n                required: true,\n                message: '',\n            },\n            ]}\n        >\n            <Input placeholder=\"Please input your name\" />\n        </Form.Item>\n    }\n]\n\nconst projectData = {\n    \"jobInfoValues\": {\n        \"job_name\": \"j\",\n        \"job_type\": \"j\",\n        \"job_id\": \"l\",\n        \"afe_num\": \"l\",\n        \"country\": \"l\",\n        \"basin\": \"l\",\n        \"state\": \"l\",\n        \"start_date\": \"l\"\n    },\n    \"padInfoValues\": {\n        \"pad_name\": \"o\",\n        \"pad_id\": \"o\",\n        \"client_name\": \"o\",\n        \"customer_field_rep\": \"o\",\n        \"rep_contact_number\": \"o\",\n        \"operator\": \"o\",\n        \"service_company\": \"o\",\n        \"wireline_company\": \"o\"\n    },\n    \"wellInfoValues\": [\n        {\n            id: 1,\n            \"well_name\": \"Test Well 1\",\n            \"no_of_stages\": \"5\",\n            \"well_api\": \"u\",\n            \"formation\": \"k\",\n            \"lat\": \"k\",\n            \"easting\": \"i\",\n            \"northing\": \"k\"\n        },\n        {\n            id: 2,\n            \"well_name\": \"Test Well 2\",\n            \"no_of_stages\": \"5\",\n            \"well_api\": \"h\",\n            \"formation\": \"l\",\n            \"lat\": \"l\",\n            \"easting\": \"l\",\n            \"northing\": \"l\"\n        }\n    ],\n    \"wellVolumeValues\": [\n        [\n            {\n                \"type\": \"Casing\",\n                \"od\": \"v\",\n                \"wt\": \"j\",\n                \"id\": \"j\",\n                \"depth_md\": \"j\",\n                \"tol\": \"h\"\n            },\n            {\n                \"type\": \"Liner #1\",\n                \"od\": \"l\",\n                \"wt\": \"l\",\n                \"id\": \"l\",\n                \"depth_md\": \"l\",\n                \"tol\": \"l\"\n            },\n            {\n                \"type\": \"Liner #2\",\n                \"od\": \"l\",\n                \"wt\": \"l\",\n                \"id\": \"l\",\n                \"depth_md\": \"l\",\n                \"tol\": \"l\"\n            }\n        ],\n        [\n            {\n                \"type\": \"Casing\",\n                \"od\": \"c\",\n                \"wt\": \"W\",\n                \"id\": \"W\",\n                \"depth_md\": \"w\",\n                \"tol\": \"w\"\n            },\n            {\n                \"type\": \"w\",\n                \"od\": \"s\",\n                \"wt\": \"s\",\n                \"id\": \"s\",\n                \"depth_md\": \"sw\",\n                \"tol\": \"s\"\n            },\n            {\n                \"type\": \"Liner #2\",\n                \"od\": \"e\",\n                \"wt\": \"e\",\n                \"id\": \"s\",\n                \"depth_md\": \"e\",\n                \"tol\": \"s\"\n            }\n        ]\n    ],\n    \"wellVolumeEstimationsValues\": [],\n    \"clientInfoValues\": [\n        {\n            \"clientusername\": \"b\",\n            \"title\": \"b\",\n            \"password\": \"b\"\n        }\n    ],\n    \"crewInfoValues\": [\n        {\n            \"role\": \"Engineering manager\",\n            \"name\": \"h\",\n            \"contact\": \"j\"\n        },\n        {\n            \"role\": \"Field engineer\",\n            \"name\": \"h\",\n            \"contact\": \"j\"\n        },\n        {\n            \"role\": \"Field engineer\",\n            \"name\": \"j\",\n            \"contact\": \"j\"\n        },\n        {\n            \"role\": \"Field engineer\",\n            \"name\": \"j\",\n            \"contact\": \"j\"\n        }\n    ],\n    \"equipmentValues\": {\n        \"trailers\": \"m\",\n        \"powerpack\": \"m\",\n        \"source\": \"m\",\n        \"accumulator\": \"m\",\n        \"hydrophones\": \"m\",\n        \"psi_transducer\": \"m\",\n        \"hotspot\": \"m\"\n    }\n};\n\nconst STAGE_REPORT = [\n    {\n        key: '1',\n        stage: '1',\n        pre_frac: 0,\n        post_frac: 6,\n        nf: 83,\n        ff: 6.2,\n        half_length: 541,\n        width: 0.6,\n        height: 141,\n        reserve_potential: '',\n        pore_pressure: 0.64,\n    },\n    {\n        key: '2',\n        stage: '2',\n        pre_frac: 0,\n        post_frac: 6,\n        nf: 83,\n        ff: 6.2,\n        half_length: 541,\n        width: 0.6,\n        height: 141,\n        reserve_potential: '',\n        pore_pressure: 0.64,\n    },\n    {\n        key: '3',\n        stage: '3',\n        pre_frac: 0,\n        post_frac: 6,\n        nf: 83,\n        ff: 6.2,\n        half_length: 541,\n        width: 0.6,\n        height: 141,\n        reserve_potential: '',\n        pore_pressure: 0.64,\n    },\n    {\n        key: '4',\n        stage: '4',\n        pre_frac: 0,\n        post_frac: 6,\n        nf: 83,\n        ff: 6.2,\n        half_length: 541,\n        width: 0.6,\n        height: 141,\n        reserve_potential: '',\n        pore_pressure: 0.64,\n    },\n    {\n        key: '5',\n        stage: '5',\n        pre_frac: 0,\n        post_frac: 6,\n        nf: 83,\n        ff: 6.2,\n        half_length: 541,\n        width: 0.6,\n        height: 141,\n        reserve_potential: '',\n        pore_pressure: 0.64,\n    },\n];\n\nconst FAKE_DATA = {\n    LIST_OF_PROJECTS,\n    WELL_INFO_FORM,\n    projectData,\n    STAGE_REPORT\n}\n\nexport default FAKE_DATA;","import { SET_USER_STATE, USER_LOGGED_OUT, SET_USER_PROJECT, SET_USER_C_PROJECT } from 'redux/actionsTypes';\n\nconst setUserState = (user) => ({\n    type: SET_USER_STATE,\n    payload: {\n        user\n    }\n})\n\nconst userLoggedOut = () => ({\n    type: USER_LOGGED_OUT\n})\n\nconst setUserProjectIds = (projectIds) => ({\n    type: SET_USER_PROJECT,\n    payload: {\n        projectIds\n    }\n})\n\nconst setCurrentProject = (project) => ({\n    type: SET_USER_C_PROJECT,\n    payload: {\n        project\n    }\n})\n\nconst authActions = {\n    setUserState,\n    userLoggedOut,\n    setUserProjectIds,\n    setCurrentProject\n}\n\nexport default authActions;","import authActions from \"./authActions\";\n\nconst allActions = {\n    authActions\n};\n\nexport default allActions;","import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n    return useContext(AppContext);\n}","import NotFound from \"components/NotFound/NotFound\";\nimport ENUMS from \"constants/appEnums\";\nimport Account from \"views/admin/Acccount\";\nimport DailyLog from \"views/admin/DailyLog\";\nimport Dashboard from \"views/admin/Dashboard\";\nimport DataInput from \"views/admin/DataInput\";\nimport DefaultValues from \"views/admin/DefaultValues\";\nimport ExistingProject from \"views/admin/ExistingProject\";\nimport NewProject from \"views/admin/NewProject\";\nimport OcReport from \"views/admin/OcReport\";\nimport Project from \"views/admin/Project\";\nimport TrackingSheet from \"views/admin/TrackingSheet\";\nimport Login from \"views/auth/Login\";\nimport Register from \"views/auth/Register\";\nvar routes = [\n\t{\n\t\tpath: ENUMS.ROUTES.DASHBOARD,\n\t\tname: \"Dashboard\",\n\t\ticon: \"ni ni-tv-2 text-primary\",\n\t\tcomponent: Dashboard,\n        layout: ENUMS.ROUTES.ADMIN,\n        menuItem: true,\n\t},\n\t{\n\t\tpath: ENUMS.ROUTES.PROJECT,\n\t\tname: \"Project\",\n\t\ticon: \"ni ni-tv-2 text-primary\",\n\t\tcomponent: Project,\n        layout: ENUMS.ROUTES.ADMIN,\n        menuItem: true,\n\t},\n\t{\n\t\tpath: ENUMS.ROUTES.PROJECT_EXISTING,\n\t\tname: \"Select project\",\n\t\ticon: \"ni ni-tv-2 text-primary\",\n\t\tcomponent: ExistingProject,\n        layout: ENUMS.ROUTES.ADMIN,\n        menuItem: true,\n\t},\n\t{\n\t\tpath: ENUMS.ROUTES.PROJECT_NEW,\n\t\tname: \"New project\",\n\t\ticon: \"ni ni-tv-2 text-primary\",\n\t\tcomponent: NewProject,\n        layout: ENUMS.ROUTES.ADMIN,\n        menuItem: true,\n\t},\n\t{\n\t\tpath: ENUMS.ROUTES.DATA_INPUT,\n\t\tname: \"Data input\",\n\t\ticon: \"ni ni-tv-2 text-primary\",\n\t\tcomponent: DataInput,\n        layout: ENUMS.ROUTES.ADMIN,\n        menuItem: true,\n\t},\n\t{\n\t\tpath: ENUMS.ROUTES.DAILY_LOG,\n\t\tname: \"Daily log\",\n\t\ticon: \"ni ni-tv-2 text-primary\",\n\t\tcomponent: DailyLog,\n        layout: ENUMS.ROUTES.ADMIN,\n        menuItem: true,\n\t},\n\t{\n\t\tpath: ENUMS.ROUTES.DEFAULT_VALUES,\n\t\tname: \"Daily log\",\n\t\ticon: \"ni ni-tv-2 text-primary\",\n\t\tcomponent: DefaultValues,\n        layout: ENUMS.ROUTES.ADMIN,\n        menuItem: true,\n\t},\n\t{\n\t\tpath: ENUMS.ROUTES.TRACKING_SHEET,\n\t\tname: \"Daily log\",\n\t\ticon: \"ni ni-tv-2 text-primary\",\n\t\tcomponent: TrackingSheet,\n        layout: ENUMS.ROUTES.ADMIN,\n        menuItem: true,\n\t},\n\t{\n\t\tpath: ENUMS.ROUTES.OC_REPORT,\n\t\tname: \"Daily log\",\n\t\ticon: \"ni ni-tv-2 text-primary\",\n\t\tcomponent: OcReport,\n        layout: ENUMS.ROUTES.ADMIN,\n        menuItem: true,\n\t},\n\t{\n\t\tpath: ENUMS.ROUTES.LOGIN,\n\t\tname: \"Login\",\n\t\ticon: \"ni ni-key-25 text-info\",\n\t\tcomponent: Login,\n\t\tlayout: ENUMS.ROUTES.AUTH,\n\t},\n\t{\n\t\tpath: ENUMS.ROUTES.REGISTER,\n\t\tname: \"Register\",\n\t\ticon: \"ni ni-circle-08 text-pink\",\n\t\tcomponent: Register,\n\t\tlayout: ENUMS.ROUTES.AUTH,\n    },\n\t{\n\t\tpath: ENUMS.ROUTES.NOTFOUND,\n\t\tname: \"NOTFOUND\",\n\t\ticon: \"ni ni-circle-08 text-pink\",\n\t\tcomponent: NotFound,\n\t\tlayout: ENUMS.ROUTES.AUTH,\n    },\n\t{\n\t\tpath: ENUMS.ROUTES.ACCOUNT,\n\t\tname: \"Account\",\n\t\ticon: \"ni ni-tv-2 text-primary\",\n\t\tcomponent: Account,\n        layout: ENUMS.ROUTES.ADMIN,\n        menuItem: true,\n\t},\n];\nexport default routes;\n","import React from \"react\";\n\n// components\n\n// import HeaderStats from \"components/Headers/HeaderStats.js\";\n// import CardBarChart from \"components/Cards/CardBarChart.js\";\n// import CardLineChart from \"components/Cards/CardLineChart.js\";\n// import CardPageVisits from \"components/Cards/CardPageVisits.js\";\n// import CardSocialTraffic from \"components/Cards/CardSocialTraffic.js\";\n\nexport default function Dashboard() {\n  \n  return (\n    <>\n      <div className=\"text-center p-5\">\n        SEISMOS DATA TRACKING\n      </div>\n    </>\n  );\n}\n","import { Card } from 'antd';\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\n// components\nexport default function Project() {\n    let history = useHistory();\n\n    const [newProjectFocus, setNewProjectFocus] = useState(false);\n    const [existingProjectFocus, setExistingProjectFocus] = useState(false);\n\n    const handleExistingProject = () => {\n        history.push('/admin/project-select');\n    }\n\n    const handleNewProject = () => {\n        history.push('/admin/project-new');\n    }\n\n    const gridStyle = {\n        width: '100%',\n        textAlign: 'center'\n    };\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div>\n                    <Card title=\"Create a new project or choose an existing one\" className=\"text-center\" style={{width: '500px'}}>\n                        <Card.Grid\n                            style={gridStyle}\n                            onMouseEnter={(e) => setNewProjectFocus(true)}\n                            onMouseLeave={(e) => setNewProjectFocus(false)}\n                            onClick={(e) => handleNewProject()}\n                            className={newProjectFocus ? 'bg-primary text-white cursor-pointer': ''}\n                        >\n                            Create new project\n                        </Card.Grid>\n                        <Card.Grid\n                            style={gridStyle}\n                            onMouseEnter={(e) => setExistingProjectFocus(true)}\n                            onMouseLeave={(e) => setExistingProjectFocus(false)}\n                            onClick={(e) => handleExistingProject()}\n                            className={existingProjectFocus ? 'bg-primary text-white cursor-pointer': ''}\n                        >\n                            Select existing project\n                        </Card.Grid>\n                    </Card>\n                </div>\n            </div>\n        </>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport { Card, Table, PageHeader, Button} from 'antd';\nimport TableHeadersUtil from \"util/TableHeaderUtil\";\nimport { useHistory } from \"react-router\";\nimport ENUMS from \"constants/appEnums\";\nimport HttpUtil from \"util/HttpUtil\";\n// components\nexport default function ExistingProject() {\n    const history = useHistory();\n    const columns = TableHeadersUtil.projectTable;\n    const [data, setData] = useState([]);\n\n    const [selectedProject, setSelectedProject] = useState(null);\n\n    const rowSelection = {\n        onChange: (selectedRowKeys, selectedRows) => {\n            const project = data.find(x => x.key === selectedRowKeys[0]);\n            setSelectedProject(project);\n        },\n        getCheckboxProps: (record) => ({\n          disabled: record.name === 'Disabled User',\n          // Column configuration not to be checked\n          name: record.name,\n        }),\n    };\n\n    const handleTableChange = (pagination, filters, sorter) => {\n        console.log('here')\n        // this.fetch({\n        //   sortField: sorter.field,\n        //   sortOrder: sorter.order,\n        //   pagination,\n        //   ...filters,\n        // });\n    };\n    \n    const [pagination, setPagination] = useState({});\n\n    const openProject = (e) => {\n        e.preventDefault();\n        const projectId = selectedProject.id;\n        history.push({\n            pathname: '/admin/dashboard',\n            search: '?projectId=' + projectId,\n            state: { projectId: projectId }\n        });\n    }\n\n    const fetchProjects = () => {\n        axios.get(config.API_URL + ENUMS.API_ROUTES.PROJECT_LIST,\n            {\n                ...HttpUtil.adminHttpHeaders()\n            })\n            .then(res => {\n                if (res.status === 200 && res.data) {\n                    setData(res.data.projects.map((project, index) => {\n                        return {\n                            key: index,\n                            job_number: project.job_id,\n                            id: project.id,\n                            job_name: project.job_name,\n                            project_name: project.project_name,\n                            created_by: project.created_by,\n                            created_at_date: project.created_date,\n                            created_time: project.created_time,\n                        }\n                    }))\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            })\n    }\n\n    useEffect(() => {\n        fetchProjects();\n        setPagination({\n            current: 1,\n            pageSize: 5,\n            total: 10,\n        })\n    }, [])\n\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div style={{width: '1100px'}}>\n                <PageHeader\n                    ghost={false}\n                    onBack={() => window.history.back()}\n                    title=\"Select a project to continue\"\n                    extra={[\n                        <Button\n                            key=\"1\"\n                            type=\"primary\"\n                            disabled={selectedProject ? false : true}\n                            onClick={e => openProject(e)}\n                        >\n                            Next\n                        </Button>,\n                    ]}\n                    >\n                </PageHeader>\n                    <Card>\n                        <Table\n                            rowSelection={{\n                                type: 'radio',\n                                ...rowSelection,\n                            }}\n                            pagination={false}\n                            columns={columns}\n                            dataSource={data}\n                            onChange={handleTableChange}\n                        />\n                    </Card>\n                </div>\n            </div>\n        </>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Card } from 'antd';\nimport APP_CONSTANTS from \"constants/appConstants\";\nimport { RedoOutlined } from \"@ant-design/icons\"\n// component\nimport FileUploadModal from \"components/Modal/FileUploadModal\";\nimport \"./DataInput.css\";\n\nexport default function DataInput() {\n    const cards = APP_CONSTANTS.DATA_INPUT_CARDS;\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [section, setSection] = useState(null);\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleOk = (uploadedFile, selectedSection) => {\n        cards.find(card => card.section === selectedSection).grid[2].label = <div\n            className=\"flex items-center justify-center\"\n        >\n            <span className=\"mr-2 reupload-text\">{'Uploaded'}</span>\n            <span className=\"reupload-text-container mr-2\"></span>\n            <RedoOutlined className=\"reupload-button\"/>\n        </div>;\n        cards.find(card => card.section === selectedSection).grid[2].className = 'di-card-success';\n        setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n    \n    const handleAction = (action, index, selectedSection) => {\n        if (action === 'upload') {\n            cards.find(card => card.section === selectedSection).grid[index].label = 'Upload File';\n            cards.find(card => card.section === selectedSection).grid[2].className = '';\n            setSection(selectedSection);\n            showModal();\n        }\n    }\n\n    return (\n        <>\n            {\n                cards.map((card, cardIndex) => {\n                    return <Card key={cardIndex} title={card.title} bordered={false} style={{ width: '100%', marginBottom: '1.5rem' }} className=\"datainput-cards mb-6\">\n                        {\n                            card.grid.map((cardGrid, cardGridIndex) => {\n                                return <Card.Grid\n                                    key={cardGridIndex} \n                                    style={{ width: '25%', textAlign: 'center'}}\n                                    className={\"di-card-grid \" + (cardGrid.className ? cardGrid.className : '')}\n                                    onClick={(e) => handleAction(cardGrid.action, cardGridIndex, card.section)}\n                                >\n                                    {\n                                        (cardGrid.action === \"upload\")\n                                        ? cardGrid.label\n                                        : cardGrid.label\n                                    }\n                                </Card.Grid>\n                            })\n                        }\n                        {/* <Row gutter={16}>\n                            {\n                                card.grid.map((cardGrid, cardGridIndex) => {\n                                    return <Col className=\"gutter-row\" span={6}>\n                                        <Button size={\"large\"} shape=\"round\" className={\"w-full \" + cardGrid.color}>{cardGrid.label}</Button>\n                                    </Col>\n                                })\n                            }\n                        </Row>\n                         */}\n                    </Card>\n                })\n            }\n            <FileUploadModal isModalVisible={isModalVisible} section={section} handleOk={handleOk} handleCancel={handleCancel}\n            ></FileUploadModal>\n        </>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport config from \"config\";\nimport axios from \"axiosConfig\";\nimport { Form, Button, Row, Col, Card, Input, DatePicker, TimePicker, Table } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport \"./DailyLog.css\";\nimport { useToasts } from \"react-toast-notifications\";\nimport ENUMS from \"constants/appEnums\";\nimport HttpUtil from \"util/HttpUtil\";\nimport { useHistory, useLocation } from \"react-router\";\nimport moment from \"moment\";\n\nexport default function DailyLog() {\n    let location = useLocation();\n    const { addToast } = useToasts();\n    const history = useHistory();\n    const [form] = Form.useForm();\n\n    const initialFormValues = { dailyLogData: [{ date: null, time: null, description: null }] }\n\n    const [dailyLogs, setDailyLogs] = useState([]);\n    const [projectId, setProjectId] = useState();\n    const [wellId, setWellId] = useState();\n    \n    const onChange = (date, dateString)  => {\n        // console.log(date, dateString);\n    }\n\n    const columns = [\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n        },\n        {\n            title: 'Time',\n            dataIndex: 'time',\n            key: 'time',\n        },\n        {\n            title: 'Description',\n            dataIndex: 'description',\n            key: 'description',\n        },\n    ];\n    \n    const resetForm = () => {\n        form.resetFields();\n    }\n\n    const onFinish = values => {\n        if (values.dailyLogData.length < 1)\n            return;\n        const val = values.dailyLogData.map(log => {\n            return {\n                description: log.description,\n                date: Number(moment(log.date).set(\"hour\", moment(log.time).hours()).set(\"minute\", moment(log.time).minutes()).set(\"seconds\", moment(log.time).seconds()).format('x'))\n            }\n        });\n        \n        axios.post(config.API_URL + ENUMS.API_ROUTES.DAILY_LOG,\n            {\n                project_id: Number(projectId),\n                well_id: Number(wellId),\n                logs: val\n            }, {...HttpUtil.adminHttpHeaders()})\n            .then(res => {\n                if (res.status === 201) {\n                    fetchDailyLog(Number(wellId))\n                    addToast(\"Daily logs added successfully.\", { \n                        appearance: 'success',\n                        autoDismiss: true\n                    });\n                    resetForm(values);\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            });\n    };\n\n    const fetchDailyLog = (well_id) => {\n        axios.get(config.API_URL + ENUMS.API_ROUTES.DAILY_LOG + '/' + well_id,\n            {\n                ...HttpUtil.adminHttpHeaders(),\n            })\n            .then(res => {\n                if (res.status === 200 && res.data) {\n                    let logs = [];\n                    if (res.data.logs) {\n                        logs = res.data.logs.map((log, index) => {\n                            return {\n                                key: index,\n                                date: moment(log.date).format(\"YYYY-MM-DD\"),\n                                time: moment(log.date).format(\"HH : mm\"),\n                                description: log.description,\n                            }\n                        })\n                    }\n                    setDailyLogs(logs);\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            })\n    }\n\n    const setParams = (locationData) => {\n        if (locationData.state && locationData.state.projectId) {\n            setProjectId(locationData.state.projectId);\n            setWellId(locationData.state.wellId);\n            fetchDailyLog(locationData.state.wellId);\n            resetForm();\n        }\n        else if (locationData.search) {\n            const params = new URLSearchParams(locationData.search);\n            const projectIdSearch = params.get('projectId');\n            const wellIdSearch = params.get('wellId');\n            setProjectId(projectIdSearch);\n            setWellId(wellIdSearch);\n            fetchDailyLog(wellIdSearch);\n            resetForm();\n        }\n    }\n\n    useEffect(() => {\n        setParams(location);\n    }, [])\n\n    useEffect(() => {\n        return history.listen((locationData) => { \n            if(location.pathname === (ENUMS.ROUTES.ADMIN + ENUMS.ROUTES.DAILY_LOG)) {\n                setParams(locationData);\n            }\n        }) \n    }, [history])\n\n      \n    return (\n        <>\n            <Card bordered={false} style={{ width: '100%', marginBottom: '5px' }}>\n                <div className=\"max-w-580-px mx-auto\">\n                        <strong>Note: </strong>\n                         All times entered In tracking sheet are to be in 24 hour time format. The site layout and frac equipment info needs to be notated in the Daily log, with objectives including: \n                        <br></br>\n                        <br></br>\n                        <ul style={{listStyle: \"disc\"}}>\n                            <li>The distance from the last pump to the well (estimate) pip length </li>\n                            <li>Size of iron from pumps </li>\n                            <li>Pump types (triplex, quadplex, quinplex) </li>\n                            <li>Number of pumps </li>\n                            <li>Surface line volume </li>\n                            <li>Photographs to be collected of the equipment layout if allowed by client </li>\n                        </ul>\n                </div>\n            </Card>\n            <Card>\n                {/* <div className=\"text-right\">\n                    <Button type=\"primary\" >Submit log</Button>\n                </div> */}\n                <div className=\"md:ml-64\" style={{width: '650px'}}>\n                    <Row gutter={24} className=\"mb-2\">\n                        <Col span={6}><strong>Date</strong></Col>\n                        <Col span={6}><strong>Time</strong></Col>\n                        <Col span={10}><strong>Description</strong></Col>\n                    </Row>\n                    <Form\n                        form={form}\n                        name=\"dynamic_form_nest_item\"\n                        onFinish={onFinish}\n                        autoComplete=\"off\"\n                        initialValues={initialFormValues}\n                    >\n                        <Form.List name=\"dailyLogData\">\n                            {(fields, { add, remove }) => (\n                                <>\n                                    {fields.map(({ key, name, fieldKey, ...restField }) => (\n                                        <Row gutter={24} key={key}>\n                                            <Col span={6}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'date']}\n                                                    fieldKey={[fieldKey, 'date']}\n                                                    rules={[{ required: true, message: 'Missing date' }]}\n                                                >\n                                                    <DatePicker onChange={onChange} className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={6}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'time']}\n                                                    fieldKey={[fieldKey, 'time']}\n                                                    rules={[{ required: true, message: 'Missing time' }]}\n                                                >\n                                                    <TimePicker onChange={onChange} className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={10}>\n                                                <Form.Item\n                                                    {...restField}\n                                                    name={[name, 'description']}\n                                                    fieldKey={[fieldKey, 'description']}\n                                                    rules={[{ required: true, message: 'Missing description' }]}\n                                                    className=\"w-full\"\n                                                >\n                                                    <Input placeholder=\"Description\" className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={2}>\n                                                <MinusCircleOutlined onClick={() => remove(name)} />\n                                            </Col>\n                                        </Row>\n                                    ))}\n                                    <Row gutter={24}>\n                                        <Col span={8}>\n                                            <Form.Item>\n                                                <Button\n                                                    type=\"dashed\"\n                                                    onClick={() => add()}\n                                                    block\n                                                    icon={<PlusOutlined />}\n                                                >\n                                                    Add line\n                                                </Button>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                    \n                                </>\n                            )}\n                        </Form.List>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit log\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </Card>\n            {\n                dailyLogs && \n                <Card>\n                    <div className=\"max-w-580-px mx-auto\">\n                        <div><h2 className=\"module-title\">All Logs</h2></div>\n                        <Table dataSource={dailyLogs} columns={columns} pagination={false} />\n                        {/* <Row gutter={24} className=\"mb-2\">\n                                    <Col span={5}><strong>Date</strong></Col>\n                                    <Col span={5}><strong>Time</strong></Col>\n                                    <Col span={14}><strong>Description</strong></Col>\n                                </Row>\n                        {dailyLogs.map(log => {\n                            return <>\n                                \n                                <Row gutter={24} className=\"mb-2\">\n                                    <Col span={5}>{moment(log.date).format(\"YYYY-MM-DD\")}</Col>\n                                    <Col span={5}>{moment(log.date).format(\"hh : mm\")}</Col>\n                                    <Col span={14}>{log.description}</Col>\n                                </Row>\n                            </>\n                        })} */}\n                    </div>\n                </Card>\n            }\n        </>\n    );\n}","import axios from \"axiosConfig\";\nimport config from \"config\";\nimport React, { useEffect, useState } from \"react\";\nimport { Select, Divider, Collapse, Form, Button, Row, Col, Card, Input, DatePicker, InputNumber } from 'antd';\nimport { PlusOutlined, MinusCircleOutlined } from \"@ant-design/icons\";\nimport { useHistory, useLocation } from \"react-router\";\nimport ConfirmationModal from \"components/Modal/ConfirmationModal\";\nimport ENUMS from \"constants/appEnums\";\nimport HttpUtil from \"util/HttpUtil\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useSelector } from \"react-redux\";\nimport FormInitialValues from \"constants/formInitialValues\";\n\nexport default function TrackingSheet(props) {\n    const { Option } = Select;\n    const { Panel } = Collapse;\n    const { TextArea } = Input;\n    const history = useHistory();\n    const locationData = useLocation();\n    const { addToast } = useToasts();\n    const [dynamicFormNestItemForm] = Form.useForm();\n    const [perforationIntervalInformationForm] = Form.useForm();\n    const [stageDataForm] = Form.useForm();\n    const [propantFormForm] = Form.useForm();\n    const [activeDataFormForm] = Form.useForm();\n    const [notesFataFormForm] = Form.useForm();\n\n    const project = useSelector(state => state.authReducer.project);\n    const [wellId, setWellId] = useState(null);\n\n    const [items, setItems] = useState([{value: 1, label: 'Stage 1'}]);\n    const [stageSheetList, setStageSheetList] = useState([]);\n    const [selectedStage, setSelectedStage] = useState(1);\n    const [showConfirmationModal, setShowConfirmationModal] = useState();\n    const [modalData, setModalData] = useState();\n\n    const [dynamicFormNestItemValues, setDynamicFormNestItemValues] = useState({\n        bht_f: null,\n        bht_psi: null,\n        customer: null,\n        date: null,\n        event_occur: null,\n        field_engineer_days: null,\n        field_engineer_nights: null,\n        frac_design: null,\n        plug_seat_technique: null,\n        plug_type: null,\n        seismos_data_collection: null,\n        stage: null,\n    })\n    \n    const [perforationIntervalInformationValues, setPerforationIntervalInformationValues] = useState({\n        acid: null,\n        bottom_perf: null,\n        clusters_number: null,\n        displacement_vol_bottom: null,\n        displacement_vol_plug: null,\n        displacement_vol_top: null,\n        diverter_type: null,\n        perf_daiameter: null,\n        perf_gun_desc: null,\n        plug_depth: null,\n        pumped_diverter: null,\n        spf: null,\n        top_perf: null\n    })\n\n    const [stageDataValues, setStageDataValues] = useState({\n        Acid_volume_gals: null,\n        Flush_volume_bbls: null,\n        Max_prop_Conc_ppa: null,\n        Slurry_volume_bbls: null,\n        Total_lbs: null,\n        Total_clean_fluid_volume_bbls: null,\n        Total_pad_volume_bbls: null,\n        Total_sand_lbs: null,\n        base_fluid_density: null,\n        base_fluid_type: null,\n        isip: null,\n        last_bbls: null,\n        last_description: null,\n        last_ppg: null,\n        max_conc_density: null,\n        opening_well: null,\n        second_bbls: null,\n        second_description: null,\n        second_ppg: null,\n        stage_end_time: null,\n        stage_start_time: null,\n        third_bbls: null,\n        third_description: null,\n    })\n\n    const [propantFormValues, setPropantFormValues] = useState({\n        proppantData: [\n            {\n                bulk_density: null,\n                description: null,\n                specific_gravity: null,\n            }\n        ]\n    })\n\n    const [activeDataFormValues, setActiveDataFormValues] = useState({\n        amplitude: null,\n        frequency: null,\n        number_of_pulses: null,\n        offset: null,\n        periods: null,\n        post_end_time: null,\n        post_start_time: null,\n        pre_end_time: null,\n        pre_start_time: null,\n    })\n\n    const [notesFataFormValues, setNotesFataFormValues] = useState({\n        other_notes: null,\n        pre_notes: null,\n        post_notes: null\n    })\n\n\n    const handeSelectStage = (e) => {\n        setSelectedStage(e);\n        if (e) {\n            const sheetData = stageSheetList.find(l => l.stage === Number(e))\n            if (sheetData) {\n                fetchTrackingSheet(sheetData.sheet_id);\n            } else {\n                resetForm();\n            }\n        }\n    }\n\n    const addItem = () => {\n        setItems([...items, {value: (items.length + 1), label: `Stage ${items.length + 1} (Added)`}])\n    };\n\n    const handleCancel = () => {\n        setShowConfirmationModal(false);\n        setModalData(null);\n    }\n\n    const addStage = () => {\n        setShowConfirmationModal(true);\n    }\n\n    const handleAddStageConfirmed = (data) => {\n        addItem();\n        setShowConfirmationModal(false);\n        setModalData(null);\n    }\n\n    const dynamicFormNestItemChange = (changedValue, newFormValues) => {\n        setDynamicFormNestItemValues(newFormValues);\n    }\n\n    const perforationIntervalInformationChange = (changedValue, newFormValues) => {\n        setPerforationIntervalInformationValues(newFormValues);\n    }\n\n    const stageDataChange = (changedValue, newFormValues) => {\n        setStageDataValues(newFormValues);\n    }\n\n    const propantFormChange = (changedValue, newFormValues) => {\n        setPropantFormValues(newFormValues);\n    }\n\n    const activeDataFormChange = (changedValue, newFormValues) => {\n        setActiveDataFormValues(newFormValues);\n    }\n\n    const notesFataFormChange = (changedValue, newFormValues) => {\n        setNotesFataFormValues(newFormValues);\n    }\n\n\n    const onDateChange = (date, dateString)  => {\n        console.log(date, dateString);\n    }\n\n    const onChange = (date, dateString)  => {\n        console.log(date, dateString);\n    }\n\n    const handleTrackingSheetSubmit = () => {\n        const trackingSheet = {\n            stage: Number(selectedStage),\n            stage_tracking: {\n                date: Number(dynamicFormNestItemValues.date.format('x')),\n                customer: dynamicFormNestItemValues.customer,\n                well: dynamicFormNestItemValues.well,\n                stage: dynamicFormNestItemValues.stage,\n                bht_f: dynamicFormNestItemValues.bht_f,\n                bht_psi: dynamicFormNestItemValues.bht_psi,\n                frac_design: dynamicFormNestItemValues.frac_design,\n                field_engineer: {\n                    days: dynamicFormNestItemValues.field_engineer_days,\n                    nights: dynamicFormNestItemValues.field_engineer_nights,\n                },\n                plug_type: dynamicFormNestItemValues.plug_type,\n                plug_seat_technique: dynamicFormNestItemValues.plug_seat_technique,\n                did_an_event_occur: dynamicFormNestItemValues.event_occur,\n                seismos_data_collection: dynamicFormNestItemValues.seismos_data_collection,\n            },\n            perforation_interval_information: {\n                top_perf: perforationIntervalInformationValues.top_perf,\n                bottom_perf: perforationIntervalInformationValues.bottom_perf,\n                plug_depth: perforationIntervalInformationValues.plug_depth,\n                n_clusters: Number(perforationIntervalInformationValues.clusters_number),\n                perf_gun_description: perforationIntervalInformationValues.perf_gun_desc,\n                perf_daiameter: perforationIntervalInformationValues.perf_daiameter,\n                spf: perforationIntervalInformationValues.spf,\n                pumped_diverter: perforationIntervalInformationValues.pumped_diverter,\n                diverter_type: perforationIntervalInformationValues.diverter_type,\n                acid: perforationIntervalInformationValues.acid,\n                displacement_volume: {\n                    top_perf: perforationIntervalInformationValues.displacement_vol_top,\n                    bottom_perf: perforationIntervalInformationValues.displacement_vol_bottom,\n                    plug: perforationIntervalInformationValues.displacement_vol_plug,\n                }\n            },\n            stage_data: {\n                stage_start_time: Number(stageDataValues.stage_end_time.format('x')),\n                stage_end_time: Number(stageDataValues.stage_end_time.format('x')),\n                opening_well: stageDataValues.opening_well,\n                isip: stageDataValues.isip,\n                fluid_parameters: {\n                    base_fluid_type: stageDataValues.base_fluid_type,\n                    base_fluid_density: stageDataValues.base_fluid_density,\n                    max_conc_density: stageDataValues.max_conc_density,\n                },\n                fluids_injected_into_formation: {\n                    last: {\n                        description: stageDataValues.last_description,\n                        bbls: stageDataValues.last_bbls,\n                        ppg: stageDataValues.last_ppg,\n                    },\n                    second_to_last: {\n                        description: stageDataValues.second_description,\n                        bbls: stageDataValues.second_bbls,\n                        ppg: stageDataValues.second_ppg,\n                    },\n                    third_to_last: {\n                        description: stageDataValues.third_description,\n                        bbls: stageDataValues.third_bbls,\n                        ppg: stageDataValues.third_ppg,\n                    }\n                },\n                propant_data: propantFormValues.proppantData,\n                pumping_summary: {\n                    max_prop_conc: {design: stageDataValues.max_prop_conc_ppa_design, actual: stageDataValues.max_prop_conc_ppa_actual},\n                    total_pad_volume: {design: stageDataValues.total_pad_volume_bbls_design, actual: stageDataValues.total_pad_volume_bbls_actual},\n                    total_clean_fluid_volume: {design: stageDataValues.total_clean_fluid_volume_bbls_design, actual: stageDataValues.total_clean_fluid_volume_bbls_actual},\n                    total_forty_seventy: {design: stageDataValues.total_lbs_design, actual: stageDataValues.total_lbs_actual},\n                    total_sand: {design: stageDataValues.total_sand_lbs_design, actual: stageDataValues.total_sand_lbs_actual},\n                    acid_volume: {design: stageDataValues.acid_volume_gals_design, actual: stageDataValues.acid_volume_gals_actual},\n                    flush_volume: {design: stageDataValues.flush_volume_bbls_design, actual: stageDataValues.flush_volume_bbls_actual},\n                    slurry_volume: {design: stageDataValues.slurry_volume_bbls_design, actual: stageDataValues.slurry_volume_bbls_actual},\n                }\n            \n            },\n            active_data: {\n                pilsing_parameters: {\n                    wave_type: activeDataFormValues.wave_type,\n                    periods: activeDataFormValues.periods,\n                    freq: activeDataFormValues.frequency,\n                    offset: activeDataFormValues.offset,\n                    amplitude: activeDataFormValues.amplitude,\n                },\n                pre_frac_pulses: {start_time: Number(activeDataFormValues.pre_start_time.format('x')), end_time: Number(activeDataFormValues.pre_end_time.format('x')), n_pulses: Number(activeDataFormValues.pre_number_of_pulses)},\n                post_frac_pulses: {start_time: Number(activeDataFormValues.post_start_time.format('x')), end_time: Number(activeDataFormValues.post_end_time.format('x')), n_pulses: Number(activeDataFormValues.post_number_of_pulses)},\n            },\n            notes: {\n                pre_frac_pulse: notesFataFormValues.pre_notes,\n                post_frac_pulse: notesFataFormValues.post_notes,\n                other: notesFataFormValues.other_notes,\n            }\n        }\n        axios.post(config.API_URL + ENUMS.API_ROUTES.TRACKING_SHEET_CREATE + '/' + wellId,\n            {\n                ...trackingSheet\n            }, {...HttpUtil.adminHttpHeaders()})\n            .then(res => {\n                if (res.status === 201) {\n                    addToast(\"Tracking sheet data added successfully.\", { \n                        appearance: 'success',\n                        autoDismiss: true\n                    });\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            });\n    }\n\n    const populateFormData = () => {\n        \n    }\n    \n    const fetchTrackingSheet = (sheet_id) => {\n        axios.get(config.API_URL + ENUMS.API_ROUTES.TRACKING_SHEET + '/' + sheet_id,\n        {\n            ...HttpUtil.adminHttpHeaders(),\n        })\n        .then(res => {\n            if (res.status === 200 && res.data) {\n                console.log(res.data);\n                // populate tracking sheeet\n                populateFormData();\n            }\n        })\n        .catch(e => {\n            console.log(e)\n        })\n    }\n\n    const populateStageDropdown = (numOfStages) => {\n        const stages = [];\n        for (let step = 1; step <= numOfStages; step++) {\n            stages.push({value: step, label: `Stage ${step}`});\n        }\n        return stages;\n    }\n\n    const fetchStagesSubmitted = (well_id) => {\n        const stages = populateStageDropdown(project.wells.find(well => well.id === well_id).num_stages);\n\n        axios.get(config.API_URL + ENUMS.API_ROUTES.TRACKING_SHEET_LIST + '/' + well_id,\n        {\n            ...HttpUtil.adminHttpHeaders(),\n        })\n        .then(res => {\n            if (res.status === 200 && res.data) {\n                setItems(stages);\n                setStageSheetList(res.data.stages);\n                setSelectedStage(stages[0].value + \"\");\n                if (res.data.stages.length > 0) {\n                    const stageTrackingPresent = res.data.stages.find(s => s.stage === stages[0].value)\n                    if (stageTrackingPresent) {\n                        fetchTrackingSheet(stageTrackingPresent.sheet_id);\n                    }\n                }\n            }\n        })\n        .catch(e => {\n            console.log(e)\n        })\n    }\n\n    const resetForm = () => {\n        dynamicFormNestItemForm.resetFields();\n        perforationIntervalInformationForm.resetFields();\n        stageDataForm.resetFields();\n        propantFormForm.resetFields();\n        activeDataFormForm.resetFields();\n        notesFataFormForm.resetFields();\n    }\n    \n    useState(() => {\n        if(project && locationData.pathname === (ENUMS.ROUTES.ADMIN + ENUMS.ROUTES.TRACKING_SHEET)) {\n            console.log(`first time: ${locationData.pathname}`) \n            if (locationData.state && locationData.state.wellId) {\n                console.log(locationData.state.wellId);\n                setWellId(locationData.state.wellId);\n                resetForm();\n                fetchStagesSubmitted(locationData.state.wellId);\n            }\n            else if (locationData.search) {\n                const params = new URLSearchParams(locationData.search);\n                const wellIdSearch = params.get('wellId');\n                console.log(wellIdSearch);\n                setWellId(wellIdSearch);\n                resetForm();\n                fetchStagesSubmitted(wellIdSearch);\n            }\n        }\n    }, [project])\n\n    useEffect(() => {\n        return history.listen((location) => { \n            if(location.pathname === (ENUMS.ROUTES.ADMIN + ENUMS.ROUTES.TRACKING_SHEET)) {\n                console.log(`You changed the page to: ${location.pathname}`) \n                if (location.state && location.state.wellId) {\n                    console.log(location.state.wellId);\n                    setWellId(location.state.wellId);\n                    resetForm();\n                    fetchStagesSubmitted(location.state.wellId);\n                }\n                else if (location.search) {\n                    const params = new URLSearchParams(location.search);\n                    const wellIdSearch = params.get('wellId');\n                    console.log(wellIdSearch);\n                    setWellId(wellIdSearch);\n                    resetForm();\n                    fetchStagesSubmitted(wellIdSearch);\n                }\n            }\n        }) \n    }, [history])\n    return (\n        <>\n            <Card bordered={false} style={{ width: '100%', marginBottom: '5px' }}>\n                <div className=\"\">\n                    <Row gutter={24} className=\"flex items-center\">\n                        <Col span={20}>\n                            <div><strong>Tracking sheet</strong></div>\n                        </Col>\n                        <Col span={4}>\n                            <Select\n                                style={{ width: \"100%\" }}\n                                placeholder=\"Stage\"\n                                value={selectedStage}\n                                onChange={(e) => handeSelectStage(e)}\n                                dropdownRender={menu => (\n                                    <div>\n                                        {menu}\n                                        <Divider style={{ margin: '4px 0' }} />\n                                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                                        <button\n                                            className=\"no-style\"\n                                            style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer', width: '100%' }}\n                                            onClick={(e) => addStage()}\n                                        >\n                                            <PlusOutlined /> Add stage\n                                        </button>\n                                        </div>\n                                    </div>\n                                )}\n                            >\n                                {items.map(item => (\n                                    <Option key={item.value}>{item.label}</Option>\n                                ))}\n                            </Select>\n                        </Col>\n                    </Row>\n                </div>\n            </Card>\n            <Card>\n                <Collapse>\n                    <Panel header={<strong>Stage Tracking</strong>} >\n                        <Card>\n                            <Form\n                                name=\"dynamic_form_nest_item\"\n                                onValuesChange={dynamicFormNestItemChange}\n                                autoComplete=\"off\"\n                                initialValues={FormInitialValues.dynamicFormNestItemValues}\n                                form={dynamicFormNestItemForm}\n                            >\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'date'}\n                                            label=\"Date\"\n                                            labelCol={{span: 5, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <DatePicker onChange={onDateChange} className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}></Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={8}>\n                                        <Form.Item\n                                            name={'customer'}\n                                            label=\"Customer\"\n                                            labelCol={{span: 7, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'field_engineer_days'}\n                                            label=\"Field engineer (Days)\"\n                                            labelCol={{span: 10, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={8}>\n                                        <Form.Item\n                                            name={'well'}\n                                            label=\"Well\"\n                                            labelCol={{span: 7, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'field_engineer_nights'}\n                                            label=\"Field engineer (Nights)\"\n                                            labelCol={{span: 10, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={8}>\n                                        <Form.Item\n                                            name={'stage'}\n                                            label=\"Stage\"\n                                            labelCol={{span: 7, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'plug_type'}\n                                            label=\"Plug type\"\n                                            labelCol={{span: 10, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    </Row>\n                                <Row gutter={24}>\n                                    <Col span={8}>\n                                        <Form.Item\n                                            name={'bht_f'}\n                                            label=\"BHT [F]\"\n                                            labelCol={{span: 7, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'plug_seat_technique'}\n                                            label=\"Plug seat technique\"\n                                            labelCol={{span: 10, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={8}>\n                                        <Form.Item\n                                            name={'bht_psi'}\n                                            label=\"BHT [psi]\"\n                                            labelCol={{span: 7, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'event_occur'}\n                                            label=\"Did an event occur\"\n                                            labelCol={{span: 10, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={8}>\n                                        <Form.Item\n                                            name={'frac_design'}\n                                            label=\"Frac design\"\n                                            labelCol={{span: 7, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'seismos_data_collection'}\n                                            label=\"Seismos data collection\"\n                                            labelCol={{span: 10, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </Card>\n                    </Panel>\n                    <Panel header={<strong>Perforation interval information</strong>} >\n                        <Card>\n                            <Form\n                                name=\"perforation_interval_information\"\n                                onValuesChange={perforationIntervalInformationChange}\n                                autoComplete=\"off\"\n                                initialValues={FormInitialValues.perforationIntervalInformationValues}\n                                form={perforationIntervalInformationForm}\n                            >\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'top_perf'}\n                                            label=\"Top perf [MD]\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'perf_daiameter'}\n                                            label=\"Perf daiameter [in]\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'bottom_perf'}\n                                            label=\"Bottom perf\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'spf'}\n                                            label=\"SPF\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'plug_depth'}\n                                            label=\"Plug depth [MD]\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'pumped_diverter'}\n                                            label=\"Pumped diverter\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'clusters_number'}\n                                            label=\"# of clusters\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <InputNumber className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'diverter_type'}\n                                            label=\"Diverter type\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    </Row>\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'perf_gun_desc'}\n                                            label=\"Perf gun description\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'acid'}\n                                            label=\"Acid\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Divider orientation=\"left\" plain><strong>Displacement Volume</strong></Divider>\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'displacement_vol_top'}\n                                            label=\"Top perf [bbls]\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'displacement_vol_bottom'}\n                                            label=\"Bottom perf [bbls]\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'displacement_vol_plug'}\n                                            label=\"Plug [bbls]\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}></Col>\n                                </Row>\n                            </Form>\n                        </Card>\n                    </Panel>\n                    <Panel header={<strong>Stage Data</strong>} >\n                        <Card>\n                            <Form\n                                name=\"stage_data\"\n                                onValuesChange={stageDataChange}\n                                autoComplete=\"off\"\n                                initialValues={FormInitialValues.stageDataValues}\n                                form={stageDataForm}\n                            >\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'stage_start_time'}\n                                            label=\"Stage start time\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <DatePicker onChange={onChange} className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'stage_end_time'}\n                                            label=\"Stage end time\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <DatePicker onChange={onChange} className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'opening_well'}\n                                            label=\"Opening well\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'isip'}\n                                            label=\"ISIP [psi]\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Divider orientation=\"left\" plain><strong>Fluid Parameters</strong></Divider>\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'base_fluid_type'}\n                                            label=\"Base fluid type\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'base_fluid_density'}\n                                            label=\"Base fluid density [ppg]\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'max_conc_density'}\n                                            label=\"Max conc density [ppg]\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}></Col>\n                                </Row>\n                                <Divider orientation=\"left\" plain><strong>Last 3 fluids injected into formation</strong></Divider>\n                                <Row gutter={24}>\n                                    <Col span={15}>\n                                        \n                                        <Row gutter={24}>\n                                            <Col span={5}><strong>Order</strong></Col>\n                                            <Col span={5}><strong>Description</strong></Col>\n                                            <Col span={5}><strong>[bbls</strong>]</Col>\n                                            <Col span={5}><strong>ppg</strong></Col>\n                                            <Col span={4}></Col>\n                                        </Row>\n                                        <Row gutter={24}>\n                                            <Col span={5}>\n                                                Last\n                                            </Col>\n                                            <Col span={5}>\n                                                <Form.Item\n                                                    name={'last_description'}\n                                                >\n                                                    <Input className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={5}>\n                                                <Form.Item\n                                                    name={'last_bbls'}\n                                                >\n                                                    <Input className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={5}>\n                                                <Form.Item\n                                                    name={'last_ppg'}\n                                                >\n                                                    <Input className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={4}>lb/gal</Col>\n                                        </Row>\n                                        <Row gutter={24}>\n                                            <Col span={5}>\n                                                2nd to last\n                                            </Col>\n                                            <Col span={5}>\n                                                <Form.Item\n                                                    name={'second_description'}\n                                                >\n                                                    <Input className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={5}>\n                                                <Form.Item\n                                                    name={'second_bbls'}\n                                                >\n                                                    <Input className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={5}>\n                                                <Form.Item\n                                                    name={'second_ppg'}\n                                                >\n                                                    <Input className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={4}>lb/gal</Col>\n                                        </Row>\n                                        <Row gutter={24}>\n                                            <Col span={5}>\n                                                3rd to last\n                                            </Col>\n                                            <Col span={5}>\n                                                <Form.Item\n                                                    name={'third_description'}\n                                                >\n                                                    <Input className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={5}>\n                                                <Form.Item\n                                                    name={'third_bbls'}\n                                                >\n                                                    <Input className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={5}>\n                                                <Form.Item\n                                                    name={'third_ppg'}\n                                                >\n                                                    <Input className=\"w-full\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={4}>lb/gal</Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                                <Divider orientation=\"left\" plain><strong>Pumping summary</strong></Divider>\n                                <Row gutter={24}>\n                                    <Col span={5}>\n                                        <strong>Description</strong>\n                                    </Col>\n                                    <Col span={5}>\n                                        <strong>Design</strong>\n                                    </Col>\n                                    <Col span={5}>\n                                        <strong>Actual</strong>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={5}>\n                                        Max prop Conc[ppa]\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"max_prop_conc_ppa_design\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"max_prop_conc_ppa_actual\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={5}>\n                                        Total pad volume[bbls]\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"total_pad_volume_bbls_design\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"total_pad_volume_bbls_actual\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={5}>\n                                        Total clean fluid volume [bbls]\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"total_clean_fluid_volume_bbls_design\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"total_clean_fluid_volume_bbls_actual\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={5}>\n                                        Total 40/70 [lbs]\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"total_lbs_design\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"total_lbs_actual\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={5}>\n                                        Total sand [lbs]\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"total_sand_lbs_design\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"total_sand_lbs_actual\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={5}>\n                                        Acid volume [gals]\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"acid_volume_gals_design\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"acid_volume_gals_actual\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={5}>\n                                        Flush volume [bbls]\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"flush_volume_bbls_design\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"flush_volume_bbls_actual\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={5}>\n                                        Slurry volume [bbls]\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"slurry_volume_bbls_design\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={5}>\n                                        <Form.Item\n                                            name={\"slurry_volume_bbls_actual\"}\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Form>\n                            <Divider orientation=\"left\" plain><strong>Propant data</strong></Divider>\n                            <Form\n                                name=\"propant_form\"\n                                onValuesChange={propantFormChange}\n                                autoComplete=\"off\"\n                                initialValues={FormInitialValues.propantFormValues}\n                                form={propantFormForm}\n                            >\n                                <Form.List name=\"proppantData\">\n                                    {(fields, { add, remove }) => (\n                                        <>\n                                            {fields.map(({ key, name, fieldKey, ...restField }) => (\n                                                <Row gutter={24} key={key}>\n                                                    <Col span={7}>\n                                                        <Form.Item\n                                                            {...restField}\n                                                            name={[name, 'description']}\n                                                            fieldKey={[fieldKey, 'description']}\n                                                            rules={[{ required: true, message: 'Description' }]}\n                                                            label=\"Description\"\n                                                            labelCol={{span: 9, offset: 0}}\n                                                            labelAlign=\"left\"\n                                                        >\n                                                            <Input className=\"w-full\"/>\n                                                        </Form.Item>\n                                                    </Col>\n                                                    <Col span={8}>\n                                                        <Form.Item\n                                                            {...restField}\n                                                            name={[name, 'specific_gravity']}\n                                                            fieldKey={[fieldKey, 'Specific_gravity']}\n                                                            rules={[{ required: true, message: 'Specific gravity' }]}\n                                                            label=\"Specific gravity\"\n                                                            labelCol={{span: 9, offset: 0}}\n                                                            labelAlign=\"left\"\n                                                        >\n                                                            <Input className=\"w-full\"/>\n                                                        </Form.Item>\n                                                    </Col>\n                                                    <Col span={7}>\n                                                        <Form.Item\n                                                            {...restField}\n                                                            name={[name, 'bulk_density']}\n                                                            fieldKey={[fieldKey, 'bulk_density']}\n                                                            rules={[{ required: true, message: 'Bulk density' }]}\n                                                            label=\"Bulk density\"\n                                                            labelCol={{span: 9, offset: 0}}\n                                                            labelAlign=\"left\"\n                                                        >\n                                                            <Input className=\"w-full\"/>\n                                                        </Form.Item>\n                                                    </Col>\n                                                    <Col span={2}>\n                                                        <MinusCircleOutlined onClick={() => remove(name)} />\n                                                    </Col>\n                                                </Row>\n                                            ))}\n                                            <Row gutter={24}>\n                                                <Col span={8}>\n                                                    <Form.Item>\n                                                        <Button\n                                                            type=\"dashed\"\n                                                            onClick={() => add()}\n                                                            block\n                                                            icon={<PlusOutlined />}\n                                                        >\n                                                            Add proppant\n                                                        </Button>\n                                                    </Form.Item>\n                                                </Col>\n                                            </Row>\n                                            \n                                        </>\n                                    )}\n                                </Form.List>\n                            </Form>\n                        </Card>\n                    </Panel>\n                    <Panel header={<strong>Active Data</strong>} >\n                        <Card>\n                            <Form\n                                name=\"active_data_form\"\n                                onValuesChange={activeDataFormChange}\n                                autoComplete=\"off\"\n                                initialValues={FormInitialValues.activeDataFormValues}\n                                form={activeDataFormForm}\n                            >\n                                <Divider orientation=\"left\" plain><strong>Pilsing parameters</strong></Divider>\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'wave_type'}\n                                            label=\"Wave type\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'periods'}\n                                            label=\"Periods\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'frequency'}\n                                            label=\"Freq [Hz]\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'offset'}\n                                            label=\"Offset [V]\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={10}>\n                                        <Form.Item\n                                            name={'amplitude'}\n                                            label=\"Amplitude\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <Input className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={10}></Col>\n                                </Row>\n                                <Divider orientation=\"left\" plain><strong>Pre-frac pulses</strong></Divider>\n                                <Row gutter={24}>\n                                    <Col span={8}>\n                                        <Form.Item\n                                            name={'pre_start_time'}\n                                            label=\"Start time\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <DatePicker onChange={onChange} className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={8}>\n                                        <Form.Item\n                                            name={'pre_end_time'}\n                                            label=\"End time\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <DatePicker onChange={onChange} className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={8}>\n                                        <Form.Item\n                                            name={'pre_number_of_pulses'}\n                                            label=\"# of pulses\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <InputNumber className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Divider orientation=\"left\" plain><strong>Post-frac pulses</strong></Divider>\n                                <Row gutter={24}>\n                                    <Col span={8}>\n                                        <Form.Item\n                                            name={'post_start_time'}\n                                            label=\"Start time\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <DatePicker onChange={onChange} className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={8}>\n                                        <Form.Item\n                                            name={'post_end_time'}\n                                            label=\"End time\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <DatePicker onChange={onChange} className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={8}>\n                                        <Form.Item\n                                            name={'post_number_of_pulses'}\n                                            label=\"# of pulses\"\n                                            labelCol={{span: 9, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <InputNumber className=\"w-full\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </Card>\n                    </Panel>\n                    <Panel header={<strong>Notes</strong>} >\n                    <Card>\n                            <Form\n                                name=\"notes_data_form\"\n                                onValuesChange={notesFataFormChange}\n                                autoComplete=\"off\"\n                                initialValues={FormInitialValues.notesFataFormValues}\n                                form={notesFataFormForm}\n                            >\n                                \n                                <Row gutter={24}>\n                                    <Col span={20}>\n                                        <Form.Item\n                                            name={'pre_notes'}\n                                            label=\"Pre-frac pulse notes\"\n                                            labelCol={{span: 5, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <TextArea rows={4} />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={20}>\n                                        <Form.Item\n                                            name={'post_notes'}\n                                            label=\"Post-frac pulse notes\"\n                                            labelCol={{span: 5, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <TextArea rows={4} />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={24}>\n                                    <Col span={20}>\n                                        <Form.Item\n                                            name={'other_notes'}\n                                            label=\"Other notes\"\n                                            labelCol={{span: 5, offset: 0}}\n                                            labelAlign=\"left\"\n                                        >\n                                            <TextArea rows={4} />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </Card>\n                    </Panel>\n                </Collapse>\n                <div className=\"mt-4 w-full text-right\">\n                    {/* <span className=\"mr-4\">Last submitted date: 08/07/2021</span> */}\n                    <Button type=\"primary\" onClick={(e) => handleTrackingSheetSubmit()}>Submit tracking sheet</Button>\n                </div>\n            </Card>\n            {\n                showConfirmationModal && \n                <ConfirmationModal\n                    isModalVisible={showConfirmationModal}\n                    handleCancel={handleCancel}\n                    handleOk={handleAddStageConfirmed}\n                    modalTitle={\"Add stage\"}\n                    modalText={\"Are you sure you want to another stage ?\"}\n                    footerButtons={{cancel_text: 'Cancel', confirm_text: 'Yes'}}\n                    data={modalData}\n                >\n                </ConfirmationModal>\n            }\n        </>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Card, Space, Table, Button } from 'antd';\nimport FAKE_DATA from \"constants/fakeData\";\nimport _ from \"lodash\";\n\nexport default function OcReport() {\n    const [data, setData] = useState(FAKE_DATA.STAGE_REPORT);\n\n    const approveStage = (text, record) => {\n        const index = data.findIndex(d => d.key === record.key);\n        const newData = _.cloneDeep(data);\n        newData[index].approved = true;\n        setData(newData)\n    }\n    \n    const columns = [\n        {\n            title: 'Stage',\n            dataIndex: 'stage',\n            key: 'stage',\n        },\n        {\n            title: 'Pre Frac',\n            dataIndex: 'pre_frac',\n            key: 'pre_frac',\n        },\n        {\n            title: 'Post Frac',\n            dataIndex: 'post_frac',\n            key: 'post_frac',\n        },\n        {\n            title: 'NF',\n            dataIndex: 'nf',\n            key: 'nf',\n        },\n        {\n            title: 'FF',\n            dataIndex: 'ff',\n            key: 'ff',\n        },\n        {\n            title: 'Half length [ft]',\n            dataIndex: 'half_length',\n            key: 'half_length',\n        },\n        {\n            title: 'Width [in]',\n            dataIndex: 'width',\n            key: 'width',\n        },\n        {\n            title: 'Height',\n            dataIndex: 'height',\n            key: 'height',\n        },\n        {\n            title: 'Reserve potential',\n            dataIndex: 'reserve_potential',\n            key: 'reserve_potential',\n        },\n        {\n            title: 'Pore pressure',\n            dataIndex: 'pore_pressure',\n            key: 'pore_pressure',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    {   record.approved \n                        ? 'Approved'\n                        : <Button type=\"primary\" onClick={(e) => approveStage(text, record)}>Approve</Button>\n                    }\n                </Space>\n            ),\n        },\n    ];\n    \n\n    const renderBody = (props, columns) => {\n        return (\n          <tr className={props.className}>\n            {columns.map((item, idx) => {\n                // console.log(item)\n              if (!item.hidden) {\n                return props.children[idx]\n              }\n            })}\n          </tr>\n        );\n    }\n\n    return (\n        <>\n            <Card bordered={false} style={{ width: '100%', marginBottom: '5px' }}>\n                <strong>QC Report</strong>\n            </Card>\n            <Card>\n                <Table\n                    columns={columns}\n                    dataSource={data}\n                    components={{\n                        body: {\n                          row: (props) => renderBody(props, columns)\n                        },\n                      }}\n                />\n                <Button type=\"primary\" disabled={data.filter(d => d.approved).length < 1}>Export stage report</Button>\n            </Card>\n        </>\n    );\n}\n","import axios from \"axiosConfig\";\nimport config from \"config\";\nimport ENUMS from \"constants/appEnums\";\nimport React, { useState } from \"react\";\nimport allActions from 'redux/actions/index';\nimport { useAppContext } from \"util/ContextUtil\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Input, Card, Divider, Button, Row, Col, Spin } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useToasts } from \"react-toast-notifications\";\nimport HttpUtil from \"util/HttpUtil\";\n\nexport default function Login() {\n    let history = useHistory();\n    let location = useLocation();\n    const { addToast } = useToasts();\n    const dispatch = useDispatch();\n    const { userHasAuthenticated } = useAppContext();\n\n    //loader\n    const [isLoading, setIsLoading] = useState(false);\n\n    /**\n     * Method to make API call for user login\n     */\n    const handleLogin = (data) => {\n        setIsLoading(true);\n        axios.post(config.API_URL + ENUMS.API_ROUTES.AUTH_LOGIN,\n            {\n                username: data.username,\n                password: data.password\n            }, {...HttpUtil.authHttpHeaders})\n            .then(res => {\n                setIsLoading(false);\n                if (res.status === 200 && res.data) {\n                    saveUserState(res.data.data);\n                }\n            })\n            .catch(e => {\n                setIsLoading(false);\n                if(e.response.status === 401) {\n                    addToast(\"Incorrect username or password!\", { appearance: 'error', autoDismiss: true });\n                }\n            });\n    }\n\n    /**\n     * Method to save user data in redux store and set local storage with JWT\n     * @param {Object} data \n     */\n    const saveUserState = (data) => {\n        console.log(data)\n        localStorage.setItem('JWT', data.access_token);\n        userHasAuthenticated(true);\n        dispatch(allActions.authActions.setUserState(data.user));\n        dispatch(allActions.authActions.setUserProjectIds(data.project_ids));\n\n        if (location && location.state && location.state.from) {\n            history.push({\n                pathname: location.state.from.pathname,\n                search: location.state.from.search,\n                state: location.state.from.state\n            });\n        } else {\n            history.push(ENUMS.ROUTES.ADMIN + ENUMS.ROUTES.PROJECT);\n        }\n    }\n\n    return (\n        <>\n            <div className=\"container mx-auto px-4 h-full login-container\">\n                <div className=\"flex content-center items-center justify-center h-full\">\n                    <div className=\"w-full lg:w-4/12 px-4\">\n                        <Card className=\"text-center login-header-card\">\n                            <img alt=\"seismos logo\" className=\"mx-auto\" src={require(\"assets/img/seismos/seismos_logo_animated.gif\").default}></img>\n                        </Card>\n                        <Card>\n                            <h6 className=\"text-blueGray-500 text-sm text-center\">\n                                Log in to Seismos\n                            </h6>\n                            <Divider></Divider>\n                            <Form\n                                name=\"normal_login\"\n                                className=\"login-form\"\n                                initialValues={{\n                                    remember: true,\n                                }}\n                                onFinish={handleLogin}\n                                >\n                                <Form.Item\n                                    name=\"username\"\n                                    rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your Username!',\n                                    },\n                                    ]}\n                                >\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"password\"\n                                    rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your Password!',\n                                    },\n                                    ]}\n                                >\n                                    <Input\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    />\n                                </Form.Item>\n                                <Row gutter={24} className=\"mb-6\">\n                                    <Col span={12}>\n                                        {/* <Form.Item name=\"remember\" noStyle>\n                                            <Checkbox>Remember me</Checkbox>\n                                        </Form.Item> */}\n                                    </Col>\n                                    \n                                </Row>\n\n                                <Form.Item className=\"text-center\">\n                                    {\n                                        isLoading ? \n                                        <Spin />\n                                        : <Button type=\"primary\" htmlType=\"submit\" className=\"w-full login-form-button\">\n                                                Log in\n                                        </Button>\n                                    }\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                        <div className=\"flex flex-wrap mt-2 relative justify-between\">\n                            <div className=\"w-1/2\">\n                                <a\n                                    href=\"#pablo\"\n                                    onClick={(e) => e.preventDefault()}\n                                    className=\"text-seismos-primary\"\n                                >\n                                    Forgot password?\n                                </a>\n                            </div>\n                            <div className=\"w-1/2 text-right\">\n                                <Link to=\"/auth/register\" className=\"block text-seismos-primary\">\n                                    Create new account\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n","import React from \"react\";\n\nexport default function Register() {\n    return (\n        <>\n            <div className=\"container mx-auto px-4 h-full\">\n                <div className=\"flex content-center items-center justify-center h-full\">\n                    <div className=\"w-full lg:w-6/12 px-4\">\n                        <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-200 border-0\">\n                            <div className=\"rounded-t mb-0 px-6 py-6\">\n                                <div className=\"text-center mb-3\">\n                                    <h6 className=\"text-blueGray-500 text-sm font-bold\">\n                                        Sign up\n                                    </h6>\n                                </div>\n                                <hr className=\"mt-6 border-b-1 border-blueGray-300\" />\n                            </div>\n                            <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\n                                <form>\n                                    <div className=\"relative w-full mb-3\">\n                                        <label\n                                            className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                                            htmlFor=\"grid-password\"\n                                        >\n                                            Name\n                                        </label>\n                                        <input\n                                            type=\"email\"\n                                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                                            placeholder=\"Name\"\n                                        />\n                                    </div>\n\n                                    <div className=\"relative w-full mb-3\">\n                                        <label\n                                            className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                                            htmlFor=\"grid-password\"\n                                        >\n                                            Email\n                                        </label>\n                                        <input\n                                            type=\"email\"\n                                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                                            placeholder=\"Email\"\n                                        />\n                                    </div>\n\n                                    <div className=\"relative w-full mb-3\">\n                                        <label\n                                            className=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                                            htmlFor=\"grid-password\"\n                                        >\n                                            Password\n                                        </label>\n                                        <input\n                                            type=\"password\"\n                                            className=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                                            placeholder=\"Password\"\n                                        />\n                                    </div>\n\n                                    <div>\n                                        <label className=\"inline-flex items-center cursor-pointer\">\n                                            <input\n                                                id=\"customCheckLogin\"\n                                                type=\"checkbox\"\n                                                className=\"form-checkbox border-0 rounded text-blueGray-700 ml-1 w-5 h-5 ease-linear transition-all duration-150\"\n                                            />\n                                            <span className=\"ml-2 text-sm font-semibold text-blueGray-600\">\n                                                I agree with the{\" \"}\n                                                <a\n                                                    href=\"#pablo\"\n                                                    className=\"text-lightBlue-500\"\n                                                    onClick={(e) => e.preventDefault()}\n                                                >\n                                                    Privacy Policy\n                                                </a>\n                                            </span>\n                                        </label>\n                                    </div>\n\n                                    <div className=\"text-center mt-6\">\n                                        <button\n                                            className=\"bg-blueGray-800 text-white active:bg-blueGray-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\n                                            type=\"button\"\n                                        >\n                                            Create Account\n                                        </button>\n                                    </div>\n                                    <div className=\"flex justify-center mt-4\"><small>Already have an account? <a href=\"/auth/login\" className=\"text-lightBlue-500\"><strong>Login</strong></a></small></div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n","import { Card } from 'antd';\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from 'react-redux';\n\n// components\nexport default function Account() {\n    const user = useSelector(state => state.authReducer.user);\n\n    useEffect(() => {\n        console.log(user)\n    })\n    return (\n        <>\n            <div style={{minHeight: \"80vh\"}} className=\"flex justify-center items-center bg-white\">\n                <div>\n                    <Card title=\"User Account\"  style={{width: '500px'}}>\n                        <div>\n                            Name: {user.username}\n                        </div>\n                        <div>\n                            Email: {user.email}\n                        </div>\n                    </Card>\n                </div>\n            </div>\n        </>\n    )\n}","/*eslint-disable*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// components\n\nimport PagesDropdown from \"components/Dropdowns/PagesDropdown.js\";\n\nexport default function Navbar(props) {\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\n  return (\n    <>\n      <nav className=\"top-0 absolute z-50 w-full flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg bg-black\">\n        <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\n          <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n            <Link\n              className=\"text-white text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase pb-0\"\n              to=\"/\"\n            >\n              <img src={require(\"assets/img/seismos/seismos_logo_animated.gif\").default} className=\"logo-width\"></img>\n            </Link>\n            <button\n              className=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n              type=\"button\"\n              onClick={() => setNavbarOpen(!navbarOpen)}\n            >\n              <i className=\"text-white fas fa-bars\"></i>\n            </button>\n          </div>\n          <div\n            className={\n              \"lg:flex flex-grow items-center bg-white lg:bg-opacity-0 lg:shadow-none\" +\n              (navbarOpen ? \" block rounded shadow-lg\" : \" hidden\")\n            }\n            id=\"example-navbar-warning\"\n          >\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto mb-0\">\n              <li className=\"flex items-center\">\n                <Link\n                  to=\"/auth/login\"\n                  className={\n                    \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent lg:text-white \"\n                  }\n                >\n                  Login\n                </Link>\n                <Link\n                  to=\"/auth/register\"\n                  className={\n                    \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent lg:text-white \"\n                  }\n                >\n                  Register\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n","import React from \"react\";\nimport routes from \"routes/routes.js\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ENUMS from \"constants/appEnums\";\nimport APP_CONSTANTS from \"constants/appConstants\";\n\n// components\nimport Navbar from \"components/Navbars/AuthNavbar.js\";\n\nexport default function Auth(props) {\n  const getRoutes = (routes) => {\n    if (props.isAuthenticated && APP_CONSTANTS.LOGIN_TO_APP_ROUTES.indexOf(props.location.pathname) > -1) {\n      return <Redirect to=\"/admin/project\" />\n    }\n    return routes.map((prop, key) => {\n      if (prop.layout === ENUMS.ROUTES.AUTH) {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      <Navbar transparent />\n      <main>\n        <section className=\"relative w-full h-full min-h-screen flex items-center\">\n          <div\n            className=\"absolute top-0 w-full h-full bg-no-repeat bg-full\"\n          ></div>\n          <Switch>\n              {getRoutes(routes)}\n          </Switch>\n        </section>\n      </main>\n    </>\n  );\n}\n","import { Layout, Menu } from 'antd';\nimport allActions from \"redux/actions\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { useAppContext } from \"util/ContextUtil\";\nimport React from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\n\nconst { Header} = Layout;\n\nexport default function Navbar(props) {\n    let history = useHistory();\n    const dispatch = useDispatch();\n    const { addToast } = useToasts();\n    const { userHasAuthenticated } = useAppContext();\n\n    const logOutUser = (data) => {\n        userHasAuthenticated(false);\n        dispatch(allActions.authActions.userLoggedOut());\n        localStorage.removeItem('JWT');\n        history.push('/auth/login');\n        \n        addToast(data.message, { \n            appearance: 'success',\n            autoDismiss: true\n        });\n    }\n\n    const handleMenuClick = (e) => {\n        if(e.key === \"logout\") {\n            logOutUser({message: 'Logged out successfully'});\n        } else if (e.key === \"project\") {\n            history.push(\"/admin/project\");\n        } else if (e.key === \"account_settings\") {\n            history.push(\"/admin/account\");\n        }\n    }\n    \n    const handleLogoClick = () => {\n        history.push('/admin/project');\n    }\n\n    return (\n        <>\n        {/* Navbar */}\n        <Header className=\"seismos-app-header\">\n            {\n                props.withLogo \n                ? <div className=\"logo-wo-sidebar\">\n                    <img alt=\"seismos logo\" src={require(\"assets/img/seismos/seismos_logo_animated.gif\").default} onClick={() => handleLogoClick()}></img>\n                </div>\n                : ''\n            }\n            <Menu theme=\"dark\" mode=\"horizontal\" className=\"justify-end\" onClick={(e) => handleMenuClick(e)}>\n                <Menu.Item key={'project'}>{`Projects`}</Menu.Item>\n                <Menu.Item key={'account_settings'}>{`Account Settings`}</Menu.Item>\n                <Menu.Item key={'logout'}>{`Log out`}</Menu.Item>\n            </Menu>\n        </Header>\n        {/* End Navbar */}\n        </>\n    );\n}\n","import routes from \"routes/routes.js\";\nimport axios from \"axiosConfig\";\nimport config from \"config\";\nimport { useSelector } from \"react-redux\";\nimport { Layout, Menu, Breadcrumb, Spin } from 'antd';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route, Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport _ from \"lodash\";\n\n// components\nimport ENUMS from \"constants/appEnums\";\nimport APP_CONSTANTS from \"constants/appConstants\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport HttpUtil from \"util/HttpUtil\";\nimport allActions from \"redux/actions\";\n\n\nconst { Content, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default function Admin(props) {\n    const history = useHistory();\n    const location = useLocation();\n\n    const dispatch = useDispatch();\n\n    // const user = useSelector(state => state.authReducer.user);\n    const projectIds = useSelector(state => state.authReducer.userProjectIds);\n    \n    const [noSidebarLayout, setNoSidebarLayout] = useState(false);\n    const [sidebarMenu, setSidebarMenu] = useState([]);\n    const [defaultSelectedMenuKey, setDefaultSelectedMenuKey] = useState();\n    const [defaultOpenMenu, setDefaultOpenMenu] = useState();\n    // const [pages, setPages] = useState([]);\n\n    const getRoutes = (routes) => {\n        if (!props.isAuthenticated) {\n          return <Redirect to={{\n              pathname: '/auth/login',\n              state: { from: props.location }\n            }}\n          />\n        }\n        return routes.map((prop, key) => {\n        if (prop.layout === ENUMS.ROUTES.ADMIN) {\n            return (\n            <Route\n                path={prop.layout + prop.path}\n                component={prop.component}\n                key={key}\n            />\n            );\n        } else {\n            return null;\n        }\n        });\n    };\n\n    const menuChange = (path, wellId, projectId) => {\n        history.push({\n            pathname: '/admin' + path,\n            search: '?projectId=' + projectId + '&wellId=' + wellId,\n            state: { projectId: projectId, wellId: wellId }\n        });\n    }\n\n    const fetchProjectById = (projectId) => {\n        if (projectId) {\n            //FETCH PROJECT DETAILS\n            axios.get(config.API_URL + ENUMS.API_ROUTES.PROJECT_GET + '/' + projectId,\n            {\n                ...HttpUtil.adminHttpHeaders(),\n            })\n            .then(res => {\n                if(res.status == 200 && res.data) {\n                    setNoSidebarLayout(false);\n                    const projectId = res.data.data.project.id;\n                    dispatch(allActions.authActions.setCurrentProject(res.data.data.project));\n                    const wellInfo = _.sortBy(res.data.data.project.wells, function(w) { return w.id; });\n                    const menu = wellInfo.map((well, index) => {\n                        return <SubMenu key={\"menu\"+(well.id)} title={well.well_name}>\n                            <Menu.Item key={\"data-input/\" + well.id} onClick={() => { menuChange(ENUMS.ROUTES.DATA_INPUT, well.id, projectId) }}>Data input</Menu.Item>\n                            <Menu.Item key={\"daily-log/\" + well.id} onClick={() => { menuChange(ENUMS.ROUTES.DAILY_LOG, well.id, projectId) }}>Daily log</Menu.Item>\n                            <Menu.Item key={\"default-values/\" + well.id} onClick={() => { menuChange(ENUMS.ROUTES.DEFAULT_VALUES, well.id, projectId) }}>Default values</Menu.Item>\n                            <Menu.Item key={\"tracking-sheet/\" + well.id} onClick={() => { menuChange(ENUMS.ROUTES.TRACKING_SHEET, well.id, projectId) }}>Tracking sheet</Menu.Item>\n                            <Menu.Item key={\"qc-report/\" + well.id} onClick={() => { menuChange(ENUMS.ROUTES.OC_REPORT, well.id, projectId) }}>QC report</Menu.Item>\n                        </SubMenu>\n                    });\n                    setSidebarMenu(menu);\n                }\n            })\n            .catch(error => {\n                if (error.response) {\n                    console.log(error.response);\n                }\n            })\n        } else {\n            const notFoundUrl = ENUMS.ROUTES.AUTH + ENUMS.ROUTES.NOTFOUND;\n            history.push(notFoundUrl);\n        }\n    }\n\n    useEffect(() => {\n        if (props.isAuthenticated) {\n            console.log('here', projectIds)\n            if (APP_CONSTANTS.ROUTES_WITHOUT_SIDEBAR.indexOf(history.location.pathname) > -1) {\n                setNoSidebarLayout(true);\n                setSidebarMenu([]);\n                // setPages(history.location.pathname.split(\"/admin/\")[1].split(\"/\")[0].split(\"-\"));\n            } else {\n                if (sidebarMenu.length < 1) {\n                    if (location.state && location.state.projectId) {\n                        fetchProjectById(location.state.projectId);\n\n                        const subMenu = location.pathname.split(\"/admin/\")[1] + '/' + location.state.wellId;\n                        const mainMenu = \"menu\" + location.state.wellId;\n                        setDefaultSelectedMenuKey(subMenu); // sub - inside\n                        setDefaultOpenMenu(mainMenu); // main\n                    }\n                    else if (location.search) {\n                        const params = new URLSearchParams(location.search);\n                        const projectIdSearch = params.get('projectId');\n                        const wellIdSearch = params.get('wellId');\n                        fetchProjectById(projectIdSearch);\n                        \n                        const subMenu = location.pathname.split(\"/admin/\")[1] + '/' + wellIdSearch;\n                        const mainMenu = \"menu\" + wellIdSearch;\n                        setDefaultSelectedMenuKey(subMenu); // sub - inside\n                        setDefaultOpenMenu(mainMenu); // main\n                    } else {\n                        const notFoundUrl = ENUMS.ROUTES.AUTH + ENUMS.ROUTES.NOTFOUND;\n                        history.push(notFoundUrl);\n                    }\n                }\n                // const defaultSelectedSubMenu = history.location.pathname.split(\"/admin/\")[1];\n                // const defaultOpenMenu = \"menu\" + history.location.pathname.split(\"/admin/\")[1].split(\"/\")[1];\n                // console.log(defaultSelectedSubMenu)\n                // setDefaultSelectedMenuKey(defaultSelectedSubMenu);\n                // setDefaultOpenMenu(defaultOpenMenu);\n                // console.log(defaultOpenMenu);\n                // setNoSidebarLayout(false);\n                // if project is selected\n                // if(!_.isEmpty(project)) {\n                //     const menuChange = (path, id) => {\n                //         history.push('/admin' + path + '/'+ id)\n                //     }\n                    \n                //     // const wellInfo = project.wellInfoValues;\n                //     console.log(wellInfo);\n                //     const menu = wellInfo.map((well, index) => {\n                //         return <SubMenu key={\"menu\"+(well.id)} title={well.well_name}>\n                //             <Menu.Item key={\"data-input/\" + well.id} onClick={() => { menuChange(ENUMS.ROUTES.DATA_INPUT, well.id) }}>Data input</Menu.Item>\n                //             <Menu.Item key={\"daily-log/\" + well.id} onClick={() => { menuChange(ENUMS.ROUTES.DAILY_LOG, well.id) }}>Daily log</Menu.Item>\n                //             <Menu.Item key={\"default-values/\" + well.id} onClick={() => { menuChange(ENUMS.ROUTES.DEFAULT_VALUES, well.id) }}>Default values</Menu.Item>\n                //             <Menu.Item key={\"tracking-sheet/\" + well.id} onClick={() => { menuChange(ENUMS.ROUTES.TRACKING_SHEET, well.id) }}>Tracking sheet</Menu.Item>\n                //             <Menu.Item key={\"qc-report/\" + well.id} onClick={() => { menuChange(ENUMS.ROUTES.OC_REPORT, well.id) }}>QC report</Menu.Item>\n                //         </SubMenu>\n                //     });\n                //     console.log(menu)\n                //     setSidebarMenu(menu);\n                // };\n            }\n        } else {\n            history.push('/auth/login')\n        }\n    }, []);\n\n    useEffect(() => {\n        return history.listen((location) => {\n            if (props.isAuthenticated) {\n                if (APP_CONSTANTS.ROUTES_WITHOUT_SIDEBAR.indexOf(history.location.pathname) > -1) {\n                    setNoSidebarLayout(true);\n                    setSidebarMenu([]);\n                    // setPages(history.location.pathname.split(\"/admin/\")[1].split(\"/\")[0].split(\"-\"));\n                } else {\n                    if (sidebarMenu.length < 1) {\n                        if (location.state && location.state.projectId) {\n                            fetchProjectById(location.state.projectId);\n                        }\n                        else if (location.search) {\n                            const params = new URLSearchParams(location.search);\n                            const projectIdSearch = params.get('projectId');\n                            fetchProjectById(projectIdSearch);\n                        }\n                    }\n                }\n            } else {\n                history.push('/auth/login')\n            }\n        }) \n    }, [history])\n\n    return (\n        <>\n            {\n                noSidebarLayout\n                ? <Layout className=\"layout\">\n                    <AdminNavbar withLogo={true} />\n                    <Content style={{ padding: '0 50px' }}>\n                        {/* <Breadcrumb style={{ margin: '16px 0' }}>\n                            {\n                                pages.map((page, index) => {\n                                    return <Breadcrumb.Item key={index}><span className=\"capitalize\">{page}</span></Breadcrumb.Item>\n                                })\n                            }\n                            \n                        </Breadcrumb> */}\n                            {/* <Breadcrumb.Item>List</Breadcrumb.Item>\n                            <Breadcrumb.Item>App</Breadcrumb.Item> */}\n                        <div className=\"site-layout-content mb-12 p-5 bg-white\">\n                            <Switch>\n                                {getRoutes(routes)}\n                                <Redirect from=\"*\" to=\"/admin/dashboard\" />\n                            </Switch>\n                        </div>\n                    </Content>\n                </Layout>\n                : ((sidebarMenu.length > 0)\n                    ? <Layout>\n                        <Sider\n                            style={{\n                                overflow: 'auto',\n                                height: '100vh',\n                                position: 'fixed',\n                                left: 0,\n                            }}\n                            width={250}\n                            className=\"site-layout-background\"\n                        >\n                            <div className=\"logo\"><img alt=\"seismos logo\" src={require(\"assets/img/seismos/seismos_logo_animated.gif\").default}></img></div>\n                            <Menu theme=\"\" mode=\"inline\" defaultSelectedKeys={[defaultSelectedMenuKey]} defaultOpenKeys={[defaultOpenMenu]} className=\"sidebar-margin-top\">\n                                {sidebarMenu}\n                            </Menu>\n                        </Sider>\n                        <Layout className=\"site-layout with-sedebar\" style={{ marginLeft: 250 }}>\n                            <AdminNavbar withLogo={false}/>\n                            <Content style={{ margin: '88px 16px 0', overflow: 'initial' }}>\n                                <Switch>\n                                    {getRoutes(routes)}\n                                    <Redirect from=\"*\" to=\"/admin/dashboard\" />\n                                </Switch>\n                            </Content>\n                        </Layout>\n                    </Layout>\n                    : (<div className=\"spin-overlay\"><Spin size=\"large\" spinning={true}></Spin></div>))\n            }\n        </>\n    );\n}\n","import config from \"config\";\nimport axios from \"axiosConfig\";\nimport Auth from \"layouts/Auth.js\";\nimport Admin from \"layouts/Admin.js\";\nimport ENUMS from \"constants/appEnums\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from 'redux/actions/index';\nimport { AppContext } from \"util/ContextUtil\";\nimport React, { useState, useEffect } from \"react\";\nimport NotFound from \"components/NotFound/NotFound\";\nimport { useToasts } from 'react-toast-notifications';\nimport { BrowserRouter, Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport FAKE_DATA from \"constants/fakeData\";\nimport HttpUtil from \"util/HttpUtil\";\n\nexport default function Application () {\n    const dispatch = useDispatch();\n    const { addToast } = useToasts();\n    const history = useHistory();\n\n    const [isAuthenticated, userHasAuthenticated] = useState(false);\n    const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n    const logOutUser = () => {\n        userHasAuthenticated(false);\n        dispatch(allActions.authActions.userLoggedOut());\n        localStorage.removeItem('JWT');\n        history.push('/auth/login');\n    }\n\n    /**\n     * Method to save user data in redux store and set local storage with JWT\n     * @param {Object} data \n     */\n     const saveUserState = (data) => {\n        console.log(data, 'here');\n        userHasAuthenticated(true);\n        dispatch(allActions.authActions.setUserState(data.user));\n        dispatch(allActions.authActions.setUserProjectIds(data.project_ids));\n    }\n\n\n    useEffect(() => {\n        const onLoad = async () => {\n            if (localStorage.getItem('JWT')) {\n                axios.get(config.API_URL + ENUMS.API_ROUTES.AUTH_STATUS,\n                {\n                    ...HttpUtil.adminHttpHeaders()\n                })\n                .then(res => {\n                    saveUserState(res.data.data);\n                    userHasAuthenticated(true);\n                    setIsAuthenticating(false);\n                })\n                .catch(error => {\n                    setIsAuthenticating(false);\n                    if (error.response) {\n                        // logOutUser();\n                    }\n                })\n            }\n            else {\n                setIsAuthenticating(false);\n            }\n        }      \n        onLoad();\n    }, [addToast, dispatch]);\n  \n    return (\n        <>\n            { !isAuthenticating &&\n            <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route path={ENUMS.ROUTES.ADMIN} render={props => <Admin {...props} isAuthenticated={isAuthenticated} />} />\n                        <Route path={ENUMS.ROUTES.AUTH} render={props => <Auth {...props} isAuthenticated={isAuthenticated} />} />\n                        {/* \n                        // TODO: remove the comments\n                        <Redirect from=\"/\" to=\"/auth/home\" /> \n                        */} \n                        <Redirect from=\"/\" to=\"/auth/login\" />\n                        <Route render={props => <NotFound {...props} />} />\n                    </Switch>\n                </BrowserRouter>\n            </AppContext.Provider>\n            }\n        </>\n    )\n}\n","import React from \"react\";\nimport store from \"redux/store\";\nimport Application from \"./app\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport { ToastProvider } from 'react-toast-notifications';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/styles/tailwind.css\";\nimport \"assets/styles/style.css\";\nimport '../node_modules/antd/dist/antd.css';\n\nconst App = () => {\n  return (\n      <Provider store={store}>\n          <ToastProvider>\n              <Application/>\n          </ToastProvider>\n      </Provider>\n  )\n}\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}